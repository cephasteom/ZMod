(function(Ke){typeof define=="function"&&define.amd?define(Ke):Ke()})(function(){"use strict";const Ke="15.1.22",Ni=(s,t,e)=>({endTime:t,insertTime:e,type:"exponentialRampToValue",value:s}),Oi=(s,t,e)=>({endTime:t,insertTime:e,type:"linearRampToValue",value:s}),_s=(s,t)=>({startTime:t,type:"setValue",value:s}),Di=(s,t,e)=>({duration:e,startTime:t,type:"setValueCurve",values:s}),Ei=(s,t,{startTime:e,target:n,timeConstant:i})=>n+(t-n)*Math.exp((e-s)/i),ke=s=>s.type==="exponentialRampToValue",An=s=>s.type==="linearRampToValue",oe=s=>ke(s)||An(s),gs=s=>s.type==="setValue",Qt=s=>s.type==="setValueCurve",Nn=(s,t,e,n)=>{const i=s[t];return i===void 0?n:oe(i)||gs(i)?i.value:Qt(i)?i.values[i.values.length-1]:Ei(e,Nn(s,t-1,i.startTime,n),i)},Ii=(s,t,e,n,i)=>e===void 0?[n.insertTime,i]:oe(e)?[e.endTime,e.value]:gs(e)?[e.startTime,e.value]:Qt(e)?[e.startTime+e.duration,e.values[e.values.length-1]]:[e.startTime,Nn(s,t-1,e.startTime,i)],ys=s=>s.type==="cancelAndHold",vs=s=>s.type==="cancelScheduledValues",ae=s=>ys(s)||vs(s)?s.cancelTime:ke(s)||An(s)?s.endTime:s.startTime,Mi=(s,t,e,{endTime:n,value:i})=>e===i?i:0<e&&0<i||e<0&&i<0?e*(i/e)**((s-t)/(n-t)):0,Ri=(s,t,e,{endTime:n,value:i})=>e+(s-t)/(n-t)*(i-e),fo=(s,t)=>{const e=Math.floor(t),n=Math.ceil(t);return e===n?s[e]:(1-(t-e))*s[e]+(1-(n-t))*s[n]},mo=(s,{duration:t,startTime:e,values:n})=>{const i=(s-e)/t*(n.length-1);return fo(n,i)},On=s=>s.type==="setTarget";class _o{constructor(t){this._automationEvents=[],this._currenTime=0,this._defaultValue=t}[Symbol.iterator](){return this._automationEvents[Symbol.iterator]()}add(t){const e=ae(t);if(ys(t)||vs(t)){const n=this._automationEvents.findIndex(r=>vs(t)&&Qt(r)?r.startTime+r.duration>=e:ae(r)>=e),i=this._automationEvents[n];if(n!==-1&&(this._automationEvents=this._automationEvents.slice(0,n)),ys(t)){const r=this._automationEvents[this._automationEvents.length-1];if(i!==void 0&&oe(i)){if(r!==void 0&&On(r))throw new Error("The internal list is malformed.");const o=r===void 0?i.insertTime:Qt(r)?r.startTime+r.duration:ae(r),a=r===void 0?this._defaultValue:Qt(r)?r.values[r.values.length-1]:r.value,c=ke(i)?Mi(e,o,a,i):Ri(e,o,a,i),u=ke(i)?Ni(c,e,this._currenTime):Oi(c,e,this._currenTime);this._automationEvents.push(u)}if(r!==void 0&&On(r)&&this._automationEvents.push(_s(this.getValue(e),e)),r!==void 0&&Qt(r)&&r.startTime+r.duration>e){const o=e-r.startTime,a=(r.values.length-1)/r.duration,c=Math.max(2,1+Math.ceil(o*a)),u=o/(c-1)*a,l=r.values.slice(0,c);if(u<1)for(let h=1;h<c;h+=1){const p=u*h%1;l[h]=r.values[h-1]*(1-p)+r.values[h]*p}this._automationEvents[this._automationEvents.length-1]=Di(l,r.startTime,o)}}}else{const n=this._automationEvents.findIndex(o=>ae(o)>e),i=n===-1?this._automationEvents[this._automationEvents.length-1]:this._automationEvents[n-1];if(i!==void 0&&Qt(i)&&ae(i)+i.duration>e)return!1;const r=ke(t)?Ni(t.value,t.endTime,this._currenTime):An(t)?Oi(t.value,e,this._currenTime):t;if(n===-1)this._automationEvents.push(r);else{if(Qt(t)&&e+t.duration>ae(this._automationEvents[n]))return!1;this._automationEvents.splice(n,0,r)}}return!0}flush(t){const e=this._automationEvents.findIndex(n=>ae(n)>t);if(e>1){const n=this._automationEvents.slice(e-1),i=n[0];On(i)&&n.unshift(_s(Nn(this._automationEvents,e-2,i.startTime,this._defaultValue),i.startTime)),this._automationEvents=n}}getValue(t){if(this._automationEvents.length===0)return this._defaultValue;const e=this._automationEvents.findIndex(o=>ae(o)>t),n=this._automationEvents[e],i=(e===-1?this._automationEvents.length:e)-1,r=this._automationEvents[i];if(r!==void 0&&On(r)&&(n===void 0||!oe(n)||n.insertTime>t))return Ei(t,Nn(this._automationEvents,i-1,r.startTime,this._defaultValue),r);if(r!==void 0&&gs(r)&&(n===void 0||!oe(n)))return r.value;if(r!==void 0&&Qt(r)&&(n===void 0||!oe(n)||r.startTime+r.duration>t))return t<r.startTime+r.duration?mo(t,r):r.values[r.values.length-1];if(r!==void 0&&oe(r)&&(n===void 0||!oe(n)))return r.value;if(n!==void 0&&ke(n)){const[o,a]=Ii(this._automationEvents,i,r,n,this._defaultValue);return Mi(t,o,a,n)}if(n!==void 0&&An(n)){const[o,a]=Ii(this._automationEvents,i,r,n,this._defaultValue);return Ri(t,o,a,n)}return this._defaultValue}}const go=s=>({cancelTime:s,type:"cancelAndHold"}),yo=s=>({cancelTime:s,type:"cancelScheduledValues"}),vo=(s,t)=>({endTime:t,type:"exponentialRampToValue",value:s}),wo=(s,t)=>({endTime:t,type:"linearRampToValue",value:s}),To=(s,t,e)=>({startTime:t,target:s,timeConstant:e,type:"setTarget"}),bo=()=>new DOMException("","AbortError"),xo=s=>(t,e,[n,i,r],o)=>{s(t[i],[e,n,r],a=>a[0]===e&&a[1]===n,o)},Co=s=>(t,e,n)=>{const i=[];for(let r=0;r<n.numberOfInputs;r+=1)i.push(new Set);s.set(t,{activeInputs:i,outputs:new Set,passiveInputs:new WeakMap,renderer:e})},So=s=>(t,e)=>{s.set(t,{activeInputs:new Set,passiveInputs:new WeakMap,renderer:e})},Ae=new WeakSet,Pi=new WeakMap,ws=new WeakMap,Fi=new WeakMap,Ts=new WeakMap,Dn=new WeakMap,Vi=new WeakMap,bs=new WeakMap,xs=new WeakMap,Cs=new WeakMap,qi={construct(){return qi}},ko=s=>{try{const t=new Proxy(s,qi);new t}catch{return!1}return!0},Li=/^import(?:(?:[\s]+[\w]+|(?:[\s]+[\w]+[\s]*,)?[\s]*\{[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?(?:[\s]*,[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?)*[\s]*}|(?:[\s]+[\w]+[\s]*,)?[\s]*\*[\s]+as[\s]+[\w]+)[\s]+from)?(?:[\s]*)("([^"\\]|\\.)+"|'([^'\\]|\\.)+')(?:[\s]*);?/,Wi=(s,t)=>{const e=[];let n=s.replace(/^[\s]+/,""),i=n.match(Li);for(;i!==null;){const r=i[1].slice(1,-1),o=i[0].replace(/([\s]+)?;?$/,"").replace(r,new URL(r,t).toString());e.push(o),n=n.slice(i[0].length).replace(/^[\s]+/,""),i=n.match(Li)}return[e.join(";"),n]},ji=s=>{if(s!==void 0&&!Array.isArray(s))throw new TypeError("The parameterDescriptors property of given value for processorCtor is not an array.")},Bi=s=>{if(!ko(s))throw new TypeError("The given value for processorCtor should be a constructor.");if(s.prototype===null||typeof s.prototype!="object")throw new TypeError("The given value for processorCtor should have a prototype.")},Ao=(s,t,e,n,i,r,o,a,c,u,l,h,p)=>{let f=0;return(d,m,_={credentials:"omit"})=>{const y=l.get(d);if(y!==void 0&&y.has(m))return Promise.resolve();const b=u.get(d);if(b!==void 0){const g=b.get(m);if(g!==void 0)return g}const x=r(d),S=x.audioWorklet===void 0?i(m).then(([g,w])=>{const[T,v]=Wi(g,w),N=`${T};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${v}
})})(window,'_AWGS')`;return e(N)}).then(()=>{const g=p._AWGS.pop();if(g===void 0)throw new SyntaxError;n(x.currentTime,x.sampleRate,()=>g(class{},void 0,(w,T)=>{if(w.trim()==="")throw t();const v=xs.get(x);if(v!==void 0){if(v.has(w))throw t();Bi(T),ji(T.parameterDescriptors),v.set(w,T)}else Bi(T),ji(T.parameterDescriptors),xs.set(x,new Map([[w,T]]))},x.sampleRate,void 0,void 0))}):Promise.all([i(m),Promise.resolve(s(h,h))]).then(([[g,w],T])=>{const v=f+1;f=v;const[N,A]=Wi(g,w),D=`${N};((AudioWorkletProcessor,registerProcessor)=>{${A}
})(${T?"AudioWorkletProcessor":"class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}"},(n,p)=>registerProcessor(n,class extends p{${T?"":"__c = (a) => a.forEach(e=>this.__b.add(e.buffer));"}process(i,o,p){${T?"":"i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));"}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${v}',class extends AudioWorkletProcessor{process(){return !1}})`,V=new Blob([D],{type:"application/javascript; charset=utf-8"}),R=URL.createObjectURL(V);return x.audioWorklet.addModule(R,_).then(()=>{if(a(x))return x;const P=o(x);return P.audioWorklet.addModule(R,_).then(()=>P)}).then(P=>{if(c===null)throw new SyntaxError;try{new c(P,`__sac${v}`)}catch{throw new SyntaxError}}).finally(()=>URL.revokeObjectURL(R))});return b===void 0?u.set(d,new Map([[m,S]])):b.set(m,S),S.then(()=>{const g=l.get(d);g===void 0?l.set(d,new Set([m])):g.add(m)}).finally(()=>{const g=u.get(d);g!==void 0&&g.delete(m)}),S}},Vt=(s,t)=>{const e=s.get(t);if(e===void 0)throw new Error("A value with the given key could not be found.");return e},En=(s,t)=>{const e=Array.from(s).filter(t);if(e.length>1)throw Error("More than one element was found.");if(e.length===0)throw Error("No element was found.");const[n]=e;return s.delete(n),n},Ui=(s,t,e,n)=>{const i=Vt(s,t),r=En(i,o=>o[0]===e&&o[1]===n);return i.size===0&&s.delete(t),r},tn=s=>Vt(Vi,s),Ne=s=>{if(Ae.has(s))throw new Error("The AudioNode is already stored.");Ae.add(s),tn(s).forEach(t=>t(!0))},Gi=s=>"port"in s,en=s=>{if(!Ae.has(s))throw new Error("The AudioNode is not stored.");Ae.delete(s),tn(s).forEach(t=>t(!1))},Ss=(s,t)=>{!Gi(s)&&t.every(e=>e.size===0)&&en(s)},No=(s,t,e,n,i,r,o,a,c,u,l,h,p)=>{const f=new WeakMap;return(d,m,_,y,b)=>{const{activeInputs:x,passiveInputs:S}=r(m),{outputs:g}=r(d),w=a(d),T=v=>{const N=c(m),A=c(d);if(v){const k=Ui(S,d,_,y);s(x,d,k,!1),!b&&!h(d)&&e(A,N,_,y),p(m)&&Ne(m)}else{const k=n(x,d,_,y);t(S,y,k,!1),!b&&!h(d)&&i(A,N,_,y);const C=o(m);if(C===0)l(m)&&Ss(m,x);else{const E=f.get(m);E!==void 0&&clearTimeout(E),f.set(m,setTimeout(()=>{l(m)&&Ss(m,x)},C*1e3))}}};return u(g,[m,_,y],v=>v[0]===m&&v[1]===_&&v[2]===y,!0)?(w.add(T),l(d)?s(x,d,[_,y,T],!0):t(S,y,[d,_,T],!0),!0):!1}},Oo=s=>(t,e,[n,i,r],o)=>{const a=t.get(n);a===void 0?t.set(n,new Set([[i,e,r]])):s(a,[i,e,r],c=>c[0]===i&&c[1]===e,o)},Do=s=>(t,e)=>{const n=s(t,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});e.connect(n).connect(t.destination);const i=()=>{e.removeEventListener("ended",i),e.disconnect(n),n.disconnect()};e.addEventListener("ended",i)},Eo=s=>(t,e)=>{s(t).add(e)},Io={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",fftSize:2048,maxDecibels:-30,minDecibels:-100,smoothingTimeConstant:.8},Mo=(s,t,e,n,i,r)=>class extends s{constructor(a,c){const u=i(a),l={...Io,...c},h=n(u,l),p=r(u)?t():null;super(a,!1,h,p),this._nativeAnalyserNode=h}get fftSize(){return this._nativeAnalyserNode.fftSize}set fftSize(a){this._nativeAnalyserNode.fftSize=a}get frequencyBinCount(){return this._nativeAnalyserNode.frequencyBinCount}get maxDecibels(){return this._nativeAnalyserNode.maxDecibels}set maxDecibels(a){const c=this._nativeAnalyserNode.maxDecibels;if(this._nativeAnalyserNode.maxDecibels=a,!(a>this._nativeAnalyserNode.minDecibels))throw this._nativeAnalyserNode.maxDecibels=c,e()}get minDecibels(){return this._nativeAnalyserNode.minDecibels}set minDecibels(a){const c=this._nativeAnalyserNode.minDecibels;if(this._nativeAnalyserNode.minDecibels=a,!(this._nativeAnalyserNode.maxDecibels>a))throw this._nativeAnalyserNode.minDecibels=c,e()}get smoothingTimeConstant(){return this._nativeAnalyserNode.smoothingTimeConstant}set smoothingTimeConstant(a){this._nativeAnalyserNode.smoothingTimeConstant=a}getByteFrequencyData(a){this._nativeAnalyserNode.getByteFrequencyData(a)}getByteTimeDomainData(a){this._nativeAnalyserNode.getByteTimeDomainData(a)}getFloatFrequencyData(a){this._nativeAnalyserNode.getFloatFrequencyData(a)}getFloatTimeDomainData(a){this._nativeAnalyserNode.getFloatTimeDomainData(a)}},yt=(s,t)=>s.context===t,Ro=(s,t,e)=>()=>{const n=new WeakMap,i=async(r,o)=>{let a=t(r);if(!yt(a,o)){const u={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,fftSize:a.fftSize,maxDecibels:a.maxDecibels,minDecibels:a.minDecibels,smoothingTimeConstant:a.smoothingTimeConstant};a=s(o,u)}return n.set(o,a),await e(r,o,a),a};return{render(r,o){const a=n.get(o);return a!==void 0?Promise.resolve(a):i(r,o)}}},In=s=>{try{s.copyToChannel(new Float32Array(1),0,-1)}catch{return!1}return!0},zt=()=>new DOMException("","IndexSizeError"),ks=s=>{s.getChannelData=(t=>e=>{try{return t.call(s,e)}catch(n){throw n.code===12?zt():n}})(s.getChannelData)},Po={numberOfChannels:1},Fo=(s,t,e,n,i,r,o,a)=>{let c=null;return class ho{constructor(l){if(i===null)throw new Error("Missing the native OfflineAudioContext constructor.");const{length:h,numberOfChannels:p,sampleRate:f}={...Po,...l};c===null&&(c=new i(1,1,44100));const d=n!==null&&t(r,r)?new n({length:h,numberOfChannels:p,sampleRate:f}):c.createBuffer(p,h,f);if(d.numberOfChannels===0)throw e();return typeof d.copyFromChannel!="function"?(o(d),ks(d)):t(In,()=>In(d))||a(d),s.add(d),d}static[Symbol.hasInstance](l){return l!==null&&typeof l=="object"&&Object.getPrototypeOf(l)===ho.prototype||s.has(l)}}},St=-34028234663852886e22,vt=-St,Jt=s=>Ae.has(s),Vo={buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1},qo=(s,t,e,n,i,r,o,a)=>class extends s{constructor(u,l){const h=r(u),p={...Vo,...l},f=i(h,p),d=o(h),m=d?t():null;super(u,!1,f,m),this._audioBufferSourceNodeRenderer=m,this._isBufferNullified=!1,this._isBufferSet=p.buffer!==null,this._nativeAudioBufferSourceNode=f,this._onended=null,this._playbackRate=e(this,d,f.playbackRate,vt,St)}get buffer(){return this._isBufferNullified?null:this._nativeAudioBufferSourceNode.buffer}set buffer(u){if(this._nativeAudioBufferSourceNode.buffer=u,u!==null){if(this._isBufferSet)throw n();this._isBufferSet=!0}}get loop(){return this._nativeAudioBufferSourceNode.loop}set loop(u){this._nativeAudioBufferSourceNode.loop=u}get loopEnd(){return this._nativeAudioBufferSourceNode.loopEnd}set loopEnd(u){this._nativeAudioBufferSourceNode.loopEnd=u}get loopStart(){return this._nativeAudioBufferSourceNode.loopStart}set loopStart(u){this._nativeAudioBufferSourceNode.loopStart=u}get onended(){return this._onended}set onended(u){const l=typeof u=="function"?a(this,u):null;this._nativeAudioBufferSourceNode.onended=l;const h=this._nativeAudioBufferSourceNode.onended;this._onended=h!==null&&h===l?u:h}get playbackRate(){return this._playbackRate}start(u=0,l=0,h){if(this._nativeAudioBufferSourceNode.start(u,l,h),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.start=h===void 0?[u,l]:[u,l,h]),this.context.state!=="closed"){Ne(this);const p=()=>{this._nativeAudioBufferSourceNode.removeEventListener("ended",p),Jt(this)&&en(this)};this._nativeAudioBufferSourceNode.addEventListener("ended",p)}}stop(u=0){this._nativeAudioBufferSourceNode.stop(u),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.stop=u)}},Lo=(s,t,e,n,i)=>()=>{const r=new WeakMap;let o=null,a=null;const c=async(u,l)=>{let h=e(u);const p=yt(h,l);if(!p){const f={buffer:h.buffer,channelCount:h.channelCount,channelCountMode:h.channelCountMode,channelInterpretation:h.channelInterpretation,loop:h.loop,loopEnd:h.loopEnd,loopStart:h.loopStart,playbackRate:h.playbackRate.value};h=t(l,f),o!==null&&h.start(...o),a!==null&&h.stop(a)}return r.set(l,h),p?await s(l,u.playbackRate,h.playbackRate):await n(l,u.playbackRate,h.playbackRate),await i(u,l,h),h};return{set start(u){o=u},set stop(u){a=u},render(u,l){const h=r.get(l);return h!==void 0?Promise.resolve(h):c(u,l)}}},Wo=s=>"playbackRate"in s,jo=s=>"frequency"in s&&"gain"in s,Bo=s=>"offset"in s,Uo=s=>!("frequency"in s)&&"gain"in s,Go=s=>"detune"in s&&"frequency"in s&&!("gain"in s),zo=s=>"pan"in s,wt=s=>Vt(Pi,s),nn=s=>Vt(Fi,s),As=(s,t)=>{const{activeInputs:e}=wt(s);e.forEach(i=>i.forEach(([r])=>{t.includes(s)||As(r,[...t,s])}));const n=Wo(s)?[s.playbackRate]:Gi(s)?Array.from(s.parameters.values()):jo(s)?[s.Q,s.detune,s.frequency,s.gain]:Bo(s)?[s.offset]:Uo(s)?[s.gain]:Go(s)?[s.detune,s.frequency]:zo(s)?[s.pan]:[];for(const i of n){const r=nn(i);r!==void 0&&r.activeInputs.forEach(([o])=>As(o,t))}Jt(s)&&en(s)},zi=s=>{As(s.destination,[])},$o=s=>s===void 0||typeof s=="number"||typeof s=="string"&&(s==="balanced"||s==="interactive"||s==="playback"),Zo=(s,t,e,n,i,r,o,a,c)=>class extends s{constructor(l={}){if(c===null)throw new Error("Missing the native AudioContext constructor.");let h;try{h=new c(l)}catch(d){throw d.code===12&&d.message==="sampleRate is not in range"?e():d}if(h===null)throw n();if(!$o(l.latencyHint))throw new TypeError(`The provided value '${l.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);if(l.sampleRate!==void 0&&h.sampleRate!==l.sampleRate)throw e();super(h,2);const{latencyHint:p}=l,{sampleRate:f}=h;if(this._baseLatency=typeof h.baseLatency=="number"?h.baseLatency:p==="balanced"?512/f:p==="interactive"||p===void 0?256/f:p==="playback"?1024/f:Math.max(2,Math.min(128,Math.round(p*f/128)))*128/f,this._nativeAudioContext=h,c.name==="webkitAudioContext"?(this._nativeGainNode=h.createGain(),this._nativeOscillatorNode=h.createOscillator(),this._nativeGainNode.gain.value=1e-37,this._nativeOscillatorNode.connect(this._nativeGainNode).connect(h.destination),this._nativeOscillatorNode.start()):(this._nativeGainNode=null,this._nativeOscillatorNode=null),this._state=null,h.state==="running"){this._state="suspended";const d=()=>{this._state==="suspended"&&(this._state=null),h.removeEventListener("statechange",d)};h.addEventListener("statechange",d)}}get baseLatency(){return this._baseLatency}get state(){return this._state!==null?this._state:this._nativeAudioContext.state}close(){return this.state==="closed"?this._nativeAudioContext.close().then(()=>{throw t()}):(this._state==="suspended"&&(this._state=null),this._nativeAudioContext.close().then(()=>{this._nativeGainNode!==null&&this._nativeOscillatorNode!==null&&(this._nativeOscillatorNode.stop(),this._nativeGainNode.disconnect(),this._nativeOscillatorNode.disconnect()),zi(this)}))}createMediaElementSource(l){return new i(this,{mediaElement:l})}createMediaStreamDestination(){return new r(this)}createMediaStreamSource(l){return new o(this,{mediaStream:l})}createMediaStreamTrackSource(l){return new a(this,{mediaStreamTrack:l})}resume(){return this._state==="suspended"?new Promise((l,h)=>{const p=()=>{this._nativeAudioContext.removeEventListener("statechange",p),this._nativeAudioContext.state==="running"?l():this.resume().then(l,h)};this._nativeAudioContext.addEventListener("statechange",p)}):this._nativeAudioContext.resume().catch(l=>{throw l===void 0||l.code===15?t():l})}suspend(){return this._nativeAudioContext.suspend().catch(l=>{throw l===void 0?t():l})}},Xo=(s,t,e,n,i,r,o,a)=>class extends s{constructor(u,l){const h=r(u),p=o(h),f=i(h,l,p),d=p?t(a):null;super(u,!1,f,d),this._isNodeOfNativeOfflineAudioContext=p,this._nativeAudioDestinationNode=f}get channelCount(){return this._nativeAudioDestinationNode.channelCount}set channelCount(u){if(this._isNodeOfNativeOfflineAudioContext)throw n();if(u>this._nativeAudioDestinationNode.maxChannelCount)throw e();this._nativeAudioDestinationNode.channelCount=u}get channelCountMode(){return this._nativeAudioDestinationNode.channelCountMode}set channelCountMode(u){if(this._isNodeOfNativeOfflineAudioContext)throw n();this._nativeAudioDestinationNode.channelCountMode=u}get maxChannelCount(){return this._nativeAudioDestinationNode.maxChannelCount}},Yo=s=>{const t=new WeakMap,e=async(n,i)=>{const r=i.destination;return t.set(i,r),await s(n,i,r),r};return{render(n,i){const r=t.get(i);return r!==void 0?Promise.resolve(r):e(n,i)}}},Ho=(s,t,e,n,i,r,o,a)=>(c,u)=>{const l=u.listener,h=()=>{const g=new Float32Array(1),w=t(u,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:9}),T=o(u);let v=!1,N=[0,0,-1,0,1,0],A=[0,0,0];const k=()=>{if(v)return;v=!0;const V=n(u,256,9,0);V.onaudioprocess=({inputBuffer:R})=>{const P=[r(R,g,0),r(R,g,1),r(R,g,2),r(R,g,3),r(R,g,4),r(R,g,5)];P.some((q,B)=>q!==N[B])&&(l.setOrientation(...P),N=P);const z=[r(R,g,6),r(R,g,7),r(R,g,8)];z.some((q,B)=>q!==A[B])&&(l.setPosition(...z),A=z)},w.connect(V)},C=V=>R=>{R!==N[V]&&(N[V]=R,l.setOrientation(...N))},E=V=>R=>{R!==A[V]&&(A[V]=R,l.setPosition(...A))},D=(V,R,P)=>{const z=e(u,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:R});z.connect(w,0,V),z.start(),Object.defineProperty(z.offset,"defaultValue",{get(){return R}});const q=s({context:c},T,z.offset,vt,St);return a(q,"value",B=>()=>B.call(q),B=>j=>{try{B.call(q,j)}catch(tt){if(tt.code!==9)throw tt}k(),T&&P(j)}),q.cancelAndHoldAtTime=(B=>T?()=>{throw i()}:(...j)=>{const tt=B.apply(q,j);return k(),tt})(q.cancelAndHoldAtTime),q.cancelScheduledValues=(B=>T?()=>{throw i()}:(...j)=>{const tt=B.apply(q,j);return k(),tt})(q.cancelScheduledValues),q.exponentialRampToValueAtTime=(B=>T?()=>{throw i()}:(...j)=>{const tt=B.apply(q,j);return k(),tt})(q.exponentialRampToValueAtTime),q.linearRampToValueAtTime=(B=>T?()=>{throw i()}:(...j)=>{const tt=B.apply(q,j);return k(),tt})(q.linearRampToValueAtTime),q.setTargetAtTime=(B=>T?()=>{throw i()}:(...j)=>{const tt=B.apply(q,j);return k(),tt})(q.setTargetAtTime),q.setValueAtTime=(B=>T?()=>{throw i()}:(...j)=>{const tt=B.apply(q,j);return k(),tt})(q.setValueAtTime),q.setValueCurveAtTime=(B=>T?()=>{throw i()}:(...j)=>{const tt=B.apply(q,j);return k(),tt})(q.setValueCurveAtTime),q};return{forwardX:D(0,0,C(0)),forwardY:D(1,0,C(1)),forwardZ:D(2,-1,C(2)),positionX:D(6,0,E(0)),positionY:D(7,0,E(1)),positionZ:D(8,0,E(2)),upX:D(3,0,C(3)),upY:D(4,1,C(4)),upZ:D(5,0,C(5))}},{forwardX:p,forwardY:f,forwardZ:d,positionX:m,positionY:_,positionZ:y,upX:b,upY:x,upZ:S}=l.forwardX===void 0?h():l;return{get forwardX(){return p},get forwardY(){return f},get forwardZ(){return d},get positionX(){return m},get positionY(){return _},get positionZ(){return y},get upX(){return b},get upY(){return x},get upZ(){return S}}},Mn=s=>"context"in s,sn=s=>Mn(s[0]),me=(s,t,e,n)=>{for(const i of s)if(e(i)){if(n)return!1;throw Error("The set contains at least one similar element.")}return s.add(t),!0},$i=(s,t,[e,n],i)=>{me(s,[t,e,n],r=>r[0]===t&&r[1]===e,i)},Zi=(s,[t,e,n],i)=>{const r=s.get(t);r===void 0?s.set(t,new Set([[e,n]])):me(r,[e,n],o=>o[0]===e,i)},Oe=s=>"inputs"in s,Rn=(s,t,e,n)=>{if(Oe(t)){const i=t.inputs[n];return s.connect(i,e,0),[i,e,0]}return s.connect(t,e,n),[t,e,n]},Xi=(s,t,e)=>{for(const n of s)if(n[0]===t&&n[1]===e)return s.delete(n),n;return null},Qo=(s,t,e)=>En(s,n=>n[0]===t&&n[1]===e),Yi=(s,t)=>{if(!tn(s).delete(t))throw new Error("Missing the expected event listener.")},Hi=(s,t,e)=>{const n=Vt(s,t),i=En(n,r=>r[0]===e);return n.size===0&&s.delete(t),i},Pn=(s,t,e,n)=>{Oe(t)?s.disconnect(t.inputs[n],e,0):s.disconnect(t,e,n)},st=s=>Vt(ws,s),rn=s=>Vt(Ts,s),_e=s=>bs.has(s),Fn=s=>!Ae.has(s),Qi=(s,t)=>new Promise(e=>{if(t!==null)e(!0);else{const n=s.createScriptProcessor(256,1,1),i=s.createGain(),r=s.createBuffer(1,2,44100),o=r.getChannelData(0);o[0]=1,o[1]=1;const a=s.createBufferSource();a.buffer=r,a.loop=!0,a.connect(n).connect(s.destination),a.connect(i),a.disconnect(i),n.onaudioprocess=c=>{const u=c.inputBuffer.getChannelData(0);Array.prototype.some.call(u,l=>l===1)?e(!0):e(!1),a.stop(),n.onaudioprocess=null,a.disconnect(n),n.disconnect(s.destination)},a.start()}}),Ns=(s,t)=>{const e=new Map;for(const n of s)for(const i of n){const r=e.get(i);e.set(i,r===void 0?1:r+1)}e.forEach((n,i)=>t(i,n))},Vn=s=>"context"in s,Jo=s=>{const t=new Map;s.connect=(e=>(n,i=0,r=0)=>{const o=Vn(n)?e(n,i,r):e(n,i),a=t.get(n);return a===void 0?t.set(n,[{input:r,output:i}]):a.every(c=>c.input!==r||c.output!==i)&&a.push({input:r,output:i}),o})(s.connect.bind(s)),s.disconnect=(e=>(n,i,r)=>{if(e.apply(s),n===void 0)t.clear();else if(typeof n=="number")for(const[o,a]of t){const c=a.filter(u=>u.output!==n);c.length===0?t.delete(o):t.set(o,c)}else if(t.has(n))if(i===void 0)t.delete(n);else{const o=t.get(n);if(o!==void 0){const a=o.filter(c=>c.output!==i&&(c.input!==r||r===void 0));a.length===0?t.delete(n):t.set(n,a)}}for(const[o,a]of t)a.forEach(c=>{Vn(o)?s.connect(o,c.output,c.input):s.connect(o,c.output)})})(s.disconnect)},Ko=(s,t,e,n)=>{const{activeInputs:i,passiveInputs:r}=nn(t),{outputs:o}=wt(s),a=tn(s),c=u=>{const l=st(s),h=rn(t);if(u){const p=Hi(r,s,e);$i(i,s,p,!1),!n&&!_e(s)&&l.connect(h,e)}else{const p=Qo(i,s,e);Zi(r,p,!1),!n&&!_e(s)&&l.disconnect(h,e)}};return me(o,[t,e],u=>u[0]===t&&u[1]===e,!0)?(a.add(c),Jt(s)?$i(i,s,[e,c],!0):Zi(r,[s,e,c],!0),!0):!1},ta=(s,t,e,n)=>{const{activeInputs:i,passiveInputs:r}=wt(t),o=Xi(i[n],s,e);return o===null?[Ui(r,s,e,n)[2],!1]:[o[2],!0]},ea=(s,t,e)=>{const{activeInputs:n,passiveInputs:i}=nn(t),r=Xi(n,s,e);return r===null?[Hi(i,s,e)[1],!1]:[r[2],!0]},Os=(s,t,e,n,i)=>{const[r,o]=ta(s,e,n,i);if(r!==null&&(Yi(s,r),o&&!t&&!_e(s)&&Pn(st(s),st(e),n,i)),Jt(e)){const{activeInputs:a}=wt(e);Ss(e,a)}},Ds=(s,t,e,n)=>{const[i,r]=ea(s,e,n);i!==null&&(Yi(s,i),r&&!t&&!_e(s)&&st(s).disconnect(rn(e),n))},na=(s,t)=>{const e=wt(s),n=[];for(const i of e.outputs)sn(i)?Os(s,t,...i):Ds(s,t,...i),n.push(i[0]);return e.outputs.clear(),n},sa=(s,t,e)=>{const n=wt(s),i=[];for(const r of n.outputs)r[1]===e&&(sn(r)?Os(s,t,...r):Ds(s,t,...r),i.push(r[0]),n.outputs.delete(r));return i},ia=(s,t,e,n,i)=>{const r=wt(s);return Array.from(r.outputs).filter(o=>o[0]===e&&(n===void 0||o[1]===n)&&(i===void 0||o[2]===i)).map(o=>(sn(o)?Os(s,t,...o):Ds(s,t,...o),r.outputs.delete(o),o[0]))},ra=(s,t,e,n,i,r,o,a,c,u,l,h,p,f,d,m)=>class extends u{constructor(y,b,x,S){super(x),this._context=y,this._nativeAudioNode=x;const g=l(y);h(g)&&e(Qi,()=>Qi(g,m))!==!0&&Jo(x),ws.set(this,x),Vi.set(this,new Set),y.state!=="closed"&&b&&Ne(this),s(this,S,x)}get channelCount(){return this._nativeAudioNode.channelCount}set channelCount(y){this._nativeAudioNode.channelCount=y}get channelCountMode(){return this._nativeAudioNode.channelCountMode}set channelCountMode(y){this._nativeAudioNode.channelCountMode=y}get channelInterpretation(){return this._nativeAudioNode.channelInterpretation}set channelInterpretation(y){this._nativeAudioNode.channelInterpretation=y}get context(){return this._context}get numberOfInputs(){return this._nativeAudioNode.numberOfInputs}get numberOfOutputs(){return this._nativeAudioNode.numberOfOutputs}connect(y,b=0,x=0){if(b<0||b>=this._nativeAudioNode.numberOfOutputs)throw i();const S=l(this._context),g=d(S);if(p(y)||f(y))throw r();if(Mn(y)){const v=st(y);try{const A=Rn(this._nativeAudioNode,v,b,x),k=Fn(this);(g||k)&&this._nativeAudioNode.disconnect(...A),this.context.state!=="closed"&&!k&&Fn(y)&&Ne(y)}catch(A){throw A.code===12?r():A}if(t(this,y,b,x,g)){const A=c([this],y);Ns(A,n(g))}return y}const w=rn(y);if(w.name==="playbackRate"&&w.maxValue===1024)throw o();try{this._nativeAudioNode.connect(w,b),(g||Fn(this))&&this._nativeAudioNode.disconnect(w,b)}catch(v){throw v.code===12?r():v}if(Ko(this,y,b,g)){const v=c([this],y);Ns(v,n(g))}}disconnect(y,b,x){let S;const g=l(this._context),w=d(g);if(y===void 0)S=na(this,w);else if(typeof y=="number"){if(y<0||y>=this.numberOfOutputs)throw i();S=sa(this,w,y)}else{if(b!==void 0&&(b<0||b>=this.numberOfOutputs)||Mn(y)&&x!==void 0&&(x<0||x>=y.numberOfInputs))throw i();if(S=ia(this,w,y,b,x),S.length===0)throw r()}for(const T of S){const v=c([this],T);Ns(v,a)}}},oa=(s,t,e,n,i,r,o,a,c,u,l,h,p)=>(f,d,m,_=null,y=null)=>{const b=m.value,x=new _o(b),S=d?n(x):null,g={get defaultValue(){return b},get maxValue(){return _===null?m.maxValue:_},get minValue(){return y===null?m.minValue:y},get value(){return m.value},set value(w){m.value=w,g.setValueAtTime(w,f.context.currentTime)},cancelAndHoldAtTime(w){if(typeof m.cancelAndHoldAtTime=="function")S===null&&x.flush(f.context.currentTime),x.add(i(w)),m.cancelAndHoldAtTime(w);else{const T=Array.from(x).pop();S===null&&x.flush(f.context.currentTime),x.add(i(w));const v=Array.from(x).pop();m.cancelScheduledValues(w),T!==v&&v!==void 0&&(v.type==="exponentialRampToValue"?m.exponentialRampToValueAtTime(v.value,v.endTime):v.type==="linearRampToValue"?m.linearRampToValueAtTime(v.value,v.endTime):v.type==="setValue"?m.setValueAtTime(v.value,v.startTime):v.type==="setValueCurve"&&m.setValueCurveAtTime(v.values,v.startTime,v.duration))}return g},cancelScheduledValues(w){return S===null&&x.flush(f.context.currentTime),x.add(r(w)),m.cancelScheduledValues(w),g},exponentialRampToValueAtTime(w,T){if(w===0)throw new RangeError;if(!Number.isFinite(T)||T<0)throw new RangeError;const v=f.context.currentTime;return S===null&&x.flush(v),Array.from(x).length===0&&(x.add(u(b,v)),m.setValueAtTime(b,v)),x.add(o(w,T)),m.exponentialRampToValueAtTime(w,T),g},linearRampToValueAtTime(w,T){const v=f.context.currentTime;return S===null&&x.flush(v),Array.from(x).length===0&&(x.add(u(b,v)),m.setValueAtTime(b,v)),x.add(a(w,T)),m.linearRampToValueAtTime(w,T),g},setTargetAtTime(w,T,v){return S===null&&x.flush(f.context.currentTime),x.add(c(w,T,v)),m.setTargetAtTime(w,T,v),g},setValueAtTime(w,T){return S===null&&x.flush(f.context.currentTime),x.add(u(w,T)),m.setValueAtTime(w,T),g},setValueCurveAtTime(w,T,v){const N=w instanceof Float32Array?w:new Float32Array(w);if(h!==null&&h.name==="webkitAudioContext"){const A=T+v,k=f.context.sampleRate,C=Math.ceil(T*k),E=Math.floor(A*k),D=E-C,V=new Float32Array(D);for(let P=0;P<D;P+=1){const z=(N.length-1)/v*((C+P)/k-T),q=Math.floor(z),B=Math.ceil(z);V[P]=q===B?N[q]:(1-(z-q))*N[q]+(1-(B-z))*N[B]}S===null&&x.flush(f.context.currentTime),x.add(l(V,T,v)),m.setValueCurveAtTime(V,T,v);const R=E/k;R<A&&p(g,V[V.length-1],R),p(g,N[N.length-1],A)}else S===null&&x.flush(f.context.currentTime),x.add(l(N,T,v)),m.setValueCurveAtTime(N,T,v);return g}};return e.set(g,m),t.set(g,f),s(g,S),g},aa=s=>({replay(t){for(const e of s)if(e.type==="exponentialRampToValue"){const{endTime:n,value:i}=e;t.exponentialRampToValueAtTime(i,n)}else if(e.type==="linearRampToValue"){const{endTime:n,value:i}=e;t.linearRampToValueAtTime(i,n)}else if(e.type==="setTarget"){const{startTime:n,target:i,timeConstant:r}=e;t.setTargetAtTime(i,n,r)}else if(e.type==="setValue"){const{startTime:n,value:i}=e;t.setValueAtTime(i,n)}else if(e.type==="setValueCurve"){const{duration:n,startTime:i,values:r}=e;t.setValueCurveAtTime(r,i,n)}else throw new Error("Can't apply an unknown automation.")}});class Ji{constructor(t){this._map=new Map(t)}get size(){return this._map.size}entries(){return this._map.entries()}forEach(t,e=null){return this._map.forEach((n,i)=>t.call(e,n,i,this))}get(t){return this._map.get(t)}has(t){return this._map.has(t)}keys(){return this._map.keys()}values(){return this._map.values()}}const ca={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:1,numberOfOutputs:1,parameterData:{},processorOptions:{}},ua=(s,t,e,n,i,r,o,a,c,u,l,h,p,f)=>class extends t{constructor(m,_,y){var b;const x=a(m),S=c(x),g=l({...ca,...y});p(g);const w=xs.get(x),T=w?.get(_),v=S||x.state!=="closed"?x:(b=o(x))!==null&&b!==void 0?b:x,N=i(v,S?null:m.baseLatency,u,_,T,g),A=S?n(_,g,T):null;super(m,!0,N,A);const k=[];N.parameters.forEach((E,D)=>{const V=e(this,S,E);k.push([D,V])}),this._nativeAudioWorkletNode=N,this._onprocessorerror=null,this._parameters=new Ji(k),S&&s(x,this);const{activeInputs:C}=r(this);h(N,C)}get onprocessorerror(){return this._onprocessorerror}set onprocessorerror(m){const _=typeof m=="function"?f(this,m):null;this._nativeAudioWorkletNode.onprocessorerror=_;const y=this._nativeAudioWorkletNode.onprocessorerror;this._onprocessorerror=y!==null&&y===_?m:y}get parameters(){return this._parameters===null?this._nativeAudioWorkletNode.parameters:this._parameters}get port(){return this._nativeAudioWorkletNode.port}};function qn(s,t,e,n,i){if(typeof s.copyFromChannel=="function")t[e].byteLength===0&&(t[e]=new Float32Array(128)),s.copyFromChannel(t[e],n,i);else{const r=s.getChannelData(n);if(t[e].byteLength===0)t[e]=r.slice(i,i+128);else{const o=new Float32Array(r.buffer,i*Float32Array.BYTES_PER_ELEMENT,128);t[e].set(o)}}}const Ki=(s,t,e,n,i)=>{typeof s.copyToChannel=="function"?t[e].byteLength!==0&&s.copyToChannel(t[e],n,i):t[e].byteLength!==0&&s.getChannelData(n).set(t[e],i)},Ln=(s,t)=>{const e=[];for(let n=0;n<s;n+=1){const i=[],r=typeof t=="number"?t:t[n];for(let o=0;o<r;o+=1)i.push(new Float32Array(128));e.push(i)}return e},la=(s,t)=>{const e=Vt(Cs,s),n=st(t);return Vt(e,n)},ha=async(s,t,e,n,i,r,o)=>{const a=t===null?Math.ceil(s.context.length/128)*128:t.length,c=n.channelCount*n.numberOfInputs,u=i.reduce((_,y)=>_+y,0),l=u===0?null:e.createBuffer(u,a,e.sampleRate);if(r===void 0)throw new Error("Missing the processor constructor.");const h=wt(s),p=await la(e,s),f=Ln(n.numberOfInputs,n.channelCount),d=Ln(n.numberOfOutputs,i),m=Array.from(s.parameters.keys()).reduce((_,y)=>({..._,[y]:new Float32Array(128)}),{});for(let _=0;_<a;_+=128){if(n.numberOfInputs>0&&t!==null)for(let y=0;y<n.numberOfInputs;y+=1)for(let b=0;b<n.channelCount;b+=1)qn(t,f[y],b,b,_);r.parameterDescriptors!==void 0&&t!==null&&r.parameterDescriptors.forEach(({name:y},b)=>{qn(t,m,y,c+b,_)});for(let y=0;y<n.numberOfInputs;y+=1)for(let b=0;b<i[y];b+=1)d[y][b].byteLength===0&&(d[y][b]=new Float32Array(128));try{const y=f.map((x,S)=>h.activeInputs[S].size===0?[]:x),b=o(_/e.sampleRate,e.sampleRate,()=>p.process(y,d,m));if(l!==null)for(let x=0,S=0;x<n.numberOfOutputs;x+=1){for(let g=0;g<i[x];g+=1)Ki(l,d[x],g,S+g,_);S+=i[x]}if(!b)break}catch(y){s.dispatchEvent(new ErrorEvent("processorerror",{colno:y.colno,filename:y.filename,lineno:y.lineno,message:y.message}));break}}return l},da=(s,t,e,n,i,r,o,a,c,u,l,h,p,f,d,m)=>(_,y,b)=>{const x=new WeakMap;let S=null;const g=async(w,T)=>{let v=l(w),N=null;const A=yt(v,T),k=Array.isArray(y.outputChannelCount)?y.outputChannelCount:Array.from(y.outputChannelCount);if(h===null){const C=k.reduce((R,P)=>R+P,0),E=i(T,{channelCount:Math.max(1,C),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,C)}),D=[];for(let R=0;R<w.numberOfOutputs;R+=1)D.push(n(T,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:k[R]}));const V=o(T,{channelCount:y.channelCount,channelCountMode:y.channelCountMode,channelInterpretation:y.channelInterpretation,gain:1});V.connect=t.bind(null,D),V.disconnect=c.bind(null,D),N=[E,D,V]}else A||(v=new h(T,_));if(x.set(T,N===null?v:N[2]),N!==null){if(S===null){if(b===void 0)throw new Error("Missing the processor constructor.");if(p===null)throw new Error("Missing the native OfflineAudioContext constructor.");const P=w.channelCount*w.numberOfInputs,z=b.parameterDescriptors===void 0?0:b.parameterDescriptors.length,q=P+z;S=ha(w,q===0?null:await(async()=>{const j=new p(q,Math.ceil(w.context.length/128)*128,T.sampleRate),tt=[],Dt=[];for(let rt=0;rt<y.numberOfInputs;rt+=1)tt.push(o(j,{channelCount:y.channelCount,channelCountMode:y.channelCountMode,channelInterpretation:y.channelInterpretation,gain:1})),Dt.push(i(j,{channelCount:y.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:y.channelCount}));const Et=await Promise.all(Array.from(w.parameters.values()).map(async rt=>{const Ct=r(j,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:rt.value});return await f(j,rt,Ct.offset),Ct})),Z=n(j,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,P+z)});for(let rt=0;rt<y.numberOfInputs;rt+=1){tt[rt].connect(Dt[rt]);for(let Ct=0;Ct<y.channelCount;Ct+=1)Dt[rt].connect(Z,Ct,rt*y.channelCount+Ct)}for(const[rt,Ct]of Et.entries())Ct.connect(Z,0,P+rt),Ct.start(0);return Z.connect(j.destination),await Promise.all(tt.map(rt=>d(w,j,rt))),m(j)})(),T,y,k,b,u)}const C=await S,E=e(T,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),[D,V,R]=N;C!==null&&(E.buffer=C,E.start(0)),E.connect(D);for(let P=0,z=0;P<w.numberOfOutputs;P+=1){const q=V[P];for(let B=0;B<k[P];B+=1)D.connect(q,z+B,B);z+=k[P]}return R}if(A)for(const[C,E]of w.parameters.entries())await s(T,E,v.parameters.get(C));else for(const[C,E]of w.parameters.entries())await f(T,E,v.parameters.get(C));return await d(w,T,v),v};return{render(w,T){a(T,w);const v=x.get(T);return v!==void 0?Promise.resolve(v):g(w,T)}}},pa=(s,t,e,n,i,r,o,a,c,u,l,h,p,f,d,m,_,y,b,x)=>class extends d{constructor(g,w){super(g,w),this._nativeContext=g,this._audioWorklet=s===void 0?void 0:{addModule:(T,v)=>s(this,T,v)}}get audioWorklet(){return this._audioWorklet}createAnalyser(){return new t(this)}createBiquadFilter(){return new i(this)}createBuffer(g,w,T){return new e({length:w,numberOfChannels:g,sampleRate:T})}createBufferSource(){return new n(this)}createChannelMerger(g=6){return new r(this,{numberOfInputs:g})}createChannelSplitter(g=6){return new o(this,{numberOfOutputs:g})}createConstantSource(){return new a(this)}createConvolver(){return new c(this)}createDelay(g=1){return new l(this,{maxDelayTime:g})}createDynamicsCompressor(){return new h(this)}createGain(){return new p(this)}createIIRFilter(g,w){return new f(this,{feedback:w,feedforward:g})}createOscillator(){return new m(this)}createPanner(){return new _(this)}createPeriodicWave(g,w,T={disableNormalization:!1}){return new y(this,{...T,imag:w,real:g})}createStereoPanner(){return new b(this)}createWaveShaper(){return new x(this)}decodeAudioData(g,w,T){return u(this._nativeContext,g).then(v=>(typeof w=="function"&&w(v),v),v=>{throw typeof T=="function"&&T(v),v})}},fa={Q:1,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:350,gain:0,type:"lowpass"},ma=(s,t,e,n,i,r,o,a)=>class extends s{constructor(u,l){const h=r(u),p={...fa,...l},f=i(h,p),d=o(h),m=d?e():null;super(u,!1,f,m),this._Q=t(this,d,f.Q,vt,St),this._detune=t(this,d,f.detune,1200*Math.log2(vt),-1200*Math.log2(vt)),this._frequency=t(this,d,f.frequency,u.sampleRate/2,0),this._gain=t(this,d,f.gain,40*Math.log10(vt),St),this._nativeBiquadFilterNode=f,a(this,1)}get detune(){return this._detune}get frequency(){return this._frequency}get gain(){return this._gain}get Q(){return this._Q}get type(){return this._nativeBiquadFilterNode.type}set type(u){this._nativeBiquadFilterNode.type=u}getFrequencyResponse(u,l,h){try{this._nativeBiquadFilterNode.getFrequencyResponse(u,l,h)}catch(p){throw p.code===11?n():p}if(u.length!==l.length||l.length!==h.length)throw n()}},_a=(s,t,e,n,i)=>()=>{const r=new WeakMap,o=async(a,c)=>{let u=e(a);const l=yt(u,c);if(!l){const h={Q:u.Q.value,channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,detune:u.detune.value,frequency:u.frequency.value,gain:u.gain.value,type:u.type};u=t(c,h)}return r.set(c,u),l?(await s(c,a.Q,u.Q),await s(c,a.detune,u.detune),await s(c,a.frequency,u.frequency),await s(c,a.gain,u.gain)):(await n(c,a.Q,u.Q),await n(c,a.detune,u.detune),await n(c,a.frequency,u.frequency),await n(c,a.gain,u.gain)),await i(a,c,u),u};return{render(a,c){const u=r.get(c);return u!==void 0?Promise.resolve(u):o(a,c)}}},ga=(s,t)=>(e,n)=>{const i=t.get(e);if(i!==void 0)return i;const r=s.get(e);if(r!==void 0)return r;try{const o=n();return o instanceof Promise?(s.set(e,o),o.catch(()=>!1).then(a=>(s.delete(e),t.set(e,a),a))):(t.set(e,o),o)}catch{return t.set(e,!1),!1}},ya={channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6},va=(s,t,e,n,i)=>class extends s{constructor(o,a){const c=n(o),u={...ya,...a},l=e(c,u),h=i(c)?t():null;super(o,!1,l,h)}},wa=(s,t,e)=>()=>{const n=new WeakMap,i=async(r,o)=>{let a=t(r);if(!yt(a,o)){const u={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,numberOfInputs:a.numberOfInputs};a=s(o,u)}return n.set(o,a),await e(r,o,a),a};return{render(r,o){const a=n.get(o);return a!==void 0?Promise.resolve(a):i(r,o)}}},Ta={channelCount:6,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:6},ba=(s,t,e,n,i,r)=>class extends s{constructor(a,c){const u=n(a),l=r({...Ta,...c}),h=e(u,l),p=i(u)?t():null;super(a,!1,h,p)}},xa=(s,t,e)=>()=>{const n=new WeakMap,i=async(r,o)=>{let a=t(r);if(!yt(a,o)){const u={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,numberOfOutputs:a.numberOfOutputs};a=s(o,u)}return n.set(o,a),await e(r,o,a),a};return{render(r,o){const a=n.get(o);return a!==void 0?Promise.resolve(a):i(r,o)}}},Ca=s=>(t,e,n)=>s(e,t,n),Sa=s=>(t,e,n=0,i=0)=>{const r=t[n];if(r===void 0)throw s();return Vn(e)?r.connect(e,0,i):r.connect(e,0)},ka=s=>(t,e)=>{const n=s(t,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),i=t.createBuffer(1,2,44100);return n.buffer=i,n.loop=!0,n.connect(e),n.start(),()=>{n.stop(),n.disconnect(e)}},Aa={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",offset:1},Na=(s,t,e,n,i,r,o)=>class extends s{constructor(c,u){const l=i(c),h={...Aa,...u},p=n(l,h),f=r(l),d=f?e():null;super(c,!1,p,d),this._constantSourceNodeRenderer=d,this._nativeConstantSourceNode=p,this._offset=t(this,f,p.offset,vt,St),this._onended=null}get offset(){return this._offset}get onended(){return this._onended}set onended(c){const u=typeof c=="function"?o(this,c):null;this._nativeConstantSourceNode.onended=u;const l=this._nativeConstantSourceNode.onended;this._onended=l!==null&&l===u?c:l}start(c=0){if(this._nativeConstantSourceNode.start(c),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.start=c),this.context.state!=="closed"){Ne(this);const u=()=>{this._nativeConstantSourceNode.removeEventListener("ended",u),Jt(this)&&en(this)};this._nativeConstantSourceNode.addEventListener("ended",u)}}stop(c=0){this._nativeConstantSourceNode.stop(c),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.stop=c)}},Oa=(s,t,e,n,i)=>()=>{const r=new WeakMap;let o=null,a=null;const c=async(u,l)=>{let h=e(u);const p=yt(h,l);if(!p){const f={channelCount:h.channelCount,channelCountMode:h.channelCountMode,channelInterpretation:h.channelInterpretation,offset:h.offset.value};h=t(l,f),o!==null&&h.start(o),a!==null&&h.stop(a)}return r.set(l,h),p?await s(l,u.offset,h.offset):await n(l,u.offset,h.offset),await i(u,l,h),h};return{set start(u){o=u},set stop(u){a=u},render(u,l){const h=r.get(l);return h!==void 0?Promise.resolve(h):c(u,l)}}},Da=s=>t=>(s[0]=t,s[0]),Ea={buffer:null,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",disableNormalization:!1},Ia=(s,t,e,n,i,r)=>class extends s{constructor(a,c){const u=n(a),l={...Ea,...c},h=e(u,l),f=i(u)?t():null;super(a,!1,h,f),this._isBufferNullified=!1,this._nativeConvolverNode=h,l.buffer!==null&&r(this,l.buffer.duration)}get buffer(){return this._isBufferNullified?null:this._nativeConvolverNode.buffer}set buffer(a){if(this._nativeConvolverNode.buffer=a,a===null&&this._nativeConvolverNode.buffer!==null){const c=this._nativeConvolverNode.context;this._nativeConvolverNode.buffer=c.createBuffer(1,1,c.sampleRate),this._isBufferNullified=!0,r(this,0)}else this._isBufferNullified=!1,r(this,this._nativeConvolverNode.buffer===null?0:this._nativeConvolverNode.buffer.duration)}get normalize(){return this._nativeConvolverNode.normalize}set normalize(a){this._nativeConvolverNode.normalize=a}},Ma=(s,t,e)=>()=>{const n=new WeakMap,i=async(r,o)=>{let a=t(r);if(!yt(a,o)){const u={buffer:a.buffer,channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,disableNormalization:!a.normalize};a=s(o,u)}return n.set(o,a),Oe(a)?await e(r,o,a.inputs[0]):await e(r,o,a),a};return{render(r,o){const a=n.get(o);return a!==void 0?Promise.resolve(a):i(r,o)}}},Ra=(s,t)=>(e,n,i)=>{if(t===null)throw new Error("Missing the native OfflineAudioContext constructor.");try{return new t(e,n,i)}catch(r){throw r.name==="SyntaxError"?s():r}},Pa=()=>new DOMException("","DataCloneError"),tr=s=>{const{port1:t,port2:e}=new MessageChannel;return new Promise(n=>{const i=()=>{e.onmessage=null,t.close(),e.close(),n()};e.onmessage=()=>i();try{t.postMessage(s,[s])}catch{}finally{i()}})},Fa=(s,t,e,n,i,r,o,a,c,u,l)=>(h,p)=>{const f=o(h)?h:r(h);if(i.has(p)){const d=e();return Promise.reject(d)}try{i.add(p)}catch{}return t(c,()=>c(f))?f.decodeAudioData(p).then(d=>(tr(p).catch(()=>{}),t(a,()=>a(d))||l(d),s.add(d),d)):new Promise((d,m)=>{const _=async()=>{try{await tr(p)}catch{}},y=b=>{m(b),_()};try{f.decodeAudioData(p,b=>{typeof b.copyFromChannel!="function"&&(u(b),ks(b)),s.add(b),_().then(()=>d(b))},b=>{y(b===null?n():b)})}catch(b){y(b)}})},Va=(s,t,e,n,i,r,o,a)=>(c,u)=>{const l=t.get(c);if(l===void 0)throw new Error("Missing the expected cycle count.");const h=r(c.context),p=a(h);if(l===u){if(t.delete(c),!p&&o(c)){const f=n(c),{outputs:d}=e(c);for(const m of d)if(sn(m)){const _=n(m[0]);s(f,_,m[1],m[2])}else{const _=i(m[0]);f.connect(_,m[1])}}}else t.set(c,l-u)},qa={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",delayTime:0,maxDelayTime:1},La=(s,t,e,n,i,r,o)=>class extends s{constructor(c,u){const l=i(c),h={...qa,...u},p=n(l,h),f=r(l),d=f?e(h.maxDelayTime):null;super(c,!1,p,d),this._delayTime=t(this,f,p.delayTime),o(this,h.maxDelayTime)}get delayTime(){return this._delayTime}},Wa=(s,t,e,n,i)=>r=>{const o=new WeakMap,a=async(c,u)=>{let l=e(c);const h=yt(l,u);if(!h){const p={channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,delayTime:l.delayTime.value,maxDelayTime:r};l=t(u,p)}return o.set(u,l),h?await s(u,c.delayTime,l.delayTime):await n(u,c.delayTime,l.delayTime),await i(c,u,l),l};return{render(c,u){const l=o.get(u);return l!==void 0?Promise.resolve(l):a(c,u)}}},ja=s=>(t,e,n,i)=>s(t[i],r=>r[0]===e&&r[1]===n),Ba=s=>(t,e)=>{s(t).delete(e)},Ua=s=>"delayTime"in s,Ga=(s,t,e)=>function n(i,r){const o=Mn(r)?r:e(s,r);if(Ua(o))return[];if(i[0]===o)return[i];if(i.includes(o))return[];const{outputs:a}=t(o);return Array.from(a).map(c=>n([...i,o],c[0])).reduce((c,u)=>c.concat(u),[])},Wn=(s,t,e)=>{const n=t[e];if(n===void 0)throw s();return n},za=s=>(t,e=void 0,n=void 0,i=0)=>e===void 0?t.forEach(r=>r.disconnect()):typeof e=="number"?Wn(s,t,e).disconnect():Vn(e)?n===void 0?t.forEach(r=>r.disconnect(e)):i===void 0?Wn(s,t,n).disconnect(e,0):Wn(s,t,n).disconnect(e,0,i):n===void 0?t.forEach(r=>r.disconnect(e)):Wn(s,t,n).disconnect(e,0),$a={attack:.003,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",knee:30,ratio:12,release:.25,threshold:-24},Za=(s,t,e,n,i,r,o,a)=>class extends s{constructor(u,l){const h=r(u),p={...$a,...l},f=n(h,p),d=o(h),m=d?e():null;super(u,!1,f,m),this._attack=t(this,d,f.attack),this._knee=t(this,d,f.knee),this._nativeDynamicsCompressorNode=f,this._ratio=t(this,d,f.ratio),this._release=t(this,d,f.release),this._threshold=t(this,d,f.threshold),a(this,.006)}get attack(){return this._attack}get channelCount(){return this._nativeDynamicsCompressorNode.channelCount}set channelCount(u){const l=this._nativeDynamicsCompressorNode.channelCount;if(this._nativeDynamicsCompressorNode.channelCount=u,u>2)throw this._nativeDynamicsCompressorNode.channelCount=l,i()}get channelCountMode(){return this._nativeDynamicsCompressorNode.channelCountMode}set channelCountMode(u){const l=this._nativeDynamicsCompressorNode.channelCountMode;if(this._nativeDynamicsCompressorNode.channelCountMode=u,u==="max")throw this._nativeDynamicsCompressorNode.channelCountMode=l,i()}get knee(){return this._knee}get ratio(){return this._ratio}get reduction(){return typeof this._nativeDynamicsCompressorNode.reduction.value=="number"?this._nativeDynamicsCompressorNode.reduction.value:this._nativeDynamicsCompressorNode.reduction}get release(){return this._release}get threshold(){return this._threshold}},Xa=(s,t,e,n,i)=>()=>{const r=new WeakMap,o=async(a,c)=>{let u=e(a);const l=yt(u,c);if(!l){const h={attack:u.attack.value,channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,knee:u.knee.value,ratio:u.ratio.value,release:u.release.value,threshold:u.threshold.value};u=t(c,h)}return r.set(c,u),l?(await s(c,a.attack,u.attack),await s(c,a.knee,u.knee),await s(c,a.ratio,u.ratio),await s(c,a.release,u.release),await s(c,a.threshold,u.threshold)):(await n(c,a.attack,u.attack),await n(c,a.knee,u.knee),await n(c,a.ratio,u.ratio),await n(c,a.release,u.release),await n(c,a.threshold,u.threshold)),await i(a,c,u),u};return{render(a,c){const u=r.get(c);return u!==void 0?Promise.resolve(u):o(a,c)}}},Ya=()=>new DOMException("","EncodingError"),Ha=s=>t=>new Promise((e,n)=>{if(s===null){n(new SyntaxError);return}const i=s.document.head;if(i===null)n(new SyntaxError);else{const r=s.document.createElement("script"),o=new Blob([t],{type:"application/javascript"}),a=URL.createObjectURL(o),c=s.onerror,u=()=>{s.onerror=c,URL.revokeObjectURL(a)};s.onerror=(l,h,p,f,d)=>{if(h===a||h===s.location.href&&p===1&&f===1)return u(),n(d),!1;if(c!==null)return c(l,h,p,f,d)},r.onerror=()=>{u(),n(new SyntaxError)},r.onload=()=>{u(),e()},r.src=a,r.type="module",i.appendChild(r)}}),Qa=s=>class{constructor(e){this._nativeEventTarget=e,this._listeners=new WeakMap}addEventListener(e,n,i){if(n!==null){let r=this._listeners.get(n);r===void 0&&(r=s(this,n),typeof n=="function"&&this._listeners.set(n,r)),this._nativeEventTarget.addEventListener(e,r,i)}}dispatchEvent(e){return this._nativeEventTarget.dispatchEvent(e)}removeEventListener(e,n,i){const r=n===null?void 0:this._listeners.get(n);this._nativeEventTarget.removeEventListener(e,r===void 0?null:r,i)}},Ja=s=>(t,e,n)=>{Object.defineProperties(s,{currentFrame:{configurable:!0,get(){return Math.round(t*e)}},currentTime:{configurable:!0,get(){return t}}});try{return n()}finally{s!==null&&(delete s.currentFrame,delete s.currentTime)}},Ka=s=>async t=>{try{const e=await fetch(t);if(e.ok)return[await e.text(),e.url]}catch{}throw s()},tc={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",gain:1},ec=(s,t,e,n,i,r)=>class extends s{constructor(a,c){const u=i(a),l={...tc,...c},h=n(u,l),p=r(u),f=p?e():null;super(a,!1,h,f),this._gain=t(this,p,h.gain,vt,St)}get gain(){return this._gain}},nc=(s,t,e,n,i)=>()=>{const r=new WeakMap,o=async(a,c)=>{let u=e(a);const l=yt(u,c);if(!l){const h={channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,gain:u.gain.value};u=t(c,h)}return r.set(c,u),l?await s(c,a.gain,u.gain):await n(c,a.gain,u.gain),await i(a,c,u),u};return{render(a,c){const u=r.get(c);return u!==void 0?Promise.resolve(u):o(a,c)}}},sc=(s,t)=>e=>t(s,e),ic=s=>t=>{const e=s(t);if(e.renderer===null)throw new Error("Missing the renderer of the given AudioNode in the audio graph.");return e.renderer},rc=s=>t=>{var e;return(e=s.get(t))!==null&&e!==void 0?e:0},oc=s=>t=>{const e=s(t);if(e.renderer===null)throw new Error("Missing the renderer of the given AudioParam in the audio graph.");return e.renderer},ac=s=>t=>s.get(t),_t=()=>new DOMException("","InvalidStateError"),cc=s=>t=>{const e=s.get(t);if(e===void 0)throw _t();return e},uc=(s,t)=>e=>{let n=s.get(e);if(n!==void 0)return n;if(t===null)throw new Error("Missing the native OfflineAudioContext constructor.");return n=new t(1,1,44100),s.set(e,n),n},lc=s=>t=>{const e=s.get(t);if(e===void 0)throw new Error("The context has no set of AudioWorkletNodes.");return e},jn=()=>new DOMException("","InvalidAccessError"),hc=s=>{s.getFrequencyResponse=(t=>(e,n,i)=>{if(e.length!==n.length||n.length!==i.length)throw jn();return t.call(s,e,n,i)})(s.getFrequencyResponse)},dc={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers"},pc=(s,t,e,n,i,r)=>class extends s{constructor(a,c){const u=n(a),l=i(u),h={...dc,...c},p=t(u,l?null:a.baseLatency,h),f=l?e(h.feedback,h.feedforward):null;super(a,!1,p,f),hc(p),this._nativeIIRFilterNode=p,r(this,1)}getFrequencyResponse(a,c,u){return this._nativeIIRFilterNode.getFrequencyResponse(a,c,u)}},er=(s,t,e,n,i,r,o,a,c,u,l)=>{const h=u.length;let p=a;for(let f=0;f<h;f+=1){let d=e[0]*u[f];for(let m=1;m<i;m+=1){const _=p-m&c-1;d+=e[m]*r[_],d-=s[m]*o[_]}for(let m=i;m<n;m+=1)d+=e[m]*r[p-m&c-1];for(let m=i;m<t;m+=1)d-=s[m]*o[p-m&c-1];r[p]=u[f],o[p]=d,p=p+1&c-1,l[f]=d}return p},fc=(s,t,e,n)=>{const i=e instanceof Float64Array?e:new Float64Array(e),r=n instanceof Float64Array?n:new Float64Array(n),o=i.length,a=r.length,c=Math.min(o,a);if(i[0]!==1){for(let d=0;d<o;d+=1)r[d]/=i[0];for(let d=1;d<a;d+=1)i[d]/=i[0]}const u=32,l=new Float32Array(u),h=new Float32Array(u),p=t.createBuffer(s.numberOfChannels,s.length,s.sampleRate),f=s.numberOfChannels;for(let d=0;d<f;d+=1){const m=s.getChannelData(d),_=p.getChannelData(d);l.fill(0),h.fill(0),er(i,o,r,a,c,l,h,0,u,m,_)}return p},mc=(s,t,e,n,i)=>(r,o)=>{const a=new WeakMap;let c=null;const u=async(l,h)=>{let p=null,f=t(l);const d=yt(f,h);if(h.createIIRFilter===void 0?p=s(h,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}):d||(f=h.createIIRFilter(o,r)),a.set(h,p===null?f:p),p!==null){if(c===null){if(e===null)throw new Error("Missing the native OfflineAudioContext constructor.");const _=new e(l.context.destination.channelCount,l.context.length,h.sampleRate);c=(async()=>{await n(l,_,_.destination);const y=await i(_);return fc(y,h,r,o)})()}const m=await c;return p.buffer=m,p.start(0),p}return await n(l,h,f),f};return{render(l,h){const p=a.get(h);return p!==void 0?Promise.resolve(p):u(l,h)}}},_c=(s,t,e,n,i,r)=>o=>(a,c)=>{const u=s.get(a);if(u===void 0){if(!o&&r(a)){const l=n(a),{outputs:h}=e(a);for(const p of h)if(sn(p)){const f=n(p[0]);t(l,f,p[1],p[2])}else{const f=i(p[0]);l.disconnect(f,p[1])}}s.set(a,c)}else s.set(a,u+c)},gc=(s,t)=>e=>{const n=s.get(e);return t(n)||t(e)},yc=(s,t)=>e=>s.has(e)||t(e),vc=(s,t)=>e=>s.has(e)||t(e),wc=(s,t)=>e=>{const n=s.get(e);return t(n)||t(e)},Tc=s=>t=>s!==null&&t instanceof s,bc=s=>t=>s!==null&&typeof s.AudioNode=="function"&&t instanceof s.AudioNode,xc=s=>t=>s!==null&&typeof s.AudioParam=="function"&&t instanceof s.AudioParam,Cc=(s,t)=>e=>s(e)||t(e),Sc=s=>t=>s!==null&&t instanceof s,kc=s=>s!==null&&s.isSecureContext,Ac=(s,t,e,n)=>class extends s{constructor(r,o){const a=e(r),c=t(a,o);if(n(a))throw TypeError();super(r,!0,c,null),this._nativeMediaElementAudioSourceNode=c}get mediaElement(){return this._nativeMediaElementAudioSourceNode.mediaElement}},Nc={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers"},Oc=(s,t,e,n)=>class extends s{constructor(r,o){const a=e(r);if(n(a))throw new TypeError;const c={...Nc,...o},u=t(a,c);super(r,!1,u,null),this._nativeMediaStreamAudioDestinationNode=u}get stream(){return this._nativeMediaStreamAudioDestinationNode.stream}},Dc=(s,t,e,n)=>class extends s{constructor(r,o){const a=e(r),c=t(a,o);if(n(a))throw new TypeError;super(r,!0,c,null),this._nativeMediaStreamAudioSourceNode=c}get mediaStream(){return this._nativeMediaStreamAudioSourceNode.mediaStream}},Ec=(s,t,e)=>class extends s{constructor(i,r){const o=e(i),a=t(o,r);super(i,!0,a,null)}},Ic=(s,t,e,n,i,r)=>class extends e{constructor(a,c){super(a),this._nativeContext=a,Dn.set(this,a),n(a)&&i.set(a,new Set),this._destination=new s(this,c),this._listener=t(this,a),this._onstatechange=null}get currentTime(){return this._nativeContext.currentTime}get destination(){return this._destination}get listener(){return this._listener}get onstatechange(){return this._onstatechange}set onstatechange(a){const c=typeof a=="function"?r(this,a):null;this._nativeContext.onstatechange=c;const u=this._nativeContext.onstatechange;this._onstatechange=u!==null&&u===c?a:u}get sampleRate(){return this._nativeContext.sampleRate}get state(){return this._nativeContext.state}},on=s=>{const t=new Uint32Array([1179011410,40,1163280727,544501094,16,131073,44100,176400,1048580,1635017060,4,0]);try{const e=s.decodeAudioData(t.buffer,()=>{});return e===void 0?!1:(e.catch(()=>{}),!0)}catch{}return!1},Mc=(s,t)=>(e,n,i)=>{const r=new Set;return e.connect=(o=>(a,c=0,u=0)=>{const l=r.size===0;if(t(a))return o.call(e,a,c,u),s(r,[a,c,u],h=>h[0]===a&&h[1]===c&&h[2]===u,!0),l&&n(),a;o.call(e,a,c),s(r,[a,c],h=>h[0]===a&&h[1]===c,!0),l&&n()})(e.connect),e.disconnect=(o=>(a,c,u)=>{const l=r.size>0;if(a===void 0)o.apply(e),r.clear();else if(typeof a=="number"){o.call(e,a);for(const p of r)p[1]===a&&r.delete(p)}else{t(a)?o.call(e,a,c,u):o.call(e,a,c);for(const p of r)p[0]===a&&(c===void 0||p[1]===c)&&(u===void 0||p[2]===u)&&r.delete(p)}const h=r.size===0;l&&h&&i()})(e.disconnect),e},it=(s,t,e)=>{const n=t[e];n!==void 0&&n!==s[e]&&(s[e]=n)},ft=(s,t)=>{it(s,t,"channelCount"),it(s,t,"channelCountMode"),it(s,t,"channelInterpretation")},nr=s=>typeof s.getFloatTimeDomainData=="function",Rc=s=>{s.getFloatTimeDomainData=t=>{const e=new Uint8Array(t.length);s.getByteTimeDomainData(e);const n=Math.max(e.length,s.fftSize);for(let i=0;i<n;i+=1)t[i]=(e[i]-128)*.0078125;return t}},Pc=(s,t)=>(e,n)=>{const i=e.createAnalyser();if(ft(i,n),!(n.maxDecibels>n.minDecibels))throw t();return it(i,n,"fftSize"),it(i,n,"maxDecibels"),it(i,n,"minDecibels"),it(i,n,"smoothingTimeConstant"),s(nr,()=>nr(i))||Rc(i),i},Fc=s=>s===null?null:s.hasOwnProperty("AudioBuffer")?s.AudioBuffer:null,ct=(s,t,e)=>{const n=t[e];n!==void 0&&n!==s[e].value&&(s[e].value=n)},Vc=s=>{s.start=(t=>{let e=!1;return(n=0,i=0,r)=>{if(e)throw _t();t.call(s,n,i,r),e=!0}})(s.start)},Es=s=>{s.start=(t=>(e=0,n=0,i)=>{if(typeof i=="number"&&i<0||n<0||e<0)throw new RangeError("The parameters can't be negative.");t.call(s,e,n,i)})(s.start)},Is=s=>{s.stop=(t=>(e=0)=>{if(e<0)throw new RangeError("The parameter can't be negative.");t.call(s,e)})(s.stop)},qc=(s,t,e,n,i,r,o,a,c,u,l)=>(h,p)=>{const f=h.createBufferSource();return ft(f,p),ct(f,p,"playbackRate"),it(f,p,"buffer"),it(f,p,"loop"),it(f,p,"loopEnd"),it(f,p,"loopStart"),t(e,()=>e(h))||Vc(f),t(n,()=>n(h))||c(f),t(i,()=>i(h))||u(f,h),t(r,()=>r(h))||Es(f),t(o,()=>o(h))||l(f,h),t(a,()=>a(h))||Is(f),s(h,f),f},Lc=s=>s===null?null:s.hasOwnProperty("AudioContext")?s.AudioContext:s.hasOwnProperty("webkitAudioContext")?s.webkitAudioContext:null,Wc=(s,t)=>(e,n,i)=>{const r=e.destination;if(r.channelCount!==n)try{r.channelCount=n}catch{}i&&r.channelCountMode!=="explicit"&&(r.channelCountMode="explicit"),r.maxChannelCount===0&&Object.defineProperty(r,"maxChannelCount",{value:n});const o=s(e,{channelCount:n,channelCountMode:r.channelCountMode,channelInterpretation:r.channelInterpretation,gain:1});return t(o,"channelCount",a=>()=>a.call(o),a=>c=>{a.call(o,c);try{r.channelCount=c}catch(u){if(c>r.maxChannelCount)throw u}}),t(o,"channelCountMode",a=>()=>a.call(o),a=>c=>{a.call(o,c),r.channelCountMode=c}),t(o,"channelInterpretation",a=>()=>a.call(o),a=>c=>{a.call(o,c),r.channelInterpretation=c}),Object.defineProperty(o,"maxChannelCount",{get:()=>r.maxChannelCount}),o.connect(r),o},jc=s=>s===null?null:s.hasOwnProperty("AudioWorkletNode")?s.AudioWorkletNode:null,Bc=s=>{const{port1:t}=new MessageChannel;try{t.postMessage(s)}finally{t.close()}},Uc=(s,t,e,n,i)=>(r,o,a,c,u,l)=>{if(a!==null)try{const h=new a(r,c,l),p=new Map;let f=null;if(Object.defineProperties(h,{channelCount:{get:()=>l.channelCount,set:()=>{throw s()}},channelCountMode:{get:()=>"explicit",set:()=>{throw s()}},onprocessorerror:{get:()=>f,set:d=>{typeof f=="function"&&h.removeEventListener("processorerror",f),f=typeof d=="function"?d:null,typeof f=="function"&&h.addEventListener("processorerror",f)}}}),h.addEventListener=(d=>(...m)=>{if(m[0]==="processorerror"){const _=typeof m[1]=="function"?m[1]:typeof m[1]=="object"&&m[1]!==null&&typeof m[1].handleEvent=="function"?m[1].handleEvent:null;if(_!==null){const y=p.get(m[1]);y!==void 0?m[1]=y:(m[1]=b=>{b.type==="error"?(Object.defineProperties(b,{type:{value:"processorerror"}}),_(b)):_(new ErrorEvent(m[0],{...b}))},p.set(_,m[1]))}}return d.call(h,"error",m[1],m[2]),d.call(h,...m)})(h.addEventListener),h.removeEventListener=(d=>(...m)=>{if(m[0]==="processorerror"){const _=p.get(m[1]);_!==void 0&&(p.delete(m[1]),m[1]=_)}return d.call(h,"error",m[1],m[2]),d.call(h,m[0],m[1],m[2])})(h.removeEventListener),l.numberOfOutputs!==0){const d=e(r,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return h.connect(d).connect(r.destination),i(h,()=>d.disconnect(),()=>d.connect(r.destination))}return h}catch(h){throw h.code===11?n():h}if(u===void 0)throw n();return Bc(l),t(r,o,u,l)},sr=(s,t)=>s===null?512:Math.max(512,Math.min(16384,Math.pow(2,Math.round(Math.log2(s*t))))),Gc=s=>new Promise((t,e)=>{const{port1:n,port2:i}=new MessageChannel;n.onmessage=({data:r})=>{n.close(),i.close(),t(r)},n.onmessageerror=({data:r})=>{n.close(),i.close(),e(r)},i.postMessage(s)}),zc=async(s,t)=>{const e=await Gc(t);return new s(e)},$c=(s,t,e,n)=>{let i=Cs.get(s);i===void 0&&(i=new WeakMap,Cs.set(s,i));const r=zc(e,n);return i.set(t,r),r},Zc=(s,t,e,n,i,r,o,a,c,u,l,h,p)=>(f,d,m,_)=>{if(_.numberOfInputs===0&&_.numberOfOutputs===0)throw c();const y=Array.isArray(_.outputChannelCount)?_.outputChannelCount:Array.from(_.outputChannelCount);if(y.some(O=>O<1))throw c();if(y.length!==_.numberOfOutputs)throw t();if(_.channelCountMode!=="explicit")throw c();const b=_.channelCount*_.numberOfInputs,x=y.reduce((O,L)=>O+L,0),S=m.parameterDescriptors===void 0?0:m.parameterDescriptors.length;if(b+S>6||x>6)throw c();const g=new MessageChannel,w=[],T=[];for(let O=0;O<_.numberOfInputs;O+=1)w.push(o(f,{channelCount:_.channelCount,channelCountMode:_.channelCountMode,channelInterpretation:_.channelInterpretation,gain:1})),T.push(i(f,{channelCount:_.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:_.channelCount}));const v=[];if(m.parameterDescriptors!==void 0)for(const{defaultValue:O,maxValue:L,minValue:mt,name:at}of m.parameterDescriptors){const H=r(f,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:_.parameterData[at]!==void 0?_.parameterData[at]:O===void 0?0:O});Object.defineProperties(H.offset,{defaultValue:{get:()=>O===void 0?0:O},maxValue:{get:()=>L===void 0?vt:L},minValue:{get:()=>mt===void 0?St:mt}}),v.push(H)}const N=n(f,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,b+S)}),A=sr(d,f.sampleRate),k=a(f,A,b+S,Math.max(1,x)),C=i(f,{channelCount:Math.max(1,x),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,x)}),E=[];for(let O=0;O<_.numberOfOutputs;O+=1)E.push(n(f,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:y[O]}));for(let O=0;O<_.numberOfInputs;O+=1){w[O].connect(T[O]);for(let L=0;L<_.channelCount;L+=1)T[O].connect(N,L,O*_.channelCount+L)}const D=new Ji(m.parameterDescriptors===void 0?[]:m.parameterDescriptors.map(({name:O},L)=>{const mt=v[L];return mt.connect(N,0,b+L),mt.start(0),[O,mt.offset]}));N.connect(k);let V=_.channelInterpretation,R=null;const P=_.numberOfOutputs===0?[k]:E,z={get bufferSize(){return A},get channelCount(){return _.channelCount},set channelCount(O){throw e()},get channelCountMode(){return _.channelCountMode},set channelCountMode(O){throw e()},get channelInterpretation(){return V},set channelInterpretation(O){for(const L of w)L.channelInterpretation=O;V=O},get context(){return k.context},get inputs(){return w},get numberOfInputs(){return _.numberOfInputs},get numberOfOutputs(){return _.numberOfOutputs},get onprocessorerror(){return R},set onprocessorerror(O){typeof R=="function"&&z.removeEventListener("processorerror",R),R=typeof O=="function"?O:null,typeof R=="function"&&z.addEventListener("processorerror",R)},get parameters(){return D},get port(){return g.port2},addEventListener(...O){return k.addEventListener(O[0],O[1],O[2])},connect:s.bind(null,P),disconnect:u.bind(null,P),dispatchEvent(...O){return k.dispatchEvent(O[0])},removeEventListener(...O){return k.removeEventListener(O[0],O[1],O[2])}},q=new Map;g.port1.addEventListener=(O=>(...L)=>{if(L[0]==="message"){const mt=typeof L[1]=="function"?L[1]:typeof L[1]=="object"&&L[1]!==null&&typeof L[1].handleEvent=="function"?L[1].handleEvent:null;if(mt!==null){const at=q.get(L[1]);at!==void 0?L[1]=at:(L[1]=H=>{l(f.currentTime,f.sampleRate,()=>mt(H))},q.set(mt,L[1]))}}return O.call(g.port1,L[0],L[1],L[2])})(g.port1.addEventListener),g.port1.removeEventListener=(O=>(...L)=>{if(L[0]==="message"){const mt=q.get(L[1]);mt!==void 0&&(q.delete(L[1]),L[1]=mt)}return O.call(g.port1,L[0],L[1],L[2])})(g.port1.removeEventListener);let B=null;Object.defineProperty(g.port1,"onmessage",{get:()=>B,set:O=>{typeof B=="function"&&g.port1.removeEventListener("message",B),B=typeof O=="function"?O:null,typeof B=="function"&&(g.port1.addEventListener("message",B),g.port1.start())}}),m.prototype.port=g.port1;let j=null;$c(f,z,m,_).then(O=>j=O);const Dt=Ln(_.numberOfInputs,_.channelCount),Et=Ln(_.numberOfOutputs,y),Z=m.parameterDescriptors===void 0?[]:m.parameterDescriptors.reduce((O,{name:L})=>({...O,[L]:new Float32Array(128)}),{});let rt=!0;const Ct=()=>{_.numberOfOutputs>0&&k.disconnect(C);for(let O=0,L=0;O<_.numberOfOutputs;O+=1){const mt=E[O];for(let at=0;at<y[O];at+=1)C.disconnect(mt,L+at,at);L+=y[O]}},F=new Map;k.onaudioprocess=({inputBuffer:O,outputBuffer:L})=>{if(j!==null){const mt=h(z);for(let at=0;at<A;at+=128){for(let H=0;H<_.numberOfInputs;H+=1)for(let lt=0;lt<_.channelCount;lt+=1)qn(O,Dt[H],lt,lt,at);m.parameterDescriptors!==void 0&&m.parameterDescriptors.forEach(({name:H},lt)=>{qn(O,Z,H,b+lt,at)});for(let H=0;H<_.numberOfInputs;H+=1)for(let lt=0;lt<y[H];lt+=1)Et[H][lt].byteLength===0&&(Et[H][lt]=new Float32Array(128));try{const H=Dt.map((Ft,fe)=>{if(mt[fe].size>0)return F.set(fe,A/128),Ft;const Ai=F.get(fe);return Ai===void 0?[]:(Ft.every(pd=>pd.every(fd=>fd===0))&&(Ai===1?F.delete(fe):F.set(fe,Ai-1)),Ft)});rt=l(f.currentTime+at/f.sampleRate,f.sampleRate,()=>j.process(H,Et,Z));for(let Ft=0,fe=0;Ft<_.numberOfOutputs;Ft+=1){for(let kn=0;kn<y[Ft];kn+=1)Ki(L,Et[Ft],kn,fe+kn,at);fe+=y[Ft]}}catch(H){rt=!1,z.dispatchEvent(new ErrorEvent("processorerror",{colno:H.colno,filename:H.filename,lineno:H.lineno,message:H.message}))}if(!rt){for(let H=0;H<_.numberOfInputs;H+=1){w[H].disconnect(T[H]);for(let lt=0;lt<_.channelCount;lt+=1)T[at].disconnect(N,lt,H*_.channelCount+lt)}if(m.parameterDescriptors!==void 0){const H=m.parameterDescriptors.length;for(let lt=0;lt<H;lt+=1){const Ft=v[lt];Ft.disconnect(N,0,b+lt),Ft.stop()}}N.disconnect(k),k.onaudioprocess=null,Ce?Ct():Je();break}}}};let Ce=!1;const Se=o(f,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0}),Qe=()=>k.connect(Se).connect(f.destination),Je=()=>{k.disconnect(Se),Se.disconnect()},hd=()=>{if(rt){Je(),_.numberOfOutputs>0&&k.connect(C);for(let O=0,L=0;O<_.numberOfOutputs;O+=1){const mt=E[O];for(let at=0;at<y[O];at+=1)C.connect(mt,L+at,at);L+=y[O]}}Ce=!0},dd=()=>{rt&&(Qe(),Ct()),Ce=!1};return Qe(),p(z,hd,dd)},ir=(s,t)=>{const e=s.createBiquadFilter();return ft(e,t),ct(e,t,"Q"),ct(e,t,"detune"),ct(e,t,"frequency"),ct(e,t,"gain"),it(e,t,"type"),e},Xc=(s,t)=>(e,n)=>{const i=e.createChannelMerger(n.numberOfInputs);return s!==null&&s.name==="webkitAudioContext"&&t(e,i),ft(i,n),i},Yc=s=>{const t=s.numberOfOutputs;Object.defineProperty(s,"channelCount",{get:()=>t,set:e=>{if(e!==t)throw _t()}}),Object.defineProperty(s,"channelCountMode",{get:()=>"explicit",set:e=>{if(e!=="explicit")throw _t()}}),Object.defineProperty(s,"channelInterpretation",{get:()=>"discrete",set:e=>{if(e!=="discrete")throw _t()}})},an=(s,t)=>{const e=s.createChannelSplitter(t.numberOfOutputs);return ft(e,t),Yc(e),e},Hc=(s,t,e,n,i)=>(r,o)=>{if(r.createConstantSource===void 0)return e(r,o);const a=r.createConstantSource();return ft(a,o),ct(a,o,"offset"),t(n,()=>n(r))||Es(a),t(i,()=>i(r))||Is(a),s(r,a),a},De=(s,t)=>(s.connect=t.connect.bind(t),s.disconnect=t.disconnect.bind(t),s),Qc=(s,t,e,n)=>(i,{offset:r,...o})=>{const a=i.createBuffer(1,2,44100),c=t(i,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),u=e(i,{...o,gain:r}),l=a.getChannelData(0);l[0]=1,l[1]=1,c.buffer=a,c.loop=!0;const h={get bufferSize(){},get channelCount(){return u.channelCount},set channelCount(d){u.channelCount=d},get channelCountMode(){return u.channelCountMode},set channelCountMode(d){u.channelCountMode=d},get channelInterpretation(){return u.channelInterpretation},set channelInterpretation(d){u.channelInterpretation=d},get context(){return u.context},get inputs(){return[]},get numberOfInputs(){return c.numberOfInputs},get numberOfOutputs(){return u.numberOfOutputs},get offset(){return u.gain},get onended(){return c.onended},set onended(d){c.onended=d},addEventListener(...d){return c.addEventListener(d[0],d[1],d[2])},dispatchEvent(...d){return c.dispatchEvent(d[0])},removeEventListener(...d){return c.removeEventListener(d[0],d[1],d[2])},start(d=0){c.start.call(c,d)},stop(d=0){c.stop.call(c,d)}},p=()=>c.connect(u),f=()=>c.disconnect(u);return s(i,c),n(De(h,u),p,f)},Jc=(s,t)=>(e,n)=>{const i=e.createConvolver();if(ft(i,n),n.disableNormalization===i.normalize&&(i.normalize=!n.disableNormalization),it(i,n,"buffer"),n.channelCount>2||(t(i,"channelCount",r=>()=>r.call(i),r=>o=>{if(o>2)throw s();return r.call(i,o)}),n.channelCountMode==="max"))throw s();return t(i,"channelCountMode",r=>()=>r.call(i),r=>o=>{if(o==="max")throw s();return r.call(i,o)}),i},rr=(s,t)=>{const e=s.createDelay(t.maxDelayTime);return ft(e,t),ct(e,t,"delayTime"),e},Kc=s=>(t,e)=>{const n=t.createDynamicsCompressor();if(ft(n,e),e.channelCount>2||e.channelCountMode==="max")throw s();return ct(n,e,"attack"),ct(n,e,"knee"),ct(n,e,"ratio"),ct(n,e,"release"),ct(n,e,"threshold"),n},kt=(s,t)=>{const e=s.createGain();return ft(e,t),ct(e,t,"gain"),e},tu=s=>(t,e,n)=>{if(t.createIIRFilter===void 0)return s(t,e,n);const i=t.createIIRFilter(n.feedforward,n.feedback);return ft(i,n),i};function eu(s,t){const e=t[0]*t[0]+t[1]*t[1];return[(s[0]*t[0]+s[1]*t[1])/e,(s[1]*t[0]-s[0]*t[1])/e]}function nu(s,t){return[s[0]*t[0]-s[1]*t[1],s[0]*t[1]+s[1]*t[0]]}function or(s,t){let e=[0,0];for(let n=s.length-1;n>=0;n-=1)e=nu(e,t),e[0]+=s[n];return e}const su=(s,t,e,n)=>(i,r,{channelCount:o,channelCountMode:a,channelInterpretation:c,feedback:u,feedforward:l})=>{const h=sr(r,i.sampleRate),p=u instanceof Float64Array?u:new Float64Array(u),f=l instanceof Float64Array?l:new Float64Array(l),d=p.length,m=f.length,_=Math.min(d,m);if(d===0||d>20)throw n();if(p[0]===0)throw t();if(m===0||m>20)throw n();if(f[0]===0)throw t();if(p[0]!==1){for(let v=0;v<m;v+=1)f[v]/=p[0];for(let v=1;v<d;v+=1)p[v]/=p[0]}const y=e(i,h,o,o);y.channelCount=o,y.channelCountMode=a,y.channelInterpretation=c;const b=32,x=[],S=[],g=[];for(let v=0;v<o;v+=1){x.push(0);const N=new Float32Array(b),A=new Float32Array(b);N.fill(0),A.fill(0),S.push(N),g.push(A)}y.onaudioprocess=v=>{const N=v.inputBuffer,A=v.outputBuffer,k=N.numberOfChannels;for(let C=0;C<k;C+=1){const E=N.getChannelData(C),D=A.getChannelData(C);x[C]=er(p,d,f,m,_,S[C],g[C],x[C],b,E,D)}};const w=i.sampleRate/2;return De({get bufferSize(){return h},get channelCount(){return y.channelCount},set channelCount(v){y.channelCount=v},get channelCountMode(){return y.channelCountMode},set channelCountMode(v){y.channelCountMode=v},get channelInterpretation(){return y.channelInterpretation},set channelInterpretation(v){y.channelInterpretation=v},get context(){return y.context},get inputs(){return[y]},get numberOfInputs(){return y.numberOfInputs},get numberOfOutputs(){return y.numberOfOutputs},addEventListener(...v){return y.addEventListener(v[0],v[1],v[2])},dispatchEvent(...v){return y.dispatchEvent(v[0])},getFrequencyResponse(v,N,A){if(v.length!==N.length||N.length!==A.length)throw s();const k=v.length;for(let C=0;C<k;C+=1){const E=-Math.PI*(v[C]/w),D=[Math.cos(E),Math.sin(E)],V=or(f,D),R=or(p,D),P=eu(V,R);N[C]=Math.sqrt(P[0]*P[0]+P[1]*P[1]),A[C]=Math.atan2(P[1],P[0])}},removeEventListener(...v){return y.removeEventListener(v[0],v[1],v[2])}},y)},iu=(s,t)=>s.createMediaElementSource(t.mediaElement),ru=(s,t)=>{const e=s.createMediaStreamDestination();return ft(e,t),e.numberOfOutputs===1&&Object.defineProperty(e,"numberOfOutputs",{get:()=>0}),e},ou=(s,{mediaStream:t})=>{const e=t.getAudioTracks();e.sort((r,o)=>r.id<o.id?-1:r.id>o.id?1:0);const n=e.slice(0,1),i=s.createMediaStreamSource(new MediaStream(n));return Object.defineProperty(i,"mediaStream",{value:t}),i},au=(s,t)=>(e,{mediaStreamTrack:n})=>{if(typeof e.createMediaStreamTrackSource=="function")return e.createMediaStreamTrackSource(n);const i=new MediaStream([n]),r=e.createMediaStreamSource(i);if(n.kind!=="audio")throw s();if(t(e))throw new TypeError;return r},cu=s=>s===null?null:s.hasOwnProperty("OfflineAudioContext")?s.OfflineAudioContext:s.hasOwnProperty("webkitOfflineAudioContext")?s.webkitOfflineAudioContext:null,uu=(s,t,e,n,i,r)=>(o,a)=>{const c=o.createOscillator();return ft(c,a),ct(c,a,"detune"),ct(c,a,"frequency"),a.periodicWave!==void 0?c.setPeriodicWave(a.periodicWave):it(c,a,"type"),t(e,()=>e(o))||Es(c),t(n,()=>n(o))||r(c,o),t(i,()=>i(o))||Is(c),s(o,c),c},lu=s=>(t,e)=>{const n=t.createPanner();return n.orientationX===void 0?s(t,e):(ft(n,e),ct(n,e,"orientationX"),ct(n,e,"orientationY"),ct(n,e,"orientationZ"),ct(n,e,"positionX"),ct(n,e,"positionY"),ct(n,e,"positionZ"),it(n,e,"coneInnerAngle"),it(n,e,"coneOuterAngle"),it(n,e,"coneOuterGain"),it(n,e,"distanceModel"),it(n,e,"maxDistance"),it(n,e,"panningModel"),it(n,e,"refDistance"),it(n,e,"rolloffFactor"),n)},hu=(s,t,e,n,i,r,o,a,c,u)=>(l,{coneInnerAngle:h,coneOuterAngle:p,coneOuterGain:f,distanceModel:d,maxDistance:m,orientationX:_,orientationY:y,orientationZ:b,panningModel:x,positionX:S,positionY:g,positionZ:w,refDistance:T,rolloffFactor:v,...N})=>{const A=l.createPanner();if(N.channelCount>2||N.channelCountMode==="max")throw o();ft(A,N);const k={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},C=e(l,{...k,channelInterpretation:"speakers",numberOfInputs:6}),E=n(l,{...N,gain:1}),D=n(l,{...k,gain:1}),V=n(l,{...k,gain:0}),R=n(l,{...k,gain:0}),P=n(l,{...k,gain:0}),z=n(l,{...k,gain:0}),q=n(l,{...k,gain:0}),B=i(l,256,6,1),j=r(l,{...k,curve:new Float32Array([1,1]),oversample:"none"});let tt=[_,y,b],Dt=[S,g,w];const Et=new Float32Array(1);B.onaudioprocess=({inputBuffer:F})=>{const Ce=[c(F,Et,0),c(F,Et,1),c(F,Et,2)];Ce.some((Qe,Je)=>Qe!==tt[Je])&&(A.setOrientation(...Ce),tt=Ce);const Se=[c(F,Et,3),c(F,Et,4),c(F,Et,5)];Se.some((Qe,Je)=>Qe!==Dt[Je])&&(A.setPosition(...Se),Dt=Se)},Object.defineProperty(V.gain,"defaultValue",{get:()=>0}),Object.defineProperty(R.gain,"defaultValue",{get:()=>0}),Object.defineProperty(P.gain,"defaultValue",{get:()=>0}),Object.defineProperty(z.gain,"defaultValue",{get:()=>0}),Object.defineProperty(q.gain,"defaultValue",{get:()=>0});const Z={get bufferSize(){},get channelCount(){return A.channelCount},set channelCount(F){if(F>2)throw o();E.channelCount=F,A.channelCount=F},get channelCountMode(){return A.channelCountMode},set channelCountMode(F){if(F==="max")throw o();E.channelCountMode=F,A.channelCountMode=F},get channelInterpretation(){return A.channelInterpretation},set channelInterpretation(F){E.channelInterpretation=F,A.channelInterpretation=F},get coneInnerAngle(){return A.coneInnerAngle},set coneInnerAngle(F){A.coneInnerAngle=F},get coneOuterAngle(){return A.coneOuterAngle},set coneOuterAngle(F){A.coneOuterAngle=F},get coneOuterGain(){return A.coneOuterGain},set coneOuterGain(F){if(F<0||F>1)throw t();A.coneOuterGain=F},get context(){return A.context},get distanceModel(){return A.distanceModel},set distanceModel(F){A.distanceModel=F},get inputs(){return[E]},get maxDistance(){return A.maxDistance},set maxDistance(F){if(F<0)throw new RangeError;A.maxDistance=F},get numberOfInputs(){return A.numberOfInputs},get numberOfOutputs(){return A.numberOfOutputs},get orientationX(){return D.gain},get orientationY(){return V.gain},get orientationZ(){return R.gain},get panningModel(){return A.panningModel},set panningModel(F){A.panningModel=F},get positionX(){return P.gain},get positionY(){return z.gain},get positionZ(){return q.gain},get refDistance(){return A.refDistance},set refDistance(F){if(F<0)throw new RangeError;A.refDistance=F},get rolloffFactor(){return A.rolloffFactor},set rolloffFactor(F){if(F<0)throw new RangeError;A.rolloffFactor=F},addEventListener(...F){return E.addEventListener(F[0],F[1],F[2])},dispatchEvent(...F){return E.dispatchEvent(F[0])},removeEventListener(...F){return E.removeEventListener(F[0],F[1],F[2])}};h!==Z.coneInnerAngle&&(Z.coneInnerAngle=h),p!==Z.coneOuterAngle&&(Z.coneOuterAngle=p),f!==Z.coneOuterGain&&(Z.coneOuterGain=f),d!==Z.distanceModel&&(Z.distanceModel=d),m!==Z.maxDistance&&(Z.maxDistance=m),_!==Z.orientationX.value&&(Z.orientationX.value=_),y!==Z.orientationY.value&&(Z.orientationY.value=y),b!==Z.orientationZ.value&&(Z.orientationZ.value=b),x!==Z.panningModel&&(Z.panningModel=x),S!==Z.positionX.value&&(Z.positionX.value=S),g!==Z.positionY.value&&(Z.positionY.value=g),w!==Z.positionZ.value&&(Z.positionZ.value=w),T!==Z.refDistance&&(Z.refDistance=T),v!==Z.rolloffFactor&&(Z.rolloffFactor=v),(tt[0]!==1||tt[1]!==0||tt[2]!==0)&&A.setOrientation(...tt),(Dt[0]!==0||Dt[1]!==0||Dt[2]!==0)&&A.setPosition(...Dt);const rt=()=>{E.connect(A),s(E,j,0,0),j.connect(D).connect(C,0,0),j.connect(V).connect(C,0,1),j.connect(R).connect(C,0,2),j.connect(P).connect(C,0,3),j.connect(z).connect(C,0,4),j.connect(q).connect(C,0,5),C.connect(B).connect(l.destination)},Ct=()=>{E.disconnect(A),a(E,j,0,0),j.disconnect(D),D.disconnect(C),j.disconnect(V),V.disconnect(C),j.disconnect(R),R.disconnect(C),j.disconnect(P),P.disconnect(C),j.disconnect(z),z.disconnect(C),j.disconnect(q),q.disconnect(C),C.disconnect(B),B.disconnect(l.destination)};return u(De(Z,A),rt,Ct)},du=s=>(t,{disableNormalization:e,imag:n,real:i})=>{const r=n instanceof Float32Array?n:new Float32Array(n),o=i instanceof Float32Array?i:new Float32Array(i),a=t.createPeriodicWave(o,r,{disableNormalization:e});if(Array.from(n).length<2)throw s();return a},cn=(s,t,e,n)=>s.createScriptProcessor(t,e,n),pu=(s,t)=>(e,n)=>{const i=n.channelCountMode;if(i==="clamped-max")throw t();if(e.createStereoPanner===void 0)return s(e,n);const r=e.createStereoPanner();return ft(r,n),ct(r,n,"pan"),Object.defineProperty(r,"channelCountMode",{get:()=>i,set:o=>{if(o!==i)throw t()}}),r},fu=(s,t,e,n,i,r)=>{const a=new Float32Array([1,1]),c=Math.PI/2,u={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},l={...u,oversample:"none"},h=(d,m,_,y)=>{const b=new Float32Array(16385),x=new Float32Array(16385);for(let N=0;N<16385;N+=1){const A=N/16384*c;b[N]=Math.cos(A),x[N]=Math.sin(A)}const S=e(d,{...u,gain:0}),g=n(d,{...l,curve:b}),w=n(d,{...l,curve:a}),T=e(d,{...u,gain:0}),v=n(d,{...l,curve:x});return{connectGraph(){m.connect(S),m.connect(w.inputs===void 0?w:w.inputs[0]),m.connect(T),w.connect(_),_.connect(g.inputs===void 0?g:g.inputs[0]),_.connect(v.inputs===void 0?v:v.inputs[0]),g.connect(S.gain),v.connect(T.gain),S.connect(y,0,0),T.connect(y,0,1)},disconnectGraph(){m.disconnect(S),m.disconnect(w.inputs===void 0?w:w.inputs[0]),m.disconnect(T),w.disconnect(_),_.disconnect(g.inputs===void 0?g:g.inputs[0]),_.disconnect(v.inputs===void 0?v:v.inputs[0]),g.disconnect(S.gain),v.disconnect(T.gain),S.disconnect(y,0,0),T.disconnect(y,0,1)}}},p=(d,m,_,y)=>{const b=new Float32Array(16385),x=new Float32Array(16385),S=new Float32Array(16385),g=new Float32Array(16385),w=Math.floor(16385/2);for(let P=0;P<16385;P+=1)if(P>w){const z=(P-w)/(16384-w)*c;b[P]=Math.cos(z),x[P]=Math.sin(z),S[P]=0,g[P]=1}else{const z=P/(16384-w)*c;b[P]=1,x[P]=0,S[P]=Math.cos(z),g[P]=Math.sin(z)}const T=t(d,{channelCount:2,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:2}),v=e(d,{...u,gain:0}),N=n(d,{...l,curve:b}),A=e(d,{...u,gain:0}),k=n(d,{...l,curve:x}),C=n(d,{...l,curve:a}),E=e(d,{...u,gain:0}),D=n(d,{...l,curve:S}),V=e(d,{...u,gain:0}),R=n(d,{...l,curve:g});return{connectGraph(){m.connect(T),m.connect(C.inputs===void 0?C:C.inputs[0]),T.connect(v,0),T.connect(A,0),T.connect(E,1),T.connect(V,1),C.connect(_),_.connect(N.inputs===void 0?N:N.inputs[0]),_.connect(k.inputs===void 0?k:k.inputs[0]),_.connect(D.inputs===void 0?D:D.inputs[0]),_.connect(R.inputs===void 0?R:R.inputs[0]),N.connect(v.gain),k.connect(A.gain),D.connect(E.gain),R.connect(V.gain),v.connect(y,0,0),E.connect(y,0,0),A.connect(y,0,1),V.connect(y,0,1)},disconnectGraph(){m.disconnect(T),m.disconnect(C.inputs===void 0?C:C.inputs[0]),T.disconnect(v,0),T.disconnect(A,0),T.disconnect(E,1),T.disconnect(V,1),C.disconnect(_),_.disconnect(N.inputs===void 0?N:N.inputs[0]),_.disconnect(k.inputs===void 0?k:k.inputs[0]),_.disconnect(D.inputs===void 0?D:D.inputs[0]),_.disconnect(R.inputs===void 0?R:R.inputs[0]),N.disconnect(v.gain),k.disconnect(A.gain),D.disconnect(E.gain),R.disconnect(V.gain),v.disconnect(y,0,0),E.disconnect(y,0,0),A.disconnect(y,0,1),V.disconnect(y,0,1)}}},f=(d,m,_,y,b)=>{if(m===1)return h(d,_,y,b);if(m===2)return p(d,_,y,b);throw i()};return(d,{channelCount:m,channelCountMode:_,pan:y,...b})=>{if(_==="max")throw i();const x=s(d,{...b,channelCount:1,channelCountMode:_,numberOfInputs:2}),S=e(d,{...b,channelCount:m,channelCountMode:_,gain:1}),g=e(d,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:y});let{connectGraph:w,disconnectGraph:T}=f(d,m,S,g,x);Object.defineProperty(g.gain,"defaultValue",{get:()=>0}),Object.defineProperty(g.gain,"maxValue",{get:()=>1}),Object.defineProperty(g.gain,"minValue",{get:()=>-1});const v={get bufferSize(){},get channelCount(){return S.channelCount},set channelCount(C){S.channelCount!==C&&(N&&T(),{connectGraph:w,disconnectGraph:T}=f(d,C,S,g,x),N&&w()),S.channelCount=C},get channelCountMode(){return S.channelCountMode},set channelCountMode(C){if(C==="clamped-max"||C==="max")throw i();S.channelCountMode=C},get channelInterpretation(){return S.channelInterpretation},set channelInterpretation(C){S.channelInterpretation=C},get context(){return S.context},get inputs(){return[S]},get numberOfInputs(){return S.numberOfInputs},get numberOfOutputs(){return S.numberOfOutputs},get pan(){return g.gain},addEventListener(...C){return S.addEventListener(C[0],C[1],C[2])},dispatchEvent(...C){return S.dispatchEvent(C[0])},removeEventListener(...C){return S.removeEventListener(C[0],C[1],C[2])}};let N=!1;const A=()=>{w(),N=!0},k=()=>{T(),N=!1};return r(De(v,x),A,k)}},mu=(s,t,e,n,i,r,o)=>(a,c)=>{const u=a.createWaveShaper();if(r!==null&&r.name==="webkitAudioContext"&&a.createGain().gain.automationRate===void 0)return e(a,c);ft(u,c);const l=c.curve===null||c.curve instanceof Float32Array?c.curve:new Float32Array(c.curve);if(l!==null&&l.length<2)throw t();it(u,{curve:l},"curve"),it(u,c,"oversample");let h=null,p=!1;return o(u,"curve",m=>()=>m.call(u),m=>_=>(m.call(u,_),p&&(n(_)&&h===null?h=s(a,u):!n(_)&&h!==null&&(h(),h=null)),_)),i(u,()=>{p=!0,n(u.curve)&&(h=s(a,u))},()=>{p=!1,h!==null&&(h(),h=null)})},_u=(s,t,e,n,i)=>(r,{curve:o,oversample:a,...c})=>{const u=r.createWaveShaper(),l=r.createWaveShaper();ft(u,c),ft(l,c);const h=e(r,{...c,gain:1}),p=e(r,{...c,gain:-1}),f=e(r,{...c,gain:1}),d=e(r,{...c,gain:-1});let m=null,_=!1,y=null;const b={get bufferSize(){},get channelCount(){return u.channelCount},set channelCount(g){h.channelCount=g,p.channelCount=g,u.channelCount=g,f.channelCount=g,l.channelCount=g,d.channelCount=g},get channelCountMode(){return u.channelCountMode},set channelCountMode(g){h.channelCountMode=g,p.channelCountMode=g,u.channelCountMode=g,f.channelCountMode=g,l.channelCountMode=g,d.channelCountMode=g},get channelInterpretation(){return u.channelInterpretation},set channelInterpretation(g){h.channelInterpretation=g,p.channelInterpretation=g,u.channelInterpretation=g,f.channelInterpretation=g,l.channelInterpretation=g,d.channelInterpretation=g},get context(){return u.context},get curve(){return y},set curve(g){if(g!==null&&g.length<2)throw t();if(g===null)u.curve=g,l.curve=g;else{const w=g.length,T=new Float32Array(w+2-w%2),v=new Float32Array(w+2-w%2);T[0]=g[0],v[0]=-g[w-1];const N=Math.ceil((w+1)/2),A=(w+1)/2-1;for(let k=1;k<N;k+=1){const C=k/N*A,E=Math.floor(C),D=Math.ceil(C);T[k]=E===D?g[E]:(1-(C-E))*g[E]+(1-(D-C))*g[D],v[k]=E===D?-g[w-1-E]:-((1-(C-E))*g[w-1-E])-(1-(D-C))*g[w-1-D]}T[N]=w%2===1?g[N-1]:(g[N-2]+g[N-1])/2,u.curve=T,l.curve=v}y=g,_&&(n(y)&&m===null?m=s(r,h):m!==null&&(m(),m=null))},get inputs(){return[h]},get numberOfInputs(){return u.numberOfInputs},get numberOfOutputs(){return u.numberOfOutputs},get oversample(){return u.oversample},set oversample(g){u.oversample=g,l.oversample=g},addEventListener(...g){return h.addEventListener(g[0],g[1],g[2])},dispatchEvent(...g){return h.dispatchEvent(g[0])},removeEventListener(...g){return h.removeEventListener(g[0],g[1],g[2])}};o!==null&&(b.curve=o instanceof Float32Array?o:new Float32Array(o)),a!==b.oversample&&(b.oversample=a);const x=()=>{h.connect(u).connect(f),h.connect(p).connect(l).connect(d).connect(f),_=!0,n(y)&&(m=s(r,h))},S=()=>{h.disconnect(u),u.disconnect(f),h.disconnect(p),p.disconnect(l),l.disconnect(d),d.disconnect(f),_=!1,m!==null&&(m(),m=null)};return i(De(b,f),x,S)},Tt=()=>new DOMException("","NotSupportedError"),gu={numberOfChannels:1},yu=(s,t,e,n,i)=>class extends s{constructor(o,a,c){let u;if(typeof o=="number"&&a!==void 0&&c!==void 0)u={length:a,numberOfChannels:o,sampleRate:c};else if(typeof o=="object")u=o;else throw new Error("The given parameters are not valid.");const{length:l,numberOfChannels:h,sampleRate:p}={...gu,...u},f=n(h,l,p);t(on,()=>on(f))||f.addEventListener("statechange",(()=>{let d=0;const m=_=>{this._state==="running"&&(d>0?(f.removeEventListener("statechange",m),_.stopImmediatePropagation(),this._waitForThePromiseToSettle(_)):d+=1)};return m})()),super(f,h),this._length=l,this._nativeOfflineAudioContext=f,this._state=null}get length(){return this._nativeOfflineAudioContext.length===void 0?this._length:this._nativeOfflineAudioContext.length}get state(){return this._state===null?this._nativeOfflineAudioContext.state:this._state}startRendering(){return this._state==="running"?Promise.reject(e()):(this._state="running",i(this.destination,this._nativeOfflineAudioContext).finally(()=>{this._state=null,zi(this)}))}_waitForThePromiseToSettle(o){this._state===null?this._nativeOfflineAudioContext.dispatchEvent(o):setTimeout(()=>this._waitForThePromiseToSettle(o))}},vu={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:440,periodicWave:void 0,type:"sine"},wu=(s,t,e,n,i,r,o)=>class extends s{constructor(c,u){const l=i(c),h={...vu,...u},p=e(l,h),f=r(l),d=f?n():null,m=c.sampleRate/2;super(c,!1,p,d),this._detune=t(this,f,p.detune,153600,-153600),this._frequency=t(this,f,p.frequency,m,-m),this._nativeOscillatorNode=p,this._onended=null,this._oscillatorNodeRenderer=d,this._oscillatorNodeRenderer!==null&&h.periodicWave!==void 0&&(this._oscillatorNodeRenderer.periodicWave=h.periodicWave)}get detune(){return this._detune}get frequency(){return this._frequency}get onended(){return this._onended}set onended(c){const u=typeof c=="function"?o(this,c):null;this._nativeOscillatorNode.onended=u;const l=this._nativeOscillatorNode.onended;this._onended=l!==null&&l===u?c:l}get type(){return this._nativeOscillatorNode.type}set type(c){this._nativeOscillatorNode.type=c,this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=null)}setPeriodicWave(c){this._nativeOscillatorNode.setPeriodicWave(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=c)}start(c=0){if(this._nativeOscillatorNode.start(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.start=c),this.context.state!=="closed"){Ne(this);const u=()=>{this._nativeOscillatorNode.removeEventListener("ended",u),Jt(this)&&en(this)};this._nativeOscillatorNode.addEventListener("ended",u)}}stop(c=0){this._nativeOscillatorNode.stop(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.stop=c)}},Tu=(s,t,e,n,i)=>()=>{const r=new WeakMap;let o=null,a=null,c=null;const u=async(l,h)=>{let p=e(l);const f=yt(p,h);if(!f){const d={channelCount:p.channelCount,channelCountMode:p.channelCountMode,channelInterpretation:p.channelInterpretation,detune:p.detune.value,frequency:p.frequency.value,periodicWave:o===null?void 0:o,type:p.type};p=t(h,d),a!==null&&p.start(a),c!==null&&p.stop(c)}return r.set(h,p),f?(await s(h,l.detune,p.detune),await s(h,l.frequency,p.frequency)):(await n(h,l.detune,p.detune),await n(h,l.frequency,p.frequency)),await i(l,h,p),p};return{set periodicWave(l){o=l},set start(l){a=l},set stop(l){c=l},render(l,h){const p=r.get(h);return p!==void 0?Promise.resolve(p):u(l,h)}}},bu={channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",coneInnerAngle:360,coneOuterAngle:360,coneOuterGain:0,distanceModel:"inverse",maxDistance:1e4,orientationX:1,orientationY:0,orientationZ:0,panningModel:"equalpower",positionX:0,positionY:0,positionZ:0,refDistance:1,rolloffFactor:1},xu=(s,t,e,n,i,r,o)=>class extends s{constructor(c,u){const l=i(c),h={...bu,...u},p=e(l,h),f=r(l),d=f?n():null;super(c,!1,p,d),this._nativePannerNode=p,this._orientationX=t(this,f,p.orientationX,vt,St),this._orientationY=t(this,f,p.orientationY,vt,St),this._orientationZ=t(this,f,p.orientationZ,vt,St),this._positionX=t(this,f,p.positionX,vt,St),this._positionY=t(this,f,p.positionY,vt,St),this._positionZ=t(this,f,p.positionZ,vt,St),o(this,1)}get coneInnerAngle(){return this._nativePannerNode.coneInnerAngle}set coneInnerAngle(c){this._nativePannerNode.coneInnerAngle=c}get coneOuterAngle(){return this._nativePannerNode.coneOuterAngle}set coneOuterAngle(c){this._nativePannerNode.coneOuterAngle=c}get coneOuterGain(){return this._nativePannerNode.coneOuterGain}set coneOuterGain(c){this._nativePannerNode.coneOuterGain=c}get distanceModel(){return this._nativePannerNode.distanceModel}set distanceModel(c){this._nativePannerNode.distanceModel=c}get maxDistance(){return this._nativePannerNode.maxDistance}set maxDistance(c){this._nativePannerNode.maxDistance=c}get orientationX(){return this._orientationX}get orientationY(){return this._orientationY}get orientationZ(){return this._orientationZ}get panningModel(){return this._nativePannerNode.panningModel}set panningModel(c){this._nativePannerNode.panningModel=c}get positionX(){return this._positionX}get positionY(){return this._positionY}get positionZ(){return this._positionZ}get refDistance(){return this._nativePannerNode.refDistance}set refDistance(c){this._nativePannerNode.refDistance=c}get rolloffFactor(){return this._nativePannerNode.rolloffFactor}set rolloffFactor(c){this._nativePannerNode.rolloffFactor=c}},Cu=(s,t,e,n,i,r,o,a,c,u)=>()=>{const l=new WeakMap;let h=null;const p=async(f,d)=>{let m=null,_=r(f);const y={channelCount:_.channelCount,channelCountMode:_.channelCountMode,channelInterpretation:_.channelInterpretation},b={...y,coneInnerAngle:_.coneInnerAngle,coneOuterAngle:_.coneOuterAngle,coneOuterGain:_.coneOuterGain,distanceModel:_.distanceModel,maxDistance:_.maxDistance,panningModel:_.panningModel,refDistance:_.refDistance,rolloffFactor:_.rolloffFactor},x=yt(_,d);if("bufferSize"in _)m=n(d,{...y,gain:1});else if(!x){const S={...b,orientationX:_.orientationX.value,orientationY:_.orientationY.value,orientationZ:_.orientationZ.value,positionX:_.positionX.value,positionY:_.positionY.value,positionZ:_.positionZ.value};_=i(d,S)}if(l.set(d,m===null?_:m),m!==null){if(h===null){if(o===null)throw new Error("Missing the native OfflineAudioContext constructor.");const k=new o(6,f.context.length,d.sampleRate),C=t(k,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6});C.connect(k.destination),h=(async()=>{const E=await Promise.all([f.orientationX,f.orientationY,f.orientationZ,f.positionX,f.positionY,f.positionZ].map(async(D,V)=>{const R=e(k,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:V===0?1:0});return await a(k,D,R.offset),R}));for(let D=0;D<6;D+=1)E[D].connect(C,0,D),E[D].start(0);return u(k)})()}const S=await h,g=n(d,{...y,gain:1});await c(f,d,g);const w=[];for(let k=0;k<S.numberOfChannels;k+=1)w.push(S.getChannelData(k));let T=[w[0][0],w[1][0],w[2][0]],v=[w[3][0],w[4][0],w[5][0]],N=n(d,{...y,gain:1}),A=i(d,{...b,orientationX:T[0],orientationY:T[1],orientationZ:T[2],positionX:v[0],positionY:v[1],positionZ:v[2]});g.connect(N).connect(A.inputs[0]),A.connect(m);for(let k=128;k<S.length;k+=128){const C=[w[0][k],w[1][k],w[2][k]],E=[w[3][k],w[4][k],w[5][k]];if(C.some((D,V)=>D!==T[V])||E.some((D,V)=>D!==v[V])){T=C,v=E;const D=k/d.sampleRate;N.gain.setValueAtTime(0,D),N=n(d,{...y,gain:0}),A=i(d,{...b,orientationX:T[0],orientationY:T[1],orientationZ:T[2],positionX:v[0],positionY:v[1],positionZ:v[2]}),N.gain.setValueAtTime(1,D),g.connect(N).connect(A.inputs[0]),A.connect(m)}}return m}return x?(await s(d,f.orientationX,_.orientationX),await s(d,f.orientationY,_.orientationY),await s(d,f.orientationZ,_.orientationZ),await s(d,f.positionX,_.positionX),await s(d,f.positionY,_.positionY),await s(d,f.positionZ,_.positionZ)):(await a(d,f.orientationX,_.orientationX),await a(d,f.orientationY,_.orientationY),await a(d,f.orientationZ,_.orientationZ),await a(d,f.positionX,_.positionX),await a(d,f.positionY,_.positionY),await a(d,f.positionZ,_.positionZ)),Oe(_)?await c(f,d,_.inputs[0]):await c(f,d,_),_};return{render(f,d){const m=l.get(d);return m!==void 0?Promise.resolve(m):p(f,d)}}},Su={disableNormalization:!1},ku=(s,t,e,n)=>class po{constructor(r,o){const a=t(r),c=n({...Su,...o}),u=s(a,c);return e.add(u),u}static[Symbol.hasInstance](r){return r!==null&&typeof r=="object"&&Object.getPrototypeOf(r)===po.prototype||e.has(r)}},Au=(s,t)=>(e,n,i)=>(s(n).replay(i),t(n,e,i)),Nu=(s,t,e)=>async(n,i,r)=>{const o=s(n);await Promise.all(o.activeInputs.map((a,c)=>Array.from(a).map(async([u,l])=>{const p=await t(u).render(u,i),f=n.context.destination;!e(u)&&(n!==f||!e(n))&&p.connect(r,l,c)})).reduce((a,c)=>[...a,...c],[]))},Ou=(s,t,e)=>async(n,i,r)=>{const o=t(n);await Promise.all(Array.from(o.activeInputs).map(async([a,c])=>{const l=await s(a).render(a,i);e(a)||l.connect(r,c)}))},Du=(s,t,e,n)=>i=>s(on,()=>on(i))?Promise.resolve(s(n,n)).then(r=>{if(!r){const o=e(i,512,0,1);i.oncomplete=()=>{o.onaudioprocess=null,o.disconnect()},o.onaudioprocess=()=>i.currentTime,o.connect(i.destination)}return i.startRendering()}):new Promise(r=>{const o=t(i,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});i.oncomplete=a=>{o.disconnect(),r(a.renderedBuffer)},o.connect(i.destination),i.startRendering()}),Eu=s=>(t,e)=>{s.set(t,e)},Iu=s=>(t,e)=>s.set(t,e),Mu=(s,t,e,n,i,r,o,a)=>(c,u)=>e(c).render(c,u).then(()=>Promise.all(Array.from(n(u)).map(l=>e(l).render(l,u)))).then(()=>i(u)).then(l=>(typeof l.copyFromChannel!="function"?(o(l),ks(l)):t(r,()=>r(l))||a(l),s.add(l),l)),Ru={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",pan:0},Pu=(s,t,e,n,i,r)=>class extends s{constructor(a,c){const u=i(a),l={...Ru,...c},h=e(u,l),p=r(u),f=p?n():null;super(a,!1,h,f),this._pan=t(this,p,h.pan)}get pan(){return this._pan}},Fu=(s,t,e,n,i)=>()=>{const r=new WeakMap,o=async(a,c)=>{let u=e(a);const l=yt(u,c);if(!l){const h={channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,pan:u.pan.value};u=t(c,h)}return r.set(c,u),l?await s(c,a.pan,u.pan):await n(c,a.pan,u.pan),Oe(u)?await i(a,c,u.inputs[0]):await i(a,c,u),u};return{render(a,c){const u=r.get(c);return u!==void 0?Promise.resolve(u):o(a,c)}}},Vu=s=>()=>{if(s===null)return!1;try{new s({length:1,sampleRate:44100})}catch{return!1}return!0},qu=(s,t)=>async()=>{if(s===null)return!0;if(t===null)return!1;const e=new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor("a",A)'],{type:"application/javascript; charset=utf-8"}),n=new t(1,128,44100),i=URL.createObjectURL(e);let r=!1,o=!1;try{await n.audioWorklet.addModule(i);const a=new s(n,"a",{numberOfOutputs:0}),c=n.createOscillator();a.port.onmessage=()=>r=!0,a.onprocessorerror=()=>o=!0,c.connect(a),c.start(0),await n.startRendering(),await new Promise(u=>setTimeout(u))}catch{}finally{URL.revokeObjectURL(i)}return r&&!o},Lu=(s,t)=>()=>{if(t===null)return Promise.resolve(!1);const e=new t(1,1,44100),n=s(e,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return new Promise(i=>{e.oncomplete=()=>{n.disconnect(),i(e.currentTime!==0)},e.startRendering()})},Wu=()=>new DOMException("","UnknownError"),ju={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",curve:null,oversample:"none"},Bu=(s,t,e,n,i,r,o)=>class extends s{constructor(c,u){const l=i(c),h={...ju,...u},p=e(l,h),d=r(l)?n():null;super(c,!0,p,d),this._isCurveNullified=!1,this._nativeWaveShaperNode=p,o(this,1)}get curve(){return this._isCurveNullified?null:this._nativeWaveShaperNode.curve}set curve(c){if(c===null)this._isCurveNullified=!0,this._nativeWaveShaperNode.curve=new Float32Array([0,0]);else{if(c.length<2)throw t();this._isCurveNullified=!1,this._nativeWaveShaperNode.curve=c}}get oversample(){return this._nativeWaveShaperNode.oversample}set oversample(c){this._nativeWaveShaperNode.oversample=c}},Uu=(s,t,e)=>()=>{const n=new WeakMap,i=async(r,o)=>{let a=t(r);if(!yt(a,o)){const u={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,curve:a.curve,oversample:a.oversample};a=s(o,u)}return n.set(o,a),Oe(a)?await e(r,o,a.inputs[0]):await e(r,o,a),a};return{render(r,o){const a=n.get(o);return a!==void 0?Promise.resolve(a):i(r,o)}}},Gu=()=>typeof window>"u"?null:window,zu=(s,t)=>e=>{e.copyFromChannel=(n,i,r=0)=>{const o=s(r),a=s(i);if(a>=e.numberOfChannels)throw t();const c=e.length,u=e.getChannelData(a),l=n.length;for(let h=o<0?-o:0;h+o<c&&h<l;h+=1)n[h]=u[h+o]},e.copyToChannel=(n,i,r=0)=>{const o=s(r),a=s(i);if(a>=e.numberOfChannels)throw t();const c=e.length,u=e.getChannelData(a),l=n.length;for(let h=o<0?-o:0;h+o<c&&h<l;h+=1)u[h+o]=n[h]}},$u=s=>t=>{t.copyFromChannel=(e=>(n,i,r=0)=>{const o=s(r),a=s(i);if(o<t.length)return e.call(t,n,a,o)})(t.copyFromChannel),t.copyToChannel=(e=>(n,i,r=0)=>{const o=s(r),a=s(i);if(o<t.length)return e.call(t,n,a,o)})(t.copyToChannel)},Zu=s=>(t,e)=>{const n=e.createBuffer(1,1,44100);t.buffer===null&&(t.buffer=n),s(t,"buffer",i=>()=>{const r=i.call(t);return r===n?null:r},i=>r=>i.call(t,r===null?n:r))},Xu=(s,t)=>(e,n)=>{n.channelCount=1,n.channelCountMode="explicit",Object.defineProperty(n,"channelCount",{get:()=>1,set:()=>{throw s()}}),Object.defineProperty(n,"channelCountMode",{get:()=>"explicit",set:()=>{throw s()}});const i=e.createBufferSource();t(n,()=>{const a=n.numberOfInputs;for(let c=0;c<a;c+=1)i.connect(n,0,c)},()=>i.disconnect(n))},ar=(s,t,e)=>s.copyFromChannel===void 0?s.getChannelData(e)[0]:(s.copyFromChannel(t,e),t[0]),cr=s=>{if(s===null)return!1;const t=s.length;return t%2!==0?s[Math.floor(t/2)]!==0:s[t/2-1]+s[t/2]!==0},un=(s,t,e,n)=>{let i=s;for(;!i.hasOwnProperty(t);)i=Object.getPrototypeOf(i);const{get:r,set:o}=Object.getOwnPropertyDescriptor(i,t);Object.defineProperty(s,t,{get:e(r),set:n(o)})},Yu=s=>({...s,outputChannelCount:s.outputChannelCount!==void 0?s.outputChannelCount:s.numberOfInputs===1&&s.numberOfOutputs===1?[s.channelCount]:Array.from({length:s.numberOfOutputs},()=>1)}),Hu=s=>({...s,channelCount:s.numberOfOutputs}),Qu=s=>{const{imag:t,real:e}=s;return t===void 0?e===void 0?{...s,imag:[0,0],real:[0,0]}:{...s,imag:Array.from(e,()=>0),real:e}:e===void 0?{...s,imag:t,real:Array.from(t,()=>0)}:{...s,imag:t,real:e}},ur=(s,t,e)=>{try{s.setValueAtTime(t,e)}catch(n){if(n.code!==9)throw n;ur(s,t,e+1e-7)}},Ju=s=>{const t=s.createBufferSource();t.start();try{t.start()}catch{return!0}return!1},Ku=s=>{const t=s.createBufferSource(),e=s.createBuffer(1,1,44100);t.buffer=e;try{t.start(0,1)}catch{return!1}return!0},tl=s=>{const t=s.createBufferSource();t.start();try{t.stop()}catch{return!1}return!0},Ms=s=>{const t=s.createOscillator();try{t.start(-1)}catch(e){return e instanceof RangeError}return!1},lr=s=>{const t=s.createBuffer(1,1,44100),e=s.createBufferSource();e.buffer=t,e.start(),e.stop();try{return e.stop(),!0}catch{return!1}},Rs=s=>{const t=s.createOscillator();try{t.stop(-1)}catch(e){return e instanceof RangeError}return!1},el=s=>{const{port1:t,port2:e}=new MessageChannel;try{t.postMessage(s)}finally{t.close(),e.close()}},nl=s=>{s.start=(t=>(e=0,n=0,i)=>{const r=s.buffer,o=r===null?n:Math.min(r.duration,n);r!==null&&o>r.duration-.5/s.context.sampleRate?t.call(s,e,0,0):t.call(s,e,o,i)})(s.start)},hr=(s,t)=>{const e=t.createGain();s.connect(e);const n=(i=>()=>{i.call(s,e),s.removeEventListener("ended",n)})(s.disconnect);s.addEventListener("ended",n),De(s,e),s.stop=(i=>{let r=!1;return(o=0)=>{if(r)try{i.call(s,o)}catch{e.gain.setValueAtTime(0,o)}else i.call(s,o),r=!0}})(s.stop)},Ee=(s,t)=>e=>{const n={value:s};return Object.defineProperties(e,{currentTarget:n,target:n}),typeof t=="function"?t.call(s,e):t.handleEvent.call(s,e)},sl=xo(me),il=Oo(me),rl=ja(En),dr=new WeakMap,ol=rc(dr),qt=ga(new Map,new WeakMap),$t=Gu(),pr=Pc(qt,zt),Ps=ic(wt),gt=Nu(wt,Ps,_e),al=Ro(pr,st,gt),nt=cc(Dn),Kt=cu($t),K=Sc(Kt),fr=new WeakMap,mr=Qa(Ee),ln=Lc($t),Fs=Tc(ln),Vs=bc($t),_r=xc($t),hn=jc($t),ht=ra(Co(Pi),No(sl,il,Rn,rl,Pn,wt,ol,tn,st,me,Jt,_e,Fn),qt,_c(bs,Pn,wt,st,rn,Jt),zt,jn,Tt,Va(Rn,bs,wt,st,rn,nt,Jt,K),Ga(fr,wt,Vt),mr,nt,Fs,Vs,_r,K,hn),cl=Mo(ht,al,zt,pr,nt,K),qs=new WeakSet,gr=Fc($t),yr=Da(new Uint32Array(1)),Ls=zu(yr,zt),Ws=$u(yr),vr=Fo(qs,qt,Tt,gr,Kt,Vu(gr),Ls,Ws),Bn=Do(kt),wr=Ou(Ps,nn,_e),Zt=Ca(wr),Ie=qc(Bn,qt,Ju,Ku,tl,Ms,lr,Rs,nl,Zu(un),hr),Xt=Au(oc(nn),wr),ul=Lo(Zt,Ie,st,Xt,gt),Lt=oa(So(Fi),fr,Ts,aa,go,yo,vo,wo,To,_s,Di,ln,ur),ll=qo(ht,ul,Lt,_t,Ie,nt,K,Ee),hl=Xo(ht,Yo,zt,_t,Wc(kt,un),nt,K,gt),dl=_a(Zt,ir,st,Xt,gt),ge=Iu(dr),pl=ma(ht,Lt,dl,jn,ir,nt,K,ge),ce=Mc(me,Vs),fl=Xu(_t,ce),ue=Xc(ln,fl),ml=wa(ue,st,gt),_l=va(ht,ml,ue,nt,K),gl=xa(an,st,gt),yl=ba(ht,gl,an,nt,K,Hu),vl=Qc(Bn,Ie,kt,ce),Me=Hc(Bn,qt,vl,Ms,Rs),wl=Oa(Zt,Me,st,Xt,gt),Tl=Na(ht,Lt,wl,Me,nt,K,Ee),Tr=Jc(Tt,un),bl=Ma(Tr,st,gt),xl=Ia(ht,bl,Tr,nt,K,ge),Cl=Wa(Zt,rr,st,Xt,gt),Sl=La(ht,Lt,Cl,rr,nt,K,ge),br=Kc(Tt),kl=Xa(Zt,br,st,Xt,gt),Al=Za(ht,Lt,kl,br,Tt,nt,K,ge),Nl=nc(Zt,kt,st,Xt,gt),Ol=ec(ht,Lt,Nl,kt,nt,K),Dl=su(jn,_t,cn,Tt),Un=Du(qt,kt,cn,Lu(kt,Kt)),El=mc(Ie,st,Kt,gt,Un),Il=tu(Dl),Ml=pc(ht,Il,El,nt,K,ge),Rl=Ho(Lt,ue,Me,cn,Tt,ar,K,un),xr=new WeakMap,Pl=Ic(hl,Rl,mr,K,xr,Ee),Cr=uu(Bn,qt,Ms,lr,Rs,hr),Fl=Tu(Zt,Cr,st,Xt,gt),Vl=wu(ht,Lt,Cr,Fl,nt,K,Ee),Sr=ka(Ie),ql=_u(Sr,_t,kt,cr,ce),Gn=mu(Sr,_t,ql,cr,ce,ln,un),Ll=hu(Rn,_t,ue,kt,cn,Gn,Tt,Pn,ar,ce),kr=lu(Ll),Wl=Cu(Zt,ue,Me,kt,kr,st,Kt,Xt,gt,Un),jl=xu(ht,Lt,kr,Wl,nt,K,ge),Bl=du(zt),Ul=ku(Bl,nt,new WeakSet,Qu),Gl=fu(ue,an,kt,Gn,Tt,ce),Ar=pu(Gl,Tt),zl=Fu(Zt,Ar,st,Xt,gt),$l=Pu(ht,Lt,Ar,zl,nt,K),Zl=Uu(Gn,st,gt),Xl=Bu(ht,_t,Gn,Zl,nt,K,ge),Nr=kc($t),js=Ja($t),Or=new WeakMap,Yl=uc(Or,Kt),Hl=Nr?Ao(qt,Tt,Ha($t),js,Ka(bo),nt,Yl,K,hn,new WeakMap,new WeakMap,qu(hn,Kt),$t):void 0,Ql=Cc(Fs,K),Jl=Fa(qs,qt,Pa,Ya,new WeakSet,nt,Ql,In,on,Ls,Ws),Dr=pa(Hl,cl,vr,ll,pl,_l,yl,Tl,xl,Jl,Sl,Al,Ol,Ml,Pl,Vl,jl,Ul,$l,Xl),Kl=Ac(ht,iu,nt,K),th=Oc(ht,ru,nt,K),eh=Dc(ht,ou,nt,K),nh=au(_t,K),sh=Ec(ht,nh,nt),ih=Zo(Dr,_t,Tt,Wu,Kl,th,eh,sh,ln),Bs=lc(xr),rh=Eo(Bs),Er=Sa(zt),oh=Ba(Bs),Ir=za(zt),Mr=new WeakMap,ah=sc(Mr,Vt),ch=Zc(Er,zt,_t,ue,an,Me,kt,cn,Tt,Ir,js,ah,ce),uh=Uc(_t,ch,kt,Tt,ce),lh=da(Zt,Er,Ie,ue,an,Me,kt,oh,Ir,js,st,hn,Kt,Xt,gt,Un),hh=ac(Or),dh=Eu(Mr),Rr=Nr?ua(rh,ht,Lt,lh,uh,wt,hh,nt,K,hn,Yu,dh,el,Ee):void 0,ph=Ra(Tt,Kt),fh=Mu(qs,qt,Ps,Bs,Un,In,Ls,Ws),mh=yu(Dr,qt,_t,ph,fh),_h=gc(Dn,Fs),gh=yc(ws,Vs),yh=vc(Ts,_r),vh=wc(Dn,K);function It(s){return s===void 0}function $(s){return s!==void 0}function wh(s){return typeof s=="function"}function le(s){return typeof s=="number"}function ye(s){return Object.prototype.toString.call(s)==="[object Object]"&&s.constructor===Object}function Th(s){return typeof s=="boolean"}function Wt(s){return Array.isArray(s)}function te(s){return typeof s=="string"}function zn(s){return te(s)&&/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(s)}function W(s,t){if(!s)throw new Error(t)}function Mt(s,t,e=1/0){if(!(t<=s&&s<=e))throw new RangeError(`Value must be within [${t}, ${e}], got: ${s}`)}function Pr(s){!s.isOffline&&s.state!=="running"&&Us('The AudioContext is "suspended". Invoke Tone.start() from a user action to start the audio.')}let Fr=!1,Vr=!1;function qr(s){Fr=s}function bh(s){It(s)&&Fr&&!Vr&&(Vr=!0,Us("Events scheduled inside of scheduled callbacks should use the passed in scheduling time. See https://github.com/Tonejs/Tone.js/wiki/Accurate-Timing"))}let Lr=console;function xh(...s){Lr.log(...s)}function Us(...s){Lr.warn(...s)}function Ch(s){return new ih(s)}function Sh(s,t,e){return new mh(s,t,e)}const Nt=typeof self=="object"?self:null,kh=Nt&&(Nt.hasOwnProperty("AudioContext")||Nt.hasOwnProperty("webkitAudioContext"));function Ah(s,t,e){return W($(Rr),"AudioWorkletNode only works in a secure context (https or localhost)"),new(s instanceof Nt?.BaseAudioContext?Nt?.AudioWorkletNode:Rr)(s,t,e)}function jt(s,t,e,n){var i=arguments.length,r=i<3?t:n===null?n=Object.getOwnPropertyDescriptor(t,e):n,o;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")r=Reflect.decorate(s,t,e,n);else for(var a=s.length-1;a>=0;a--)(o=s[a])&&(r=(i<3?o(r):i>3?o(t,e,r):o(t,e))||r);return i>3&&r&&Object.defineProperty(t,e,r),r}function dt(s,t,e,n){function i(r){return r instanceof e?r:new e(function(o){o(r)})}return new(e||(e=Promise))(function(r,o){function a(l){try{u(n.next(l))}catch(h){o(h)}}function c(l){try{u(n.throw(l))}catch(h){o(h)}}function u(l){l.done?r(l.value):i(l.value).then(a,c)}u((n=n.apply(s,t||[])).next())})}typeof SuppressedError=="function"&&SuppressedError;class Nh{constructor(t,e,n,i){this._callback=t,this._type=e,this._minimumUpdateInterval=Math.max(128/(i||44100),.001),this.updateInterval=n,this._createClock()}_createWorker(){const t=new Blob([`
			// the initial timeout time
			let timeoutTime =  ${(this._updateInterval*1e3).toFixed(1)};
			// onmessage callback
			self.onmessage = function(msg){
				timeoutTime = parseInt(msg.data);
			};
			// the tick function which posts a message
			// and schedules a new tick
			function tick(){
				setTimeout(tick, timeoutTime);
				self.postMessage('tick');
			}
			// call tick initially
			tick();
			`],{type:"text/javascript"}),e=URL.createObjectURL(t),n=new Worker(e);n.onmessage=this._callback.bind(this),this._worker=n}_createTimeout(){this._timeout=setTimeout(()=>{this._createTimeout(),this._callback()},this._updateInterval*1e3)}_createClock(){if(this._type==="worker")try{this._createWorker()}catch{this._type="timeout",this._createClock()}else this._type==="timeout"&&this._createTimeout()}_disposeClock(){this._timeout&&clearTimeout(this._timeout),this._worker&&(this._worker.terminate(),this._worker.onmessage=null)}get updateInterval(){return this._updateInterval}set updateInterval(t){var e;this._updateInterval=Math.max(t,this._minimumUpdateInterval),this._type==="worker"&&((e=this._worker)===null||e===void 0||e.postMessage(this._updateInterval*1e3))}get type(){return this._type}set type(t){this._disposeClock(),this._type=t,this._createClock()}dispose(){this._disposeClock()}}function ve(s){return yh(s)}function he(s){return gh(s)}function $n(s){return vh(s)}function Re(s){return _h(s)}function Oh(s){return s instanceof vr}function Dh(s,t){return s==="value"||ve(t)||he(t)||Oh(t)}function Pe(s,...t){if(!t.length)return s;const e=t.shift();if(ye(s)&&ye(e))for(const n in e)Dh(n,e[n])?s[n]=e[n]:ye(e[n])?(s[n]||Object.assign(s,{[n]:{}}),Pe(s[n],e[n])):Object.assign(s,{[n]:e[n]});return Pe(s,...t)}function Eh(s,t){return s.length===t.length&&s.every((e,n)=>t[n]===e)}function I(s,t,e=[],n){const i={},r=Array.from(t);if(ye(r[0])&&n&&!Reflect.has(r[0],n)&&(Object.keys(r[0]).some(a=>Reflect.has(s,a))||(Pe(i,{[n]:r[0]}),e.splice(e.indexOf(n),1),r.shift())),r.length===1&&ye(r[0]))Pe(i,r[0]);else for(let o=0;o<e.length;o++)$(r[o])&&(i[e[o]]=r[o]);return Pe(s,i)}function Ih(s){return s.constructor.getDefaults()}function Fe(s,t){return It(s)?t:s}function Wr(s,t){return t.forEach(e=>{Reflect.has(s,e)&&delete s[e]}),s}/**
 * Tone.js
 * @author Yotam Mann
 * @license http://opensource.org/licenses/MIT MIT License
 * @copyright 2014-2024 Yotam Mann
 */class ee{constructor(){this.debug=!1,this._wasDisposed=!1}static getDefaults(){return{}}log(...t){(this.debug||Nt&&this.toString()===Nt.TONE_DEBUG_CLASS)&&xh(this,...t)}dispose(){return this._wasDisposed=!0,this}get disposed(){return this._wasDisposed}toString(){return this.name}}ee.version=Ke;const Gs=1e-6;function Ve(s,t){return s>t+Gs}function zs(s,t){return Ve(s,t)||Bt(s,t)}function Zn(s,t){return s+Gs<t}function Bt(s,t){return Math.abs(s-t)<Gs}function Mh(s,t,e){return Math.max(Math.min(s,e),t)}class Rt extends ee{constructor(){super(),this.name="Timeline",this._timeline=[];const t=I(Rt.getDefaults(),arguments,["memory"]);this.memory=t.memory,this.increasing=t.increasing}static getDefaults(){return{memory:1/0,increasing:!1}}get length(){return this._timeline.length}add(t){if(W(Reflect.has(t,"time"),"Timeline: events must have a time attribute"),t.time=t.time.valueOf(),this.increasing&&this.length){const e=this._timeline[this.length-1];W(zs(t.time,e.time),"The time must be greater than or equal to the last scheduled time"),this._timeline.push(t)}else{const e=this._search(t.time);this._timeline.splice(e+1,0,t)}if(this.length>this.memory){const e=this.length-this.memory;this._timeline.splice(0,e)}return this}remove(t){const e=this._timeline.indexOf(t);return e!==-1&&this._timeline.splice(e,1),this}get(t,e="time"){const n=this._search(t,e);return n!==-1?this._timeline[n]:null}peek(){return this._timeline[0]}shift(){return this._timeline.shift()}getAfter(t,e="time"){const n=this._search(t,e);return n+1<this._timeline.length?this._timeline[n+1]:null}getBefore(t){const e=this._timeline.length;if(e>0&&this._timeline[e-1].time<t)return this._timeline[e-1];const n=this._search(t);return n-1>=0?this._timeline[n-1]:null}cancel(t){if(this._timeline.length>1){let e=this._search(t);if(e>=0)if(Bt(this._timeline[e].time,t)){for(let n=e;n>=0&&Bt(this._timeline[n].time,t);n--)e=n;this._timeline=this._timeline.slice(0,e)}else this._timeline=this._timeline.slice(0,e+1);else this._timeline=[]}else this._timeline.length===1&&zs(this._timeline[0].time,t)&&(this._timeline=[]);return this}cancelBefore(t){const e=this._search(t);return e>=0&&(this._timeline=this._timeline.slice(e+1)),this}previousEvent(t){const e=this._timeline.indexOf(t);return e>0?this._timeline[e-1]:null}_search(t,e="time"){if(this._timeline.length===0)return-1;let n=0;const i=this._timeline.length;let r=i;if(i>0&&this._timeline[i-1][e]<=t)return i-1;for(;n<r;){let o=Math.floor(n+(r-n)/2);const a=this._timeline[o],c=this._timeline[o+1];if(Bt(a[e],t)){for(let u=o;u<this._timeline.length;u++){const l=this._timeline[u];if(Bt(l[e],t))o=u;else break}return o}else{if(Zn(a[e],t)&&Ve(c[e],t))return o;Ve(a[e],t)?r=o:n=o+1}}return-1}_iterate(t,e=0,n=this._timeline.length-1){this._timeline.slice(e,n+1).forEach(t)}forEach(t){return this._iterate(t),this}forEachBefore(t,e){const n=this._search(t);return n!==-1&&this._iterate(e,0,n),this}forEachAfter(t,e){const n=this._search(t);return this._iterate(e,n+1),this}forEachBetween(t,e,n){let i=this._search(t),r=this._search(e);return i!==-1&&r!==-1?(this._timeline[i].time!==t&&(i+=1),this._timeline[r].time===e&&(r-=1),this._iterate(n,i,r)):i===-1&&this._iterate(n,0,r),this}forEachFrom(t,e){let n=this._search(t);for(;n>=0&&this._timeline[n].time>=t;)n--;return this._iterate(e,n+1),this}forEachAtTime(t,e){const n=this._search(t);if(n!==-1&&Bt(this._timeline[n].time,t)){let i=n;for(let r=n;r>=0&&Bt(this._timeline[r].time,t);r--)i=r;this._iterate(r=>{e(r)},i,n)}return this}dispose(){return super.dispose(),this._timeline=[],this}}const jr=[];function Xn(s){jr.push(s)}function Rh(s){jr.forEach(t=>t(s))}const Br=[];function Yn(s){Br.push(s)}function Ph(s){Br.forEach(t=>t(s))}class dn extends ee{constructor(){super(...arguments),this.name="Emitter"}on(t,e){return t.split(/\W+/).forEach(i=>{It(this._events)&&(this._events={}),this._events.hasOwnProperty(i)||(this._events[i]=[]),this._events[i].push(e)}),this}once(t,e){const n=(...i)=>{e(...i),this.off(t,n)};return this.on(t,n),this}off(t,e){return t.split(/\W+/).forEach(i=>{if(It(this._events)&&(this._events={}),this._events.hasOwnProperty(i))if(It(e))this._events[i]=[];else{const r=this._events[i];for(let o=r.length-1;o>=0;o--)r[o]===e&&r.splice(o,1)}}),this}emit(t,...e){if(this._events&&this._events.hasOwnProperty(t)){const n=this._events[t].slice(0);for(let i=0,r=n.length;i<r;i++)n[i].apply(this,e)}return this}static mixin(t){["on","once","off","emit"].forEach(e=>{const n=Object.getOwnPropertyDescriptor(dn.prototype,e);Object.defineProperty(t.prototype,e,n)})}dispose(){return super.dispose(),this._events=void 0,this}}class Ur extends dn{constructor(){super(...arguments),this.isOffline=!1}toJSON(){return{}}}class pn extends Ur{constructor(){var t,e;super(),this.name="Context",this._constants=new Map,this._timeouts=new Rt,this._timeoutIds=0,this._initialized=!1,this._closeStarted=!1,this.isOffline=!1,this._workletPromise=null;const n=I(pn.getDefaults(),arguments,["context"]);n.context?(this._context=n.context,this._latencyHint=((t=arguments[0])===null||t===void 0?void 0:t.latencyHint)||""):(this._context=Ch({latencyHint:n.latencyHint}),this._latencyHint=n.latencyHint),this._ticker=new Nh(this.emit.bind(this,"tick"),n.clockSource,n.updateInterval,this._context.sampleRate),this.on("tick",this._timeoutLoop.bind(this)),this._context.onstatechange=()=>{this.emit("statechange",this.state)},this[!((e=arguments[0])===null||e===void 0)&&e.hasOwnProperty("updateInterval")?"_lookAhead":"lookAhead"]=n.lookAhead}static getDefaults(){return{clockSource:"worker",latencyHint:"interactive",lookAhead:.1,updateInterval:.05}}initialize(){return this._initialized||(Rh(this),this._initialized=!0),this}createAnalyser(){return this._context.createAnalyser()}createOscillator(){return this._context.createOscillator()}createBufferSource(){return this._context.createBufferSource()}createBiquadFilter(){return this._context.createBiquadFilter()}createBuffer(t,e,n){return this._context.createBuffer(t,e,n)}createChannelMerger(t){return this._context.createChannelMerger(t)}createChannelSplitter(t){return this._context.createChannelSplitter(t)}createConstantSource(){return this._context.createConstantSource()}createConvolver(){return this._context.createConvolver()}createDelay(t){return this._context.createDelay(t)}createDynamicsCompressor(){return this._context.createDynamicsCompressor()}createGain(){return this._context.createGain()}createIIRFilter(t,e){return this._context.createIIRFilter(t,e)}createPanner(){return this._context.createPanner()}createPeriodicWave(t,e,n){return this._context.createPeriodicWave(t,e,n)}createStereoPanner(){return this._context.createStereoPanner()}createWaveShaper(){return this._context.createWaveShaper()}createMediaStreamSource(t){return W(Re(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamSource(t)}createMediaElementSource(t){return W(Re(this._context),"Not available if OfflineAudioContext"),this._context.createMediaElementSource(t)}createMediaStreamDestination(){return W(Re(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamDestination()}decodeAudioData(t){return this._context.decodeAudioData(t)}get currentTime(){return this._context.currentTime}get state(){return this._context.state}get sampleRate(){return this._context.sampleRate}get listener(){return this.initialize(),this._listener}set listener(t){W(!this._initialized,"The listener cannot be set after initialization."),this._listener=t}get transport(){return this.initialize(),this._transport}set transport(t){W(!this._initialized,"The transport cannot be set after initialization."),this._transport=t}get draw(){return this.initialize(),this._draw}set draw(t){W(!this._initialized,"Draw cannot be set after initialization."),this._draw=t}get destination(){return this.initialize(),this._destination}set destination(t){W(!this._initialized,"The destination cannot be set after initialization."),this._destination=t}createAudioWorkletNode(t,e){return Ah(this.rawContext,t,e)}addAudioWorkletModule(t){return dt(this,void 0,void 0,function*(){W($(this.rawContext.audioWorklet),"AudioWorkletNode is only available in a secure context (https or localhost)"),this._workletPromise||(this._workletPromise=this.rawContext.audioWorklet.addModule(t)),yield this._workletPromise})}workletsAreReady(){return dt(this,void 0,void 0,function*(){(yield this._workletPromise)?this._workletPromise:Promise.resolve()})}get updateInterval(){return this._ticker.updateInterval}set updateInterval(t){this._ticker.updateInterval=t}get clockSource(){return this._ticker.type}set clockSource(t){this._ticker.type=t}get lookAhead(){return this._lookAhead}set lookAhead(t){this._lookAhead=t,this.updateInterval=t?t/2:.01}get latencyHint(){return this._latencyHint}get rawContext(){return this._context}now(){return this._context.currentTime+this._lookAhead}immediate(){return this._context.currentTime}resume(){return Re(this._context)?this._context.resume():Promise.resolve()}close(){return dt(this,void 0,void 0,function*(){Re(this._context)&&this.state!=="closed"&&!this._closeStarted&&(this._closeStarted=!0,yield this._context.close()),this._initialized&&Ph(this)})}getConstant(t){if(this._constants.has(t))return this._constants.get(t);{const e=this._context.createBuffer(1,128,this._context.sampleRate),n=e.getChannelData(0);for(let r=0;r<n.length;r++)n[r]=t;const i=this._context.createBufferSource();return i.channelCount=1,i.channelCountMode="explicit",i.buffer=e,i.loop=!0,i.start(0),this._constants.set(t,i),i}}dispose(){return super.dispose(),this._ticker.dispose(),this._timeouts.dispose(),Object.keys(this._constants).map(t=>this._constants[t].disconnect()),this.close(),this}_timeoutLoop(){const t=this.now();this._timeouts.forEachBefore(t,e=>{e.callback(),this._timeouts.remove(e)})}setTimeout(t,e){this._timeoutIds++;const n=this.now();return this._timeouts.add({callback:t,id:this._timeoutIds,time:n+e}),this._timeoutIds}clearTimeout(t){return this._timeouts.forEach(e=>{e.id===t&&this._timeouts.remove(e)}),this}clearInterval(t){return this.clearTimeout(t)}setInterval(t,e){const n=++this._timeoutIds,i=()=>{const r=this.now();this._timeouts.add({callback:()=>{t(),i()},id:n,time:r+e})};return i(),n}}class Fh extends Ur{constructor(){super(...arguments),this.lookAhead=0,this.latencyHint=0,this.isOffline=!1}createAnalyser(){return{}}createOscillator(){return{}}createBufferSource(){return{}}createBiquadFilter(){return{}}createBuffer(t,e,n){return{}}createChannelMerger(t){return{}}createChannelSplitter(t){return{}}createConstantSource(){return{}}createConvolver(){return{}}createDelay(t){return{}}createDynamicsCompressor(){return{}}createGain(){return{}}createIIRFilter(t,e){return{}}createPanner(){return{}}createPeriodicWave(t,e,n){return{}}createStereoPanner(){return{}}createWaveShaper(){return{}}createMediaStreamSource(t){return{}}createMediaElementSource(t){return{}}createMediaStreamDestination(){return{}}decodeAudioData(t){return Promise.resolve({})}createAudioWorkletNode(t,e){return{}}get rawContext(){return{}}addAudioWorkletModule(t){return dt(this,void 0,void 0,function*(){return Promise.resolve()})}resume(){return Promise.resolve()}setTimeout(t,e){return 0}clearTimeout(t){return this}setInterval(t,e){return 0}clearInterval(t){return this}getConstant(t){return{}}get currentTime(){return 0}get state(){return{}}get sampleRate(){return 0}get listener(){return{}}get transport(){return{}}get draw(){return{}}set draw(t){}get destination(){return{}}set destination(t){}now(){return 0}immediate(){return 0}}function Y(s,t){Wt(t)?t.forEach(e=>Y(s,e)):Object.defineProperty(s,t,{enumerable:!0,writable:!1})}function $s(s,t){Wt(t)?t.forEach(e=>$s(s,e)):Object.defineProperty(s,t,{writable:!0})}const Q=()=>{};class et extends ee{constructor(){super(),this.name="ToneAudioBuffer",this.onload=Q;const t=I(et.getDefaults(),arguments,["url","onload","onerror"]);this.reverse=t.reverse,this.onload=t.onload,te(t.url)?this.load(t.url).catch(t.onerror):t.url&&this.set(t.url)}static getDefaults(){return{onerror:Q,onload:Q,reverse:!1}}get sampleRate(){return this._buffer?this._buffer.sampleRate:bt().sampleRate}set(t){return t instanceof et?t.loaded?this._buffer=t.get():t.onload=()=>{this.set(t),this.onload(this)}:this._buffer=t,this._reversed&&this._reverse(),this}get(){return this._buffer}load(t){return dt(this,void 0,void 0,function*(){const e=et.load(t).then(n=>{this.set(n),this.onload(this)});et.downloads.push(e);try{yield e}finally{const n=et.downloads.indexOf(e);et.downloads.splice(n,1)}return this})}dispose(){return super.dispose(),this._buffer=void 0,this}fromArray(t){const e=Wt(t)&&t[0].length>0,n=e?t.length:1,i=e?t[0].length:t.length,r=bt(),o=r.createBuffer(n,i,r.sampleRate),a=!e&&n===1?[t]:t;for(let c=0;c<n;c++)o.copyToChannel(a[c],c);return this._buffer=o,this}toMono(t){if(le(t))this.fromArray(this.toArray(t));else{let e=new Float32Array(this.length);const n=this.numberOfChannels;for(let i=0;i<n;i++){const r=this.toArray(i);for(let o=0;o<r.length;o++)e[o]+=r[o]}e=e.map(i=>i/n),this.fromArray(e)}return this}toArray(t){if(le(t))return this.getChannelData(t);if(this.numberOfChannels===1)return this.toArray(0);{const e=[];for(let n=0;n<this.numberOfChannels;n++)e[n]=this.getChannelData(n);return e}}getChannelData(t){return this._buffer?this._buffer.getChannelData(t):new Float32Array(0)}slice(t,e=this.duration){W(this.loaded,"Buffer is not loaded");const n=Math.floor(t*this.sampleRate),i=Math.floor(e*this.sampleRate);W(n<i,"The start time must be less than the end time");const r=i-n,o=bt().createBuffer(this.numberOfChannels,r,this.sampleRate);for(let a=0;a<this.numberOfChannels;a++)o.copyToChannel(this.getChannelData(a).subarray(n,i),a);return new et(o)}_reverse(){if(this.loaded)for(let t=0;t<this.numberOfChannels;t++)this.getChannelData(t).reverse();return this}get loaded(){return this.length>0}get duration(){return this._buffer?this._buffer.duration:0}get length(){return this._buffer?this._buffer.length:0}get numberOfChannels(){return this._buffer?this._buffer.numberOfChannels:0}get reverse(){return this._reversed}set reverse(t){this._reversed!==t&&(this._reversed=t,this._reverse())}static fromArray(t){return new et().fromArray(t)}static fromUrl(t){return dt(this,void 0,void 0,function*(){return yield new et().load(t)})}static load(t){return dt(this,void 0,void 0,function*(){const e=et.baseUrl===""||et.baseUrl.endsWith("/")?et.baseUrl:et.baseUrl+"/",n=yield fetch(e+t);if(!n.ok)throw new Error(`could not load url: ${t}`);const i=yield n.arrayBuffer();return yield bt().decodeAudioData(i)})}static supportsType(t){const e=t.split("."),n=e[e.length-1];return document.createElement("audio").canPlayType("audio/"+n)!==""}static loaded(){return dt(this,void 0,void 0,function*(){for(yield Promise.resolve();et.downloads.length;)yield et.downloads[0]})}}et.baseUrl="",et.downloads=[];class Hn extends pn{constructor(){super({clockSource:"offline",context:$n(arguments[0])?arguments[0]:Sh(arguments[0],arguments[1]*arguments[2],arguments[2]),lookAhead:0,updateInterval:$n(arguments[0])?128/arguments[0].sampleRate:128/arguments[2]}),this.name="OfflineContext",this._currentTime=0,this.isOffline=!0,this._duration=$n(arguments[0])?arguments[0].length/arguments[0].sampleRate:arguments[1]}now(){return this._currentTime}get currentTime(){return this._currentTime}_renderClock(t){return dt(this,void 0,void 0,function*(){let e=0;for(;this._duration-this._currentTime>=0;){this.emit("tick"),this._currentTime+=128/this.sampleRate,e++;const n=Math.floor(this.sampleRate/128);t&&e%n===0&&(yield new Promise(i=>setTimeout(i,1)))}})}render(){return dt(this,arguments,void 0,function*(t=!0){yield this.workletsAreReady(),yield this._renderClock(t);const e=yield this._context.startRendering();return new et(e)})}close(){return Promise.resolve()}}const Gr=new Fh;let qe=Gr;function bt(){return qe===Gr&&kh&&Vh(new pn),qe}function Vh(s,t=!1){t&&qe.dispose(),Re(s)?qe=new pn(s):$n(s)?qe=new Hn(s):qe=s}if(Nt&&!Nt.TONE_SILENCE_LOGGING){const t=` * Tone.js v${Ke} * `;console.log(`%c${t}`,"background: #000; color: #fff")}function qh(s){return Math.pow(10,s/20)}function Lh(s){return 20*(Math.log(s)/Math.LN10)}function zr(s){return Math.pow(2,s/12)}let Qn=440;function Wh(){return Qn}function jh(s){Qn=s}function Zs(s){return Math.round($r(s))}function $r(s){return 69+12*Math.log2(s/Qn)}function Bh(s){return Qn*Math.pow(2,(s-69)/12)}class Xs extends ee{constructor(t,e,n){super(),this.defaultUnits="s",this._val=e,this._units=n,this.context=t,this._expressions=this._getExpressions()}_getExpressions(){return{hz:{method:t=>this._frequencyToUnits(parseFloat(t)),regexp:/^(\d+(?:\.\d+)?)hz$/i},i:{method:t=>this._ticksToUnits(parseInt(t,10)),regexp:/^(\d+)i$/i},m:{method:t=>this._beatsToUnits(parseInt(t,10)*this._getTimeSignature()),regexp:/^(\d+)m$/i},n:{method:(t,e)=>{const n=parseInt(t,10),i=e==="."?1.5:1;return n===1?this._beatsToUnits(this._getTimeSignature())*i:this._beatsToUnits(4/n)*i},regexp:/^(\d+)n(\.?)$/i},number:{method:t=>this._expressions[this.defaultUnits].method.call(this,t),regexp:/^(\d+(?:\.\d+)?)$/},s:{method:t=>this._secondsToUnits(parseFloat(t)),regexp:/^(\d+(?:\.\d+)?)s$/},samples:{method:t=>parseInt(t,10)/this.context.sampleRate,regexp:/^(\d+)samples$/},t:{method:t=>{const e=parseInt(t,10);return this._beatsToUnits(8/(Math.floor(e)*3))},regexp:/^(\d+)t$/i},tr:{method:(t,e,n)=>{let i=0;return t&&t!=="0"&&(i+=this._beatsToUnits(this._getTimeSignature()*parseFloat(t))),e&&e!=="0"&&(i+=this._beatsToUnits(parseFloat(e))),n&&n!=="0"&&(i+=this._beatsToUnits(parseFloat(n)/4)),i},regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?$/}}}valueOf(){if(this._val instanceof Xs&&this.fromType(this._val),It(this._val))return this._noArg();if(te(this._val)&&It(this._units)){for(const t in this._expressions)if(this._expressions[t].regexp.test(this._val.trim())){this._units=t;break}}else if(ye(this._val)){let t=0;for(const e in this._val)if($(this._val[e])){const n=this._val[e],i=new this.constructor(this.context,e).valueOf()*n;t+=i}return t}if($(this._units)){const t=this._expressions[this._units],e=this._val.toString().trim().match(t.regexp);return e?t.method.apply(this,e.slice(1)):t.method.call(this,this._val)}else return te(this._val)?parseFloat(this._val):this._val}_frequencyToUnits(t){return 1/t}_beatsToUnits(t){return 60/this._getBpm()*t}_secondsToUnits(t){return t}_ticksToUnits(t){return t*this._beatsToUnits(1)/this._getPPQ()}_noArg(){return this._now()}_getBpm(){return this.context.transport.bpm.value}_getTimeSignature(){return this.context.transport.timeSignature}_getPPQ(){return this.context.transport.PPQ}fromType(t){switch(this._units=void 0,this.defaultUnits){case"s":this._val=t.toSeconds();break;case"i":this._val=t.toTicks();break;case"hz":this._val=t.toFrequency();break;case"midi":this._val=t.toMidi();break}return this}toFrequency(){return 1/this.toSeconds()}toSamples(){return this.toSeconds()*this.context.sampleRate}toMilliseconds(){return this.toSeconds()*1e3}}class Ut extends Xs{constructor(){super(...arguments),this.name="TimeClass"}_getExpressions(){return Object.assign(super._getExpressions(),{now:{method:t=>this._now()+new this.constructor(this.context,t).valueOf(),regexp:/^\+(.+)/},quantize:{method:t=>{const e=new Ut(this.context,t).valueOf();return this._secondsToUnits(this.context.transport.nextSubdivision(e))},regexp:/^@(.+)/}})}quantize(t,e=1){const n=new this.constructor(this.context,t).valueOf(),i=this.valueOf(),a=Math.round(i/n)*n-i;return i+a*e}toNotation(){const t=this.toSeconds(),e=["1m"];for(let r=1;r<9;r++){const o=Math.pow(2,r);e.push(o+"n."),e.push(o+"n"),e.push(o+"t")}e.push("0");let n=e[0],i=new Ut(this.context,e[0]).toSeconds();return e.forEach(r=>{const o=new Ut(this.context,r).toSeconds();Math.abs(o-t)<Math.abs(i-t)&&(n=r,i=o)}),n}toBarsBeatsSixteenths(){const t=this._beatsToUnits(1);let e=this.valueOf()/t;e=parseFloat(e.toFixed(4));const n=Math.floor(e/this._getTimeSignature());let i=e%1*4;e=Math.floor(e)%this._getTimeSignature();const r=i.toString();return r.length>3&&(i=parseFloat(parseFloat(r).toFixed(3))),[n,e,i].join(":")}toTicks(){const t=this._beatsToUnits(1);return this.valueOf()/t*this._getPPQ()}toSeconds(){return this.valueOf()}toMidi(){return Zs(this.toFrequency())}_now(){return this.context.now()}}class Pt extends Ut{constructor(){super(...arguments),this.name="Frequency",this.defaultUnits="hz"}static get A4(){return Wh()}static set A4(t){jh(t)}_getExpressions(){return Object.assign({},super._getExpressions(),{midi:{regexp:/^(\d+(?:\.\d+)?midi)/,method(t){return this.defaultUnits==="midi"?t:Pt.mtof(t)}},note:{regexp:/^([a-g]{1}(?:b|#|##|x|bb|###|#x|x#|bbb)?)(-?[0-9]+)/i,method(t,e){const i=Uh[t.toLowerCase()]+(parseInt(e,10)+1)*12;return this.defaultUnits==="midi"?i:Pt.mtof(i)}},tr:{regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?/,method(t,e,n){let i=1;return t&&t!=="0"&&(i*=this._beatsToUnits(this._getTimeSignature()*parseFloat(t))),e&&e!=="0"&&(i*=this._beatsToUnits(parseFloat(e))),n&&n!=="0"&&(i*=this._beatsToUnits(parseFloat(n)/4)),i}}})}transpose(t){return new Pt(this.context,this.valueOf()*zr(t))}harmonize(t){return t.map(e=>this.transpose(e))}toMidi(){return Zs(this.valueOf())}toNote(){const t=this.toFrequency(),e=Math.log2(t/Pt.A4);let n=Math.round(12*e)+57;const i=Math.floor(n/12);return i<0&&(n+=-12*i),Gh[n%12]+i.toString()}toSeconds(){return 1/super.toSeconds()}toTicks(){const t=this._beatsToUnits(1),e=this.valueOf()/t;return Math.floor(e*this._getPPQ())}_noArg(){return 0}_frequencyToUnits(t){return t}_ticksToUnits(t){return 1/(t*60/(this._getBpm()*this._getPPQ()))}_beatsToUnits(t){return 1/super._beatsToUnits(t)}_secondsToUnits(t){return 1/t}static mtof(t){return Bh(t)}static ftom(t){return Zs(t)}}const Uh={cbbb:-3,cbb:-2,cb:-1,c:0,"c#":1,cx:2,"c##":2,"c###":3,"cx#":3,"c#x":3,dbbb:-1,dbb:0,db:1,d:2,"d#":3,dx:4,"d##":4,"d###":5,"dx#":5,"d#x":5,ebbb:1,ebb:2,eb:3,e:4,"e#":5,ex:6,"e##":6,"e###":7,"ex#":7,"e#x":7,fbbb:2,fbb:3,fb:4,f:5,"f#":6,fx:7,"f##":7,"f###":8,"fx#":8,"f#x":8,gbbb:4,gbb:5,gb:6,g:7,"g#":8,gx:9,"g##":9,"g###":10,"gx#":10,"g#x":10,abbb:6,abb:7,ab:8,a:9,"a#":10,ax:11,"a##":11,"a###":12,"ax#":12,"a#x":12,bbbb:8,bbb:9,bb:10,b:11,"b#":12,bx:13,"b##":13,"b###":14,"bx#":14,"b#x":14},Gh=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"];class fn extends Ut{constructor(){super(...arguments),this.name="TransportTime"}_now(){return this.context.transport.seconds}}class At extends ee{constructor(){super();const t=I(At.getDefaults(),arguments,["context"]);this.defaultContext?this.context=this.defaultContext:this.context=t.context}static getDefaults(){return{context:bt()}}now(){return this.context.currentTime+this.context.lookAhead}immediate(){return this.context.currentTime}get sampleTime(){return 1/this.context.sampleRate}get blockTime(){return 128/this.context.sampleRate}toSeconds(t){return bh(t),new Ut(this.context,t).toSeconds()}toFrequency(t){return new Pt(this.context,t).toFrequency()}toTicks(t){return new fn(this.context,t).toTicks()}_getPartialProperties(t){const e=this.get();return Object.keys(e).forEach(n=>{It(t[n])&&delete e[n]}),e}get(){const t=Ih(this);return Object.keys(t).forEach(e=>{if(Reflect.has(this,e)){const n=this[e];$(n)&&$(n.value)&&$(n.setValueAtTime)?t[e]=n.value:n instanceof At?t[e]=n._getPartialProperties(t[e]):Wt(n)||le(n)||te(n)||Th(n)?t[e]=n:delete t[e]}}),t}set(t){return Object.keys(t).forEach(e=>{Reflect.has(this,e)&&$(this[e])&&(this[e]&&$(this[e].value)&&$(this[e].setValueAtTime)?this[e].value!==t[e]&&(this[e].value=t[e]):this[e]instanceof At?this[e].set(t[e]):this[e]=t[e])}),this}}class Ys extends Rt{constructor(t="stopped"){super(),this.name="StateTimeline",this._initial=t,this.setStateAtTime(this._initial,0)}getValueAtTime(t){const e=this.get(t);return e!==null?e.state:this._initial}setStateAtTime(t,e,n){return Mt(e,0),this.add(Object.assign({},n,{state:t,time:e})),this}getLastState(t,e){const n=this._search(e);for(let i=n;i>=0;i--){const r=this._timeline[i];if(r.state===t)return r}}getNextState(t,e){const n=this._search(e);if(n!==-1)for(let i=n;i<this._timeline.length;i++){const r=this._timeline[i];if(r.state===t)return r}}}class X extends At{constructor(){const t=I(X.getDefaults(),arguments,["param","units","convert"]);for(super(t),this.name="Param",this.overridden=!1,this._minOutput=1e-7,W($(t.param)&&(ve(t.param)||t.param instanceof X),"param must be an AudioParam");!ve(t.param);)t.param=t.param._param;this._swappable=$(t.swappable)?t.swappable:!1,this._swappable?(this.input=this.context.createGain(),this._param=t.param,this.input.connect(this._param)):this._param=this.input=t.param,this._events=new Rt(1e3),this._initialValue=this._param.defaultValue,this.units=t.units,this.convert=t.convert,this._minValue=t.minValue,this._maxValue=t.maxValue,$(t.value)&&t.value!==this._toType(this._initialValue)&&this.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(At.getDefaults(),{convert:!0,units:"number"})}get value(){const t=this.now();return this.getValueAtTime(t)}set value(t){this.cancelScheduledValues(this.now()),this.setValueAtTime(t,this.now())}get minValue(){return $(this._minValue)?this._minValue:this.units==="time"||this.units==="frequency"||this.units==="normalRange"||this.units==="positive"||this.units==="transportTime"||this.units==="ticks"||this.units==="bpm"||this.units==="hertz"||this.units==="samples"?0:this.units==="audioRange"?-1:this.units==="decibels"?-1/0:this._param.minValue}get maxValue(){return $(this._maxValue)?this._maxValue:this.units==="normalRange"||this.units==="audioRange"?1:this._param.maxValue}_is(t,e){return this.units===e}_assertRange(t){return $(this.maxValue)&&$(this.minValue)&&Mt(t,this._fromType(this.minValue),this._fromType(this.maxValue)),t}_fromType(t){return this.convert&&!this.overridden?this._is(t,"time")?this.toSeconds(t):this._is(t,"decibels")?qh(t):this._is(t,"frequency")?this.toFrequency(t):t:this.overridden?0:t}_toType(t){return this.convert&&this.units==="decibels"?Lh(t):t}setValueAtTime(t,e){const n=this.toSeconds(e),i=this._fromType(t);return W(isFinite(i)&&isFinite(n),`Invalid argument(s) to setValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._assertRange(i),this.log(this.units,"setValueAtTime",t,n),this._events.add({time:n,type:"setValueAtTime",value:i}),this._param.setValueAtTime(i,n),this}getValueAtTime(t){const e=Math.max(this.toSeconds(t),0),n=this._events.getAfter(e),i=this._events.get(e);let r=this._initialValue;if(i===null)r=this._initialValue;else if(i.type==="setTargetAtTime"&&(n===null||n.type==="setValueAtTime")){const o=this._events.getBefore(i.time);let a;o===null?a=this._initialValue:a=o.value,i.type==="setTargetAtTime"&&(r=this._exponentialApproach(i.time,a,i.value,i.constant,e))}else if(n===null)r=i.value;else if(n.type==="linearRampToValueAtTime"||n.type==="exponentialRampToValueAtTime"){let o=i.value;if(i.type==="setTargetAtTime"){const a=this._events.getBefore(i.time);a===null?o=this._initialValue:o=a.value}n.type==="linearRampToValueAtTime"?r=this._linearInterpolate(i.time,o,n.time,n.value,e):r=this._exponentialInterpolate(i.time,o,n.time,n.value,e)}else r=i.value;return this._toType(r)}setRampPoint(t){t=this.toSeconds(t);let e=this.getValueAtTime(t);return this.cancelAndHoldAtTime(t),this._fromType(e)===0&&(e=this._toType(this._minOutput)),this.setValueAtTime(e,t),this}linearRampToValueAtTime(t,e){const n=this._fromType(t),i=this.toSeconds(e);return W(isFinite(n)&&isFinite(i),`Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._assertRange(n),this._events.add({time:i,type:"linearRampToValueAtTime",value:n}),this.log(this.units,"linearRampToValueAtTime",t,i),this._param.linearRampToValueAtTime(n,i),this}exponentialRampToValueAtTime(t,e){let n=this._fromType(t);n=Bt(n,0)?this._minOutput:n,this._assertRange(n);const i=this.toSeconds(e);return W(isFinite(n)&&isFinite(i),`Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._events.add({time:i,type:"exponentialRampToValueAtTime",value:n}),this.log(this.units,"exponentialRampToValueAtTime",t,i),this._param.exponentialRampToValueAtTime(n,i),this}exponentialRampTo(t,e,n){return n=this.toSeconds(n),this.setRampPoint(n),this.exponentialRampToValueAtTime(t,n+this.toSeconds(e)),this}linearRampTo(t,e,n){return n=this.toSeconds(n),this.setRampPoint(n),this.linearRampToValueAtTime(t,n+this.toSeconds(e)),this}targetRampTo(t,e,n){return n=this.toSeconds(n),this.setRampPoint(n),this.exponentialApproachValueAtTime(t,n,e),this}exponentialApproachValueAtTime(t,e,n){e=this.toSeconds(e),n=this.toSeconds(n);const i=Math.log(n+1)/Math.log(200);return this.setTargetAtTime(t,e,i),this.cancelAndHoldAtTime(e+n*.9),this.linearRampToValueAtTime(t,e+n),this}setTargetAtTime(t,e,n){const i=this._fromType(t);W(isFinite(n)&&n>0,"timeConstant must be a number greater than 0");const r=this.toSeconds(e);return this._assertRange(i),W(isFinite(i)&&isFinite(r),`Invalid argument(s) to setTargetAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._events.add({constant:n,time:r,type:"setTargetAtTime",value:i}),this.log(this.units,"setTargetAtTime",t,r,n),this._param.setTargetAtTime(i,r,n),this}setValueCurveAtTime(t,e,n,i=1){n=this.toSeconds(n),e=this.toSeconds(e);const r=this._fromType(t[0])*i;this.setValueAtTime(this._toType(r),e);const o=n/(t.length-1);for(let a=1;a<t.length;a++){const c=this._fromType(t[a])*i;this.linearRampToValueAtTime(this._toType(c),e+a*o)}return this}cancelScheduledValues(t){const e=this.toSeconds(t);return W(isFinite(e),`Invalid argument to cancelScheduledValues: ${JSON.stringify(t)}`),this._events.cancel(e),this._param.cancelScheduledValues(e),this.log(this.units,"cancelScheduledValues",e),this}cancelAndHoldAtTime(t){const e=this.toSeconds(t),n=this._fromType(this.getValueAtTime(e));W(isFinite(e),`Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(t)}`),this.log(this.units,"cancelAndHoldAtTime",e,"value="+n);const i=this._events.get(e),r=this._events.getAfter(e);return i&&Bt(i.time,e)?r?(this._param.cancelScheduledValues(r.time),this._events.cancel(r.time)):(this._param.cancelAndHoldAtTime(e),this._events.cancel(e+this.sampleTime)):r&&(this._param.cancelScheduledValues(r.time),this._events.cancel(r.time),r.type==="linearRampToValueAtTime"?this.linearRampToValueAtTime(this._toType(n),e):r.type==="exponentialRampToValueAtTime"&&this.exponentialRampToValueAtTime(this._toType(n),e)),this._events.add({time:e,type:"setValueAtTime",value:n}),this._param.setValueAtTime(n,e),this}rampTo(t,e=.1,n){return this.units==="frequency"||this.units==="bpm"||this.units==="decibels"?this.exponentialRampTo(t,e,n):this.linearRampTo(t,e,n),this}apply(t){const e=this.context.currentTime;t.setValueAtTime(this.getValueAtTime(e),e);const n=this._events.get(e);if(n&&n.type==="setTargetAtTime"){const i=this._events.getAfter(n.time),r=i?i.time:e+2,o=(r-e)/10;for(let a=e;a<r;a+=o)t.linearRampToValueAtTime(this.getValueAtTime(a),a)}return this._events.forEachAfter(this.context.currentTime,i=>{i.type==="cancelScheduledValues"?t.cancelScheduledValues(i.time):i.type==="setTargetAtTime"?t.setTargetAtTime(i.value,i.time,i.constant):t[i.type](i.value,i.time)}),this}setParam(t){W(this._swappable,"The Param must be assigned as 'swappable' in the constructor");const e=this.input;return e.disconnect(this._param),this.apply(t),this._param=t,e.connect(this._param),this}dispose(){return super.dispose(),this._events.dispose(),this}get defaultValue(){return this._toType(this._param.defaultValue)}_exponentialApproach(t,e,n,i,r){return n+(e-n)*Math.exp(-(r-t)/i)}_linearInterpolate(t,e,n,i,r){return e+(i-e)*((r-t)/(n-t))}_exponentialInterpolate(t,e,n,i,r){return e*Math.pow(i/e,(r-t)/(n-t))}}class M extends At{constructor(){super(...arguments),this._internalChannels=[]}get numberOfInputs(){return $(this.input)?ve(this.input)||this.input instanceof X?1:this.input.numberOfInputs:0}get numberOfOutputs(){return $(this.output)?this.output.numberOfOutputs:0}_isAudioNode(t){return $(t)&&(t instanceof M||he(t))}_getInternalNodes(){const t=this._internalChannels.slice(0);return this._isAudioNode(this.input)&&t.push(this.input),this._isAudioNode(this.output)&&this.input!==this.output&&t.push(this.output),t}_setChannelProperties(t){this._getInternalNodes().forEach(n=>{n.channelCount=t.channelCount,n.channelCountMode=t.channelCountMode,n.channelInterpretation=t.channelInterpretation})}_getChannelProperties(){const t=this._getInternalNodes();W(t.length>0,"ToneAudioNode does not have any internal nodes");const e=t[0];return{channelCount:e.channelCount,channelCountMode:e.channelCountMode,channelInterpretation:e.channelInterpretation}}get channelCount(){return this._getChannelProperties().channelCount}set channelCount(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelCount:t}))}get channelCountMode(){return this._getChannelProperties().channelCountMode}set channelCountMode(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelCountMode:t}))}get channelInterpretation(){return this._getChannelProperties().channelInterpretation}set channelInterpretation(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelInterpretation:t}))}connect(t,e=0,n=0){return Gt(this,t,e,n),this}toDestination(){return this.connect(this.context.destination),this}toMaster(){return Us("toMaster() has been renamed toDestination()"),this.toDestination()}disconnect(t,e=0,n=0){return Zr(this,t,e,n),this}chain(...t){return ne(this,...t),this}fan(...t){return t.forEach(e=>this.connect(e)),this}dispose(){return super.dispose(),$(this.input)&&(this.input instanceof M?this.input.dispose():he(this.input)&&this.input.disconnect()),$(this.output)&&(this.output instanceof M?this.output.dispose():he(this.output)&&this.output.disconnect()),this._internalChannels=[],this}}function ne(...s){const t=s.shift();s.reduce((e,n)=>(e instanceof M?e.connect(n):he(e)&&Gt(e,n),n),t)}function Gt(s,t,e=0,n=0){for(W($(s),"Cannot connect from undefined node"),W($(t),"Cannot connect to undefined node"),(t instanceof M||he(t))&&W(t.numberOfInputs>0,"Cannot connect to node with no inputs"),W(s.numberOfOutputs>0,"Cannot connect from node with no outputs");t instanceof M||t instanceof X;)$(t.input)&&(t=t.input);for(;s instanceof M;)$(s.output)&&(s=s.output);ve(t)?s.connect(t,e):s.connect(t,e,n)}function Zr(s,t,e=0,n=0){if($(t))for(;t instanceof M;)t=t.input;for(;!he(s);)$(s.output)&&(s=s.output);ve(t)?s.disconnect(t,e):he(t)?s.disconnect(t,e,n):s.disconnect()}class U extends M{constructor(){const t=I(U.getDefaults(),arguments,["gain","units"]);super(t),this.name="Gain",this._gainNode=this.context.createGain(),this.input=this._gainNode,this.output=this._gainNode,this.gain=new X({context:this.context,convert:t.convert,param:this._gainNode.gain,units:t.units,value:t.gain,minValue:t.minValue,maxValue:t.maxValue}),Y(this,"gain")}static getDefaults(){return Object.assign(M.getDefaults(),{convert:!0,gain:1,units:"gain"})}dispose(){return super.dispose(),this._gainNode.disconnect(),this.gain.dispose(),this}}class Le extends M{constructor(t){super(t),this.onended=Q,this._startTime=-1,this._stopTime=-1,this._timeout=-1,this.output=new U({context:this.context,gain:0}),this._gainNode=this.output,this.getStateAtTime=function(e){const n=this.toSeconds(e);return this._startTime!==-1&&n>=this._startTime&&(this._stopTime===-1||n<=this._stopTime)?"started":"stopped"},this._fadeIn=t.fadeIn,this._fadeOut=t.fadeOut,this._curve=t.curve,this.onended=t.onended}static getDefaults(){return Object.assign(M.getDefaults(),{curve:"linear",fadeIn:0,fadeOut:0,onended:Q})}_startGain(t,e=1){W(this._startTime===-1,"Source cannot be started more than once");const n=this.toSeconds(this._fadeIn);return this._startTime=t+n,this._startTime=Math.max(this._startTime,this.context.currentTime),n>0?(this._gainNode.gain.setValueAtTime(0,t),this._curve==="linear"?this._gainNode.gain.linearRampToValueAtTime(e,t+n):this._gainNode.gain.exponentialApproachValueAtTime(e,t,n)):this._gainNode.gain.setValueAtTime(e,t),this}stop(t){return this.log("stop",t),this._stopGain(this.toSeconds(t)),this}_stopGain(t){W(this._startTime!==-1,"'start' must be called before 'stop'"),this.cancelStop();const e=this.toSeconds(this._fadeOut);return this._stopTime=this.toSeconds(t)+e,this._stopTime=Math.max(this._stopTime,this.now()),e>0?this._curve==="linear"?this._gainNode.gain.linearRampTo(0,e,t):this._gainNode.gain.targetRampTo(0,e,t):(this._gainNode.gain.cancelAndHoldAtTime(t),this._gainNode.gain.setValueAtTime(0,t)),this.context.clearTimeout(this._timeout),this._timeout=this.context.setTimeout(()=>{const n=this._curve==="exponential"?e*2:0;this._stopSource(this.now()+n),this._onended()},this._stopTime-this.context.currentTime),this}_onended(){if(this.onended!==Q&&(this.onended(this),this.onended=Q,!this.context.isOffline)){const t=()=>this.dispose();typeof requestIdleCallback<"u"?requestIdleCallback(t):setTimeout(t,10)}}get state(){return this.getStateAtTime(this.now())}cancelStop(){return this.log("cancelStop"),W(this._startTime!==-1,"Source is not started"),this._gainNode.gain.cancelScheduledValues(this._startTime+this.sampleTime),this.context.clearTimeout(this._timeout),this._stopTime=-1,this}dispose(){return super.dispose(),this._gainNode.dispose(),this.onended=Q,this}}class Hs extends Le{constructor(){const t=I(Hs.getDefaults(),arguments,["offset"]);super(t),this.name="ToneConstantSource",this._source=this.context.createConstantSource(),Gt(this._source,this._gainNode),this.offset=new X({context:this.context,convert:t.convert,param:this._source.offset,units:t.units,value:t.offset,minValue:t.minValue,maxValue:t.maxValue})}static getDefaults(){return Object.assign(Le.getDefaults(),{convert:!0,offset:1,units:"number"})}start(t){const e=this.toSeconds(t);return this.log("start",e),this._startGain(e),this._source.start(e),this}_stopSource(t){this._source.stop(t)}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._source.disconnect(),this.offset.dispose(),this}}class G extends M{constructor(){const t=I(G.getDefaults(),arguments,["value","units"]);super(t),this.name="Signal",this.override=!0,this.output=this._constantSource=new Hs({context:this.context,convert:t.convert,offset:t.value,units:t.units,minValue:t.minValue,maxValue:t.maxValue}),this._constantSource.start(0),this.input=this._param=this._constantSource.offset}static getDefaults(){return Object.assign(M.getDefaults(),{convert:!0,units:"number",value:0})}connect(t,e=0,n=0){return Jn(this,t,e,n),this}dispose(){return super.dispose(),this._param.dispose(),this._constantSource.dispose(),this}setValueAtTime(t,e){return this._param.setValueAtTime(t,e),this}getValueAtTime(t){return this._param.getValueAtTime(t)}setRampPoint(t){return this._param.setRampPoint(t),this}linearRampToValueAtTime(t,e){return this._param.linearRampToValueAtTime(t,e),this}exponentialRampToValueAtTime(t,e){return this._param.exponentialRampToValueAtTime(t,e),this}exponentialRampTo(t,e,n){return this._param.exponentialRampTo(t,e,n),this}linearRampTo(t,e,n){return this._param.linearRampTo(t,e,n),this}targetRampTo(t,e,n){return this._param.targetRampTo(t,e,n),this}exponentialApproachValueAtTime(t,e,n){return this._param.exponentialApproachValueAtTime(t,e,n),this}setTargetAtTime(t,e,n){return this._param.setTargetAtTime(t,e,n),this}setValueCurveAtTime(t,e,n,i){return this._param.setValueCurveAtTime(t,e,n,i),this}cancelScheduledValues(t){return this._param.cancelScheduledValues(t),this}cancelAndHoldAtTime(t){return this._param.cancelAndHoldAtTime(t),this}rampTo(t,e,n){return this._param.rampTo(t,e,n),this}get value(){return this._param.value}set value(t){this._param.value=t}get convert(){return this._param.convert}set convert(t){this._param.convert=t}get units(){return this._param.units}get overridden(){return this._param.overridden}set overridden(t){this._param.overridden=t}get maxValue(){return this._param.maxValue}get minValue(){return this._param.minValue}apply(t){return this._param.apply(t),this}}function Jn(s,t,e,n){(t instanceof X||ve(t)||t instanceof G&&t.override)&&(t.cancelScheduledValues(0),t.setValueAtTime(0,0),t instanceof G&&(t.overridden=!0)),Gt(s,t,e,n)}class Qs extends X{constructor(){const t=I(Qs.getDefaults(),arguments,["value"]);super(t),this.name="TickParam",this._events=new Rt(1/0),this._multiplier=1,this._multiplier=t.multiplier,this._events.cancel(0),this._events.add({ticks:0,time:0,type:"setValueAtTime",value:this._fromType(t.value)}),this.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(X.getDefaults(),{multiplier:1,units:"hertz",value:1})}setTargetAtTime(t,e,n){e=this.toSeconds(e),this.setRampPoint(e);const i=this._fromType(t),r=this._events.get(e),o=Math.round(Math.max(1/n,1));for(let a=0;a<=o;a++){const c=n*a+e,u=this._exponentialApproach(r.time,r.value,i,n,c);this.linearRampToValueAtTime(this._toType(u),c)}return this}setValueAtTime(t,e){const n=this.toSeconds(e);super.setValueAtTime(t,e);const i=this._events.get(n),r=this._events.previousEvent(i),o=this._getTicksUntilEvent(r,n);return i.ticks=Math.max(o,0),this}linearRampToValueAtTime(t,e){const n=this.toSeconds(e);super.linearRampToValueAtTime(t,e);const i=this._events.get(n),r=this._events.previousEvent(i),o=this._getTicksUntilEvent(r,n);return i.ticks=Math.max(o,0),this}exponentialRampToValueAtTime(t,e){e=this.toSeconds(e);const n=this._fromType(t),i=this._events.get(e),r=Math.round(Math.max((e-i.time)*10,1)),o=(e-i.time)/r;for(let a=0;a<=r;a++){const c=o*a+i.time,u=this._exponentialInterpolate(i.time,i.value,e,n,c);this.linearRampToValueAtTime(this._toType(u),c)}return this}_getTicksUntilEvent(t,e){if(t===null)t={ticks:0,time:0,type:"setValueAtTime",value:0};else if(It(t.ticks)){const o=this._events.previousEvent(t);t.ticks=this._getTicksUntilEvent(o,t.time)}const n=this._fromType(this.getValueAtTime(t.time));let i=this._fromType(this.getValueAtTime(e));const r=this._events.get(e);return r&&r.time===e&&r.type==="setValueAtTime"&&(i=this._fromType(this.getValueAtTime(e-this.sampleTime))),.5*(e-t.time)*(n+i)+t.ticks}getTicksAtTime(t){const e=this.toSeconds(t),n=this._events.get(e);return Math.max(this._getTicksUntilEvent(n,e),0)}getDurationOfTicks(t,e){const n=this.toSeconds(e),i=this.getTicksAtTime(e);return this.getTimeOfTick(i+t)-n}getTimeOfTick(t){const e=this._events.get(t,"ticks"),n=this._events.getAfter(t,"ticks");if(e&&e.ticks===t)return e.time;if(e&&n&&n.type==="linearRampToValueAtTime"&&e.value!==n.value){const i=this._fromType(this.getValueAtTime(e.time)),o=(this._fromType(this.getValueAtTime(n.time))-i)/(n.time-e.time),a=Math.sqrt(Math.pow(i,2)-2*o*(e.ticks-t)),c=(-i+a)/o,u=(-i-a)/o;return(c>0?c:u)+e.time}else return e?e.value===0?1/0:e.time+(t-e.ticks)/e.value:t/this._initialValue}ticksToTime(t,e){return this.getDurationOfTicks(t,e)}timeToTicks(t,e){const n=this.toSeconds(e),i=this.toSeconds(t),r=this.getTicksAtTime(n);return this.getTicksAtTime(n+i)-r}_fromType(t){return this.units==="bpm"&&this.multiplier?1/(60/t/this.multiplier):super._fromType(t)}_toType(t){return this.units==="bpm"&&this.multiplier?t/this.multiplier*60:super._toType(t)}get multiplier(){return this._multiplier}set multiplier(t){const e=this.value;this._multiplier=t,this.cancelScheduledValues(0),this.setValueAtTime(e,0)}}class Js extends G{constructor(){const t=I(Js.getDefaults(),arguments,["value"]);super(t),this.name="TickSignal",this.input=this._param=new Qs({context:this.context,convert:t.convert,multiplier:t.multiplier,param:this._constantSource.offset,units:t.units,value:t.value})}static getDefaults(){return Object.assign(G.getDefaults(),{multiplier:1,units:"hertz",value:1})}ticksToTime(t,e){return this._param.ticksToTime(t,e)}timeToTicks(t,e){return this._param.timeToTicks(t,e)}getTimeOfTick(t){return this._param.getTimeOfTick(t)}getDurationOfTicks(t,e){return this._param.getDurationOfTicks(t,e)}getTicksAtTime(t){return this._param.getTicksAtTime(t)}get multiplier(){return this._param.multiplier}set multiplier(t){this._param.multiplier=t}dispose(){return super.dispose(),this._param.dispose(),this}}class Ks extends At{constructor(){const t=I(Ks.getDefaults(),arguments,["frequency"]);super(t),this.name="TickSource",this._state=new Ys,this._tickOffset=new Rt,this._ticksAtTime=new Rt,this._secondsAtTime=new Rt,this.frequency=new Js({context:this.context,units:t.units,value:t.frequency}),Y(this,"frequency"),this._state.setStateAtTime("stopped",0),this.setTicksAtTime(0,0)}static getDefaults(){return Object.assign({frequency:1,units:"hertz"},At.getDefaults())}get state(){return this.getStateAtTime(this.now())}start(t,e){const n=this.toSeconds(t);return this._state.getValueAtTime(n)!=="started"&&(this._state.setStateAtTime("started",n),$(e)&&this.setTicksAtTime(e,n),this._ticksAtTime.cancel(n),this._secondsAtTime.cancel(n)),this}stop(t){const e=this.toSeconds(t);if(this._state.getValueAtTime(e)==="stopped"){const n=this._state.get(e);n&&n.time>0&&(this._tickOffset.cancel(n.time),this._state.cancel(n.time))}return this._state.cancel(e),this._state.setStateAtTime("stopped",e),this.setTicksAtTime(0,e),this._ticksAtTime.cancel(e),this._secondsAtTime.cancel(e),this}pause(t){const e=this.toSeconds(t);return this._state.getValueAtTime(e)==="started"&&(this._state.setStateAtTime("paused",e),this._ticksAtTime.cancel(e),this._secondsAtTime.cancel(e)),this}cancel(t){return t=this.toSeconds(t),this._state.cancel(t),this._tickOffset.cancel(t),this._ticksAtTime.cancel(t),this._secondsAtTime.cancel(t),this}getTicksAtTime(t){const e=this.toSeconds(t),n=this._state.getLastState("stopped",e),i=this._ticksAtTime.get(e),r={state:"paused",time:e};this._state.add(r);let o=i||n,a=i?i.ticks:0,c=null;return this._state.forEachBetween(o.time,e+this.sampleTime,u=>{let l=o.time;const h=this._tickOffset.get(u.time);h&&h.time>=o.time&&(a=h.ticks,l=h.time),o.state==="started"&&u.state!=="started"&&(a+=this.frequency.getTicksAtTime(u.time)-this.frequency.getTicksAtTime(l),u.time!==r.time&&(c={state:u.state,time:u.time,ticks:a})),o=u}),this._state.remove(r),c&&this._ticksAtTime.add(c),a}get ticks(){return this.getTicksAtTime(this.now())}set ticks(t){this.setTicksAtTime(t,this.now())}get seconds(){return this.getSecondsAtTime(this.now())}set seconds(t){const e=this.now(),n=this.frequency.timeToTicks(t,e);this.setTicksAtTime(n,e)}getSecondsAtTime(t){t=this.toSeconds(t);const e=this._state.getLastState("stopped",t),n={state:"paused",time:t};this._state.add(n);const i=this._secondsAtTime.get(t);let r=i||e,o=i?i.seconds:0,a=null;return this._state.forEachBetween(r.time,t+this.sampleTime,c=>{let u=r.time;const l=this._tickOffset.get(c.time);l&&l.time>=r.time&&(o=l.seconds,u=l.time),r.state==="started"&&c.state!=="started"&&(o+=c.time-u,c.time!==n.time&&(a={state:c.state,time:c.time,seconds:o})),r=c}),this._state.remove(n),a&&this._secondsAtTime.add(a),o}setTicksAtTime(t,e){return e=this.toSeconds(e),this._tickOffset.cancel(e),this._tickOffset.add({seconds:this.frequency.getDurationOfTicks(t,e),ticks:t,time:e}),this._ticksAtTime.cancel(e),this._secondsAtTime.cancel(e),this}getStateAtTime(t){return t=this.toSeconds(t),this._state.getValueAtTime(t)}getTimeOfTick(t,e=this.now()){const n=this._tickOffset.get(e),i=this._state.get(e),r=Math.max(n.time,i.time),o=this.frequency.getTicksAtTime(r)+t-n.ticks;return this.frequency.getTimeOfTick(o)}forEachTickBetween(t,e,n){let i=this._state.get(t);this._state.forEachBetween(t,e,o=>{i&&i.state==="started"&&o.state!=="started"&&this.forEachTickBetween(Math.max(i.time,t),o.time-this.sampleTime,n),i=o});let r=null;if(i&&i.state==="started"){const o=Math.max(i.time,t),a=this.frequency.getTicksAtTime(o),c=this.frequency.getTicksAtTime(i.time),u=a-c;let l=Math.ceil(u)-u;l=Bt(l,1)?0:l;let h=this.frequency.getTimeOfTick(a+l);for(;h<e;){try{n(h,Math.round(this.getTicksAtTime(h)))}catch(p){r=p;break}h+=this.frequency.getDurationOfTicks(1,h)}}if(r)throw r;return this}dispose(){return super.dispose(),this._state.dispose(),this._tickOffset.dispose(),this._ticksAtTime.dispose(),this._secondsAtTime.dispose(),this.frequency.dispose(),this}}class Kn extends At{constructor(){const t=I(Kn.getDefaults(),arguments,["callback","frequency"]);super(t),this.name="Clock",this.callback=Q,this._lastUpdate=0,this._state=new Ys("stopped"),this._boundLoop=this._loop.bind(this),this.callback=t.callback,this._tickSource=new Ks({context:this.context,frequency:t.frequency,units:t.units}),this._lastUpdate=0,this.frequency=this._tickSource.frequency,Y(this,"frequency"),this._state.setStateAtTime("stopped",0),this.context.on("tick",this._boundLoop)}static getDefaults(){return Object.assign(At.getDefaults(),{callback:Q,frequency:1,units:"hertz"})}get state(){return this._state.getValueAtTime(this.now())}start(t,e){Pr(this.context);const n=this.toSeconds(t);return this.log("start",n),this._state.getValueAtTime(n)!=="started"&&(this._state.setStateAtTime("started",n),this._tickSource.start(n,e),n<this._lastUpdate&&this.emit("start",n,e)),this}stop(t){const e=this.toSeconds(t);return this.log("stop",e),this._state.cancel(e),this._state.setStateAtTime("stopped",e),this._tickSource.stop(e),e<this._lastUpdate&&this.emit("stop",e),this}pause(t){const e=this.toSeconds(t);return this._state.getValueAtTime(e)==="started"&&(this._state.setStateAtTime("paused",e),this._tickSource.pause(e),e<this._lastUpdate&&this.emit("pause",e)),this}get ticks(){return Math.ceil(this.getTicksAtTime(this.now()))}set ticks(t){this._tickSource.ticks=t}get seconds(){return this._tickSource.seconds}set seconds(t){this._tickSource.seconds=t}getSecondsAtTime(t){return this._tickSource.getSecondsAtTime(t)}setTicksAtTime(t,e){return this._tickSource.setTicksAtTime(t,e),this}getTimeOfTick(t,e=this.now()){return this._tickSource.getTimeOfTick(t,e)}getTicksAtTime(t){return this._tickSource.getTicksAtTime(t)}nextTickTime(t,e){const n=this.toSeconds(e),i=this.getTicksAtTime(n);return this._tickSource.getTimeOfTick(i+t,n)}_loop(){const t=this._lastUpdate,e=this.now();this._lastUpdate=e,this.log("loop",t,e),t!==e&&(this._state.forEachBetween(t,e,n=>{switch(n.state){case"started":const i=this._tickSource.getTicksAtTime(n.time);this.emit("start",n.time,i);break;case"stopped":n.time!==0&&this.emit("stop",n.time);break;case"paused":this.emit("pause",n.time);break}}),this._tickSource.forEachTickBetween(t,e,(n,i)=>{this.callback(n,i)}))}getStateAtTime(t){const e=this.toSeconds(t);return this._state.getValueAtTime(e)}dispose(){return super.dispose(),this.context.off("tick",this._boundLoop),this._tickSource.dispose(),this._state.dispose(),this}}dn.mixin(Kn);class We extends M{constructor(){const t=I(We.getDefaults(),arguments,["delayTime","maxDelay"]);super(t),this.name="Delay";const e=this.toSeconds(t.maxDelay);this._maxDelay=Math.max(e,this.toSeconds(t.delayTime)),this._delayNode=this.input=this.output=this.context.createDelay(e),this.delayTime=new X({context:this.context,param:this._delayNode.delayTime,units:"time",value:t.delayTime,minValue:0,maxValue:this.maxDelay}),Y(this,"delayTime")}static getDefaults(){return Object.assign(M.getDefaults(),{delayTime:0,maxDelay:1})}get maxDelay(){return this._maxDelay}dispose(){return super.dispose(),this._delayNode.disconnect(),this.delayTime.dispose(),this}}class je extends M{constructor(){const t=I(je.getDefaults(),arguments,["volume"]);super(t),this.name="Volume",this.input=this.output=new U({context:this.context,gain:t.volume,units:"decibels"}),this.volume=this.output.gain,Y(this,"volume"),this._unmutedVolume=t.volume,this.mute=t.mute}static getDefaults(){return Object.assign(M.getDefaults(),{mute:!1,volume:0})}get mute(){return this.volume.value===-1/0}set mute(t){!this.mute&&t?(this._unmutedVolume=this.volume.value,this.volume.value=-1/0):this.mute&&!t&&(this.volume.value=this._unmutedVolume)}dispose(){return super.dispose(),this.input.dispose(),this.volume.dispose(),this}}class ti extends M{constructor(){const t=I(ti.getDefaults(),arguments);super(t),this.name="Destination",this.input=new je({context:this.context}),this.output=new U({context:this.context}),this.volume=this.input.volume,ne(this.input,this.output,this.context.rawContext.destination),this.mute=t.mute,this._internalChannels=[this.input,this.context.rawContext.destination,this.output]}static getDefaults(){return Object.assign(M.getDefaults(),{mute:!1,volume:0})}get mute(){return this.input.mute}set mute(t){this.input.mute=t}chain(...t){return this.input.disconnect(),t.unshift(this.input),t.push(this.output),ne(...t),this}get maxChannelCount(){return this.context.rawContext.destination.maxChannelCount}dispose(){return super.dispose(),this.volume.dispose(),this}}Xn(s=>{s.destination=new ti({context:s})}),Yn(s=>{s.destination.dispose()});class zh extends M{constructor(){super(...arguments),this.name="Listener",this.positionX=new X({context:this.context,param:this.context.rawContext.listener.positionX}),this.positionY=new X({context:this.context,param:this.context.rawContext.listener.positionY}),this.positionZ=new X({context:this.context,param:this.context.rawContext.listener.positionZ}),this.forwardX=new X({context:this.context,param:this.context.rawContext.listener.forwardX}),this.forwardY=new X({context:this.context,param:this.context.rawContext.listener.forwardY}),this.forwardZ=new X({context:this.context,param:this.context.rawContext.listener.forwardZ}),this.upX=new X({context:this.context,param:this.context.rawContext.listener.upX}),this.upY=new X({context:this.context,param:this.context.rawContext.listener.upY}),this.upZ=new X({context:this.context,param:this.context.rawContext.listener.upZ})}static getDefaults(){return Object.assign(M.getDefaults(),{positionX:0,positionY:0,positionZ:0,forwardX:0,forwardY:0,forwardZ:-1,upX:0,upY:1,upZ:0})}dispose(){return super.dispose(),this.positionX.dispose(),this.positionY.dispose(),this.positionZ.dispose(),this.forwardX.dispose(),this.forwardY.dispose(),this.forwardZ.dispose(),this.upX.dispose(),this.upY.dispose(),this.upZ.dispose(),this}}Xn(s=>{s.listener=new zh({context:s})}),Yn(s=>{s.listener.dispose()});class ei extends ee{constructor(){super(),this.name="ToneAudioBuffers",this._buffers=new Map,this._loadingCount=0;const t=I(ei.getDefaults(),arguments,["urls","onload","baseUrl"],"urls");this.baseUrl=t.baseUrl,Object.keys(t.urls).forEach(e=>{this._loadingCount++;const n=t.urls[e];this.add(e,n,this._bufferLoaded.bind(this,t.onload),t.onerror)})}static getDefaults(){return{baseUrl:"",onerror:Q,onload:Q,urls:{}}}has(t){return this._buffers.has(t.toString())}get(t){return W(this.has(t),`ToneAudioBuffers has no buffer named: ${t}`),this._buffers.get(t.toString())}_bufferLoaded(t){this._loadingCount--,this._loadingCount===0&&t&&t()}get loaded(){return Array.from(this._buffers).every(([t,e])=>e.loaded)}add(t,e,n=Q,i=Q){return te(e)?(this.baseUrl&&e.trim().substring(0,11).toLowerCase()==="data:audio/"&&(this.baseUrl=""),this._buffers.set(t.toString(),new et(this.baseUrl+e,n,i))):this._buffers.set(t.toString(),new et(e,n,i)),this}dispose(){return super.dispose(),this._buffers.forEach(t=>t.dispose()),this._buffers.clear(),this}}class Be extends fn{constructor(){super(...arguments),this.name="Ticks",this.defaultUnits="i"}_now(){return this.context.transport.ticks}_beatsToUnits(t){return this._getPPQ()*t}_secondsToUnits(t){return Math.floor(t/(60/this._getBpm())*this._getPPQ())}_ticksToUnits(t){return t}toTicks(){return this.valueOf()}toSeconds(){return this.valueOf()/this._getPPQ()*(60/this._getBpm())}}class $h extends At{constructor(){super(...arguments),this.name="Draw",this.expiration=.25,this.anticipation=.008,this._events=new Rt,this._boundDrawLoop=this._drawLoop.bind(this),this._animationFrame=-1}schedule(t,e){return this._events.add({callback:t,time:this.toSeconds(e)}),this._events.length===1&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop)),this}cancel(t){return this._events.cancel(this.toSeconds(t)),this}_drawLoop(){const t=this.context.currentTime;this._events.forEachBefore(t+this.anticipation,e=>{t-e.time<=this.expiration&&e.callback(),this._events.remove(e)}),this._events.length>0&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop))}dispose(){return super.dispose(),this._events.dispose(),cancelAnimationFrame(this._animationFrame),this}}Xn(s=>{s.draw=new $h({context:s})}),Yn(s=>{s.draw.dispose()});class Zh extends ee{constructor(){super(...arguments),this.name="IntervalTimeline",this._root=null,this._length=0}add(t){W($(t.time),"Events must have a time property"),W($(t.duration),"Events must have a duration parameter"),t.time=t.time.valueOf();let e=new Xh(t.time,t.time+t.duration,t);for(this._root===null?this._root=e:this._root.insert(e),this._length++;e!==null;)e.updateHeight(),e.updateMax(),this._rebalance(e),e=e.parent;return this}remove(t){if(this._root!==null){const e=[];this._root.search(t.time,e);for(const n of e)if(n.event===t){this._removeNode(n),this._length--;break}}return this}get length(){return this._length}cancel(t){return this.forEachFrom(t,e=>this.remove(e)),this}_setRoot(t){this._root=t,this._root!==null&&(this._root.parent=null)}_replaceNodeInParent(t,e){t.parent!==null?(t.isLeftChild()?t.parent.left=e:t.parent.right=e,this._rebalance(t.parent)):this._setRoot(e)}_removeNode(t){if(t.left===null&&t.right===null)this._replaceNodeInParent(t,null);else if(t.right===null)this._replaceNodeInParent(t,t.left);else if(t.left===null)this._replaceNodeInParent(t,t.right);else{const e=t.getBalance();let n,i=null;if(e>0)if(t.left.right===null)n=t.left,n.right=t.right,i=n;else{for(n=t.left.right;n.right!==null;)n=n.right;n.parent&&(n.parent.right=n.left,i=n.parent,n.left=t.left,n.right=t.right)}else if(t.right.left===null)n=t.right,n.left=t.left,i=n;else{for(n=t.right.left;n.left!==null;)n=n.left;n.parent&&(n.parent.left=n.right,i=n.parent,n.left=t.left,n.right=t.right)}t.parent!==null?t.isLeftChild()?t.parent.left=n:t.parent.right=n:this._setRoot(n),i&&this._rebalance(i)}t.dispose()}_rotateLeft(t){const e=t.parent,n=t.isLeftChild(),i=t.right;i&&(t.right=i.left,i.left=t),e!==null?n?e.left=i:e.right=i:this._setRoot(i)}_rotateRight(t){const e=t.parent,n=t.isLeftChild(),i=t.left;i&&(t.left=i.right,i.right=t),e!==null?n?e.left=i:e.right=i:this._setRoot(i)}_rebalance(t){const e=t.getBalance();e>1&&t.left?t.left.getBalance()<0?this._rotateLeft(t.left):this._rotateRight(t):e<-1&&t.right&&(t.right.getBalance()>0?this._rotateRight(t.right):this._rotateLeft(t))}get(t){if(this._root!==null){const e=[];if(this._root.search(t,e),e.length>0){let n=e[0];for(let i=1;i<e.length;i++)e[i].low>n.low&&(n=e[i]);return n.event}}return null}forEach(t){if(this._root!==null){const e=[];this._root.traverse(n=>e.push(n)),e.forEach(n=>{n.event&&t(n.event)})}return this}forEachAtTime(t,e){if(this._root!==null){const n=[];this._root.search(t,n),n.forEach(i=>{i.event&&e(i.event)})}return this}forEachFrom(t,e){if(this._root!==null){const n=[];this._root.searchAfter(t,n),n.forEach(i=>{i.event&&e(i.event)})}return this}dispose(){return super.dispose(),this._root!==null&&this._root.traverse(t=>t.dispose()),this._root=null,this}}class Xh{constructor(t,e,n){this._left=null,this._right=null,this.parent=null,this.height=0,this.event=n,this.low=t,this.high=e,this.max=this.high}insert(t){t.low<=this.low?this.left===null?this.left=t:this.left.insert(t):this.right===null?this.right=t:this.right.insert(t)}search(t,e){t>this.max||(this.left!==null&&this.left.search(t,e),this.low<=t&&this.high>t&&e.push(this),!(this.low>t)&&this.right!==null&&this.right.search(t,e))}searchAfter(t,e){this.low>=t&&(e.push(this),this.left!==null&&this.left.searchAfter(t,e)),this.right!==null&&this.right.searchAfter(t,e)}traverse(t){t(this),this.left!==null&&this.left.traverse(t),this.right!==null&&this.right.traverse(t)}updateHeight(){this.left!==null&&this.right!==null?this.height=Math.max(this.left.height,this.right.height)+1:this.right!==null?this.height=this.right.height+1:this.left!==null?this.height=this.left.height+1:this.height=0}updateMax(){this.max=this.high,this.left!==null&&(this.max=Math.max(this.max,this.left.max)),this.right!==null&&(this.max=Math.max(this.max,this.right.max))}getBalance(){let t=0;return this.left!==null&&this.right!==null?t=this.left.height-this.right.height:this.left!==null?t=this.left.height+1:this.right!==null&&(t=-(this.right.height+1)),t}isLeftChild(){return this.parent!==null&&this.parent.left===this}get left(){return this._left}set left(t){this._left=t,t!==null&&(t.parent=this),this.updateHeight(),this.updateMax()}get right(){return this._right}set right(t){this._right=t,t!==null&&(t.parent=this),this.updateHeight(),this.updateMax()}dispose(){this.parent=null,this._left=null,this._right=null,this.event=null}}class Yh extends ee{constructor(t){super(),this.name="TimelineValue",this._timeline=new Rt({memory:10}),this._initialValue=t}set(t,e){return this._timeline.add({value:t,time:e}),this}get(t){const e=this._timeline.get(t);return e?e.value:this._initialValue}}class Ot extends M{constructor(){super(I(Ot.getDefaults(),arguments,["context"]))}connect(t,e=0,n=0){return Jn(this,t,e,n),this}}class se extends Ot{constructor(){const t=I(se.getDefaults(),arguments,["mapping","length"]);super(t),this.name="WaveShaper",this._shaper=this.context.createWaveShaper(),this.input=this._shaper,this.output=this._shaper,Wt(t.mapping)||t.mapping instanceof Float32Array?this.curve=Float32Array.from(t.mapping):wh(t.mapping)&&this.setMap(t.mapping,t.length)}static getDefaults(){return Object.assign(G.getDefaults(),{length:1024})}setMap(t,e=1024){const n=new Float32Array(e);for(let i=0,r=e;i<r;i++){const o=i/(r-1)*2-1;n[i]=t(o,i)}return this.curve=n,this}get curve(){return this._shaper.curve}set curve(t){this._shaper.curve=t}get oversample(){return this._shaper.oversample}set oversample(t){const e=["none","2x","4x"].some(n=>n.includes(t));W(e,"oversampling must be either 'none', '2x', or '4x'"),this._shaper.oversample=t}dispose(){return super.dispose(),this._shaper.disconnect(),this}}class mn extends Ot{constructor(){const t=I(mn.getDefaults(),arguments,["value"]);super(t),this.name="Pow",this._exponentScaler=this.input=this.output=new se({context:this.context,mapping:this._expFunc(t.value),length:8192}),this._exponent=t.value}static getDefaults(){return Object.assign(Ot.getDefaults(),{value:1})}_expFunc(t){return e=>Math.pow(Math.abs(e),t)}get value(){return this._exponent}set value(t){this._exponent=t,this._exponentScaler.setMap(this._expFunc(this._exponent))}dispose(){return super.dispose(),this._exponentScaler.dispose(),this}}class de{constructor(t,e){this.id=de._eventId++,this._remainderTime=0;const n=Object.assign(de.getDefaults(),e);this.transport=t,this.callback=n.callback,this._once=n.once,this.time=Math.floor(n.time),this._remainderTime=n.time-this.time}static getDefaults(){return{callback:Q,once:!1,time:0}}get floatTime(){return this.time+this._remainderTime}invoke(t){if(this.callback){const e=this.transport.bpm.getDurationOfTicks(1,t);this.callback(t+this._remainderTime*e),this._once&&this.transport.clear(this.id)}}dispose(){return this.callback=void 0,this}}de._eventId=0;class ni extends de{constructor(t,e){super(t,e),this._currentId=-1,this._nextId=-1,this._nextTick=this.time,this._boundRestart=this._restart.bind(this);const n=Object.assign(ni.getDefaults(),e);this.duration=n.duration,this._interval=n.interval,this._nextTick=n.time,this.transport.on("start",this._boundRestart),this.transport.on("loopStart",this._boundRestart),this.transport.on("ticks",this._boundRestart),this.context=this.transport.context,this._restart()}static getDefaults(){return Object.assign({},de.getDefaults(),{duration:1/0,interval:1,once:!1})}invoke(t){this._createEvents(t),super.invoke(t)}_createEvent(){return Zn(this._nextTick,this.floatTime+this.duration)?this.transport.scheduleOnce(this.invoke.bind(this),new Be(this.context,this._nextTick).toSeconds()):-1}_createEvents(t){Zn(this._nextTick+this._interval,this.floatTime+this.duration)&&(this._nextTick+=this._interval,this._currentId=this._nextId,this._nextId=this.transport.scheduleOnce(this.invoke.bind(this),new Be(this.context,this._nextTick).toSeconds()))}_restart(t){this.transport.clear(this._currentId),this.transport.clear(this._nextId),this._nextTick=this.floatTime;const e=this.transport.getTicksAtTime(t);Ve(e,this.time)&&(this._nextTick=this.floatTime+Math.ceil((e-this.floatTime)/this._interval)*this._interval),this._currentId=this._createEvent(),this._nextTick+=this._interval,this._nextId=this._createEvent()}dispose(){return super.dispose(),this.transport.clear(this._currentId),this.transport.clear(this._nextId),this.transport.off("start",this._boundRestart),this.transport.off("loopStart",this._boundRestart),this.transport.off("ticks",this._boundRestart),this}}class ts extends At{constructor(){const t=I(ts.getDefaults(),arguments);super(t),this.name="Transport",this._loop=new Yh(!1),this._loopStart=0,this._loopEnd=0,this._scheduledEvents={},this._timeline=new Rt,this._repeatedEvents=new Zh,this._syncedSignals=[],this._swingAmount=0,this._ppq=t.ppq,this._clock=new Kn({callback:this._processTick.bind(this),context:this.context,frequency:0,units:"bpm"}),this._bindClockEvents(),this.bpm=this._clock.frequency,this._clock.frequency.multiplier=t.ppq,this.bpm.setValueAtTime(t.bpm,0),Y(this,"bpm"),this._timeSignature=t.timeSignature,this._swingTicks=t.ppq/2}static getDefaults(){return Object.assign(At.getDefaults(),{bpm:120,loopEnd:"4m",loopStart:0,ppq:192,swing:0,swingSubdivision:"8n",timeSignature:4})}_processTick(t,e){if(this._loop.get(t)&&e>=this._loopEnd&&(this.emit("loopEnd",t),this._clock.setTicksAtTime(this._loopStart,t),e=this._loopStart,this.emit("loopStart",t,this._clock.getSecondsAtTime(t)),this.emit("loop",t)),this._swingAmount>0&&e%this._ppq!==0&&e%(this._swingTicks*2)!==0){const n=e%(this._swingTicks*2)/(this._swingTicks*2),i=Math.sin(n*Math.PI)*this._swingAmount;t+=new Be(this.context,this._swingTicks*2/3).toSeconds()*i}qr(!0),this._timeline.forEachAtTime(e,n=>n.invoke(t)),qr(!1)}schedule(t,e){const n=new de(this,{callback:t,time:new fn(this.context,e).toTicks()});return this._addEvent(n,this._timeline)}scheduleRepeat(t,e,n,i=1/0){const r=new ni(this,{callback:t,duration:new Ut(this.context,i).toTicks(),interval:new Ut(this.context,e).toTicks(),time:new fn(this.context,n).toTicks()});return this._addEvent(r,this._repeatedEvents)}scheduleOnce(t,e){const n=new de(this,{callback:t,once:!0,time:new fn(this.context,e).toTicks()});return this._addEvent(n,this._timeline)}clear(t){if(this._scheduledEvents.hasOwnProperty(t)){const e=this._scheduledEvents[t.toString()];e.timeline.remove(e.event),e.event.dispose(),delete this._scheduledEvents[t.toString()]}return this}_addEvent(t,e){return this._scheduledEvents[t.id.toString()]={event:t,timeline:e},e.add(t),t.id}cancel(t=0){const e=this.toTicks(t);return this._timeline.forEachFrom(e,n=>this.clear(n.id)),this._repeatedEvents.forEachFrom(e,n=>this.clear(n.id)),this}_bindClockEvents(){this._clock.on("start",(t,e)=>{e=new Be(this.context,e).toSeconds(),this.emit("start",t,e)}),this._clock.on("stop",t=>{this.emit("stop",t)}),this._clock.on("pause",t=>{this.emit("pause",t)})}get state(){return this._clock.getStateAtTime(this.now())}start(t,e){this.context.resume();let n;return $(e)&&(n=this.toTicks(e)),this._clock.start(t,n),this}stop(t){return this._clock.stop(t),this}pause(t){return this._clock.pause(t),this}toggle(t){return t=this.toSeconds(t),this._clock.getStateAtTime(t)!=="started"?this.start(t):this.stop(t),this}get timeSignature(){return this._timeSignature}set timeSignature(t){Wt(t)&&(t=t[0]/t[1]*4),this._timeSignature=t}get loopStart(){return new Ut(this.context,this._loopStart,"i").toSeconds()}set loopStart(t){this._loopStart=this.toTicks(t)}get loopEnd(){return new Ut(this.context,this._loopEnd,"i").toSeconds()}set loopEnd(t){this._loopEnd=this.toTicks(t)}get loop(){return this._loop.get(this.now())}set loop(t){this._loop.set(t,this.now())}setLoopPoints(t,e){return this.loopStart=t,this.loopEnd=e,this}get swing(){return this._swingAmount}set swing(t){this._swingAmount=t}get swingSubdivision(){return new Be(this.context,this._swingTicks).toNotation()}set swingSubdivision(t){this._swingTicks=this.toTicks(t)}get position(){const t=this.now(),e=this._clock.getTicksAtTime(t);return new Be(this.context,e).toBarsBeatsSixteenths()}set position(t){const e=this.toTicks(t);this.ticks=e}get seconds(){return this._clock.seconds}set seconds(t){const e=this.now(),n=this._clock.frequency.timeToTicks(t,e);this.ticks=n}get progress(){if(this.loop){const t=this.now();return(this._clock.getTicksAtTime(t)-this._loopStart)/(this._loopEnd-this._loopStart)}else return 0}get ticks(){return this._clock.ticks}set ticks(t){if(this._clock.ticks!==t){const e=this.now();if(this.state==="started"){const n=this._clock.getTicksAtTime(e),i=this._clock.frequency.getDurationOfTicks(Math.ceil(n)-n,e),r=e+i;this.emit("stop",r),this._clock.setTicksAtTime(t,r),this.emit("start",r,this._clock.getSecondsAtTime(r))}else this.emit("ticks",e),this._clock.setTicksAtTime(t,e)}}getTicksAtTime(t){return this._clock.getTicksAtTime(t)}getSecondsAtTime(t){return this._clock.getSecondsAtTime(t)}get PPQ(){return this._clock.frequency.multiplier}set PPQ(t){this._clock.frequency.multiplier=t}nextSubdivision(t){if(t=this.toTicks(t),this.state!=="started")return 0;{const e=this.now(),n=this.getTicksAtTime(e),i=t-n%t;return this._clock.nextTickTime(i,e)}}syncSignal(t,e){const n=this.now();let i=this.bpm,r=1/(60/i.getValueAtTime(n)/this.PPQ),o=[];if(t.units==="time"){const c=.015625/r,u=new U(c),l=new mn(-1),h=new U(c);i.chain(u,l,h),i=h,r=1/r,o=[u,l,h]}e||(t.getValueAtTime(n)!==0?e=t.getValueAtTime(n)/r:e=0);const a=new U(e);return i.connect(a),a.connect(t._param),o.push(a),this._syncedSignals.push({initial:t.value,nodes:o,signal:t}),t.value=0,this}unsyncSignal(t){for(let e=this._syncedSignals.length-1;e>=0;e--){const n=this._syncedSignals[e];n.signal===t&&(n.nodes.forEach(i=>i.dispose()),n.signal.value=n.initial,this._syncedSignals.splice(e,1))}return this}dispose(){return super.dispose(),this._clock.dispose(),$s(this,"bpm"),this._timeline.dispose(),this._repeatedEvents.dispose(),this}}dn.mixin(ts),Xn(s=>{s.transport=new ts({context:s})}),Yn(s=>{s.transport.dispose()});class xt extends M{constructor(t){super(t),this.input=void 0,this._state=new Ys("stopped"),this._synced=!1,this._scheduled=[],this._syncedStart=Q,this._syncedStop=Q,this._state.memory=100,this._state.increasing=!0,this._volume=this.output=new je({context:this.context,mute:t.mute,volume:t.volume}),this.volume=this._volume.volume,Y(this,"volume"),this.onstop=t.onstop}static getDefaults(){return Object.assign(M.getDefaults(),{mute:!1,onstop:Q,volume:0})}get state(){return this._synced?this.context.transport.state==="started"?this._state.getValueAtTime(this.context.transport.seconds):"stopped":this._state.getValueAtTime(this.now())}get mute(){return this._volume.mute}set mute(t){this._volume.mute=t}_clampToCurrentTime(t){return this._synced?t:Math.max(t,this.context.currentTime)}start(t,e,n){let i=It(t)&&this._synced?this.context.transport.seconds:this.toSeconds(t);if(i=this._clampToCurrentTime(i),!this._synced&&this._state.getValueAtTime(i)==="started")W(Ve(i,this._state.get(i).time),"Start time must be strictly greater than previous start time"),this._state.cancel(i),this._state.setStateAtTime("started",i),this.log("restart",i),this.restart(i,e,n);else if(this.log("start",i),this._state.setStateAtTime("started",i),this._synced){const r=this._state.get(i);r&&(r.offset=this.toSeconds(Fe(e,0)),r.duration=n?this.toSeconds(n):void 0);const o=this.context.transport.schedule(a=>{this._start(a,e,n)},i);this._scheduled.push(o),this.context.transport.state==="started"&&this.context.transport.getSecondsAtTime(this.immediate())>i&&this._syncedStart(this.now(),this.context.transport.seconds)}else Pr(this.context),this._start(i,e,n);return this}stop(t){let e=It(t)&&this._synced?this.context.transport.seconds:this.toSeconds(t);if(e=this._clampToCurrentTime(e),this._state.getValueAtTime(e)==="started"||$(this._state.getNextState("started",e))){if(this.log("stop",e),!this._synced)this._stop(e);else{const n=this.context.transport.schedule(this._stop.bind(this),e);this._scheduled.push(n)}this._state.cancel(e),this._state.setStateAtTime("stopped",e)}return this}restart(t,e,n){return t=this.toSeconds(t),this._state.getValueAtTime(t)==="started"&&(this._state.cancel(t),this._restart(t,e,n)),this}sync(){return this._synced||(this._synced=!0,this._syncedStart=(t,e)=>{if(Ve(e,0)){const n=this._state.get(e);if(n&&n.state==="started"&&n.time!==e){const i=e-this.toSeconds(n.time);let r;n.duration&&(r=this.toSeconds(n.duration)-i),this._start(t,this.toSeconds(n.offset)+i,r)}}},this._syncedStop=t=>{const e=this.context.transport.getSecondsAtTime(Math.max(t-this.sampleTime,0));this._state.getValueAtTime(e)==="started"&&this._stop(t)},this.context.transport.on("start",this._syncedStart),this.context.transport.on("loopStart",this._syncedStart),this.context.transport.on("stop",this._syncedStop),this.context.transport.on("pause",this._syncedStop),this.context.transport.on("loopEnd",this._syncedStop)),this}unsync(){return this._synced&&(this.context.transport.off("stop",this._syncedStop),this.context.transport.off("pause",this._syncedStop),this.context.transport.off("loopEnd",this._syncedStop),this.context.transport.off("start",this._syncedStart),this.context.transport.off("loopStart",this._syncedStart)),this._synced=!1,this._scheduled.forEach(t=>this.context.transport.clear(t)),this._scheduled=[],this._state.cancel(0),this._stop(0),this}dispose(){return super.dispose(),this.onstop=Q,this.unsync(),this._volume.dispose(),this._state.dispose(),this}}class _n extends Le{constructor(){const t=I(_n.getDefaults(),arguments,["url","onload"]);super(t),this.name="ToneBufferSource",this._source=this.context.createBufferSource(),this._internalChannels=[this._source],this._sourceStarted=!1,this._sourceStopped=!1,Gt(this._source,this._gainNode),this._source.onended=()=>this._stopSource(),this.playbackRate=new X({context:this.context,param:this._source.playbackRate,units:"positive",value:t.playbackRate}),this.loop=t.loop,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this._buffer=new et(t.url,t.onload,t.onerror),this._internalChannels.push(this._source)}static getDefaults(){return Object.assign(Le.getDefaults(),{url:new et,loop:!1,loopEnd:0,loopStart:0,onload:Q,onerror:Q,playbackRate:1})}get fadeIn(){return this._fadeIn}set fadeIn(t){this._fadeIn=t}get fadeOut(){return this._fadeOut}set fadeOut(t){this._fadeOut=t}get curve(){return this._curve}set curve(t){this._curve=t}start(t,e,n,i=1){W(this.buffer.loaded,"buffer is either not set or not loaded");const r=this.toSeconds(t);this._startGain(r,i),this.loop?e=Fe(e,this.loopStart):e=Fe(e,0);let o=Math.max(this.toSeconds(e),0);if(this.loop){const a=this.toSeconds(this.loopEnd)||this.buffer.duration,c=this.toSeconds(this.loopStart),u=a-c;zs(o,a)&&(o=(o-c)%u+c),Bt(o,this.buffer.duration)&&(o=0)}if(this._source.buffer=this.buffer.get(),this._source.loopEnd=this.toSeconds(this.loopEnd)||this.buffer.duration,Zn(o,this.buffer.duration)&&(this._sourceStarted=!0,this._source.start(r,o)),$(n)){let a=this.toSeconds(n);a=Math.max(a,0),this.stop(r+a)}return this}_stopSource(t){!this._sourceStopped&&this._sourceStarted&&(this._sourceStopped=!0,this._source.stop(this.toSeconds(t)),this._onended())}get loopStart(){return this._source.loopStart}set loopStart(t){this._source.loopStart=this.toSeconds(t)}get loopEnd(){return this._source.loopEnd}set loopEnd(t){this._source.loopEnd=this.toSeconds(t)}get buffer(){return this._buffer}set buffer(t){this._buffer.set(t)}get loop(){return this._source.loop}set loop(t){this._source.loop=t,this._sourceStarted&&this.cancelStop()}dispose(){return super.dispose(),this._source.onended=null,this._source.disconnect(),this._buffer.dispose(),this.playbackRate.dispose(),this}}class we extends xt{constructor(){const t=I(we.getDefaults(),arguments,["type"]);super(t),this.name="Noise",this._source=null,this._playbackRate=t.playbackRate,this.type=t.type,this._fadeIn=t.fadeIn,this._fadeOut=t.fadeOut}static getDefaults(){return Object.assign(xt.getDefaults(),{fadeIn:0,fadeOut:0,playbackRate:1,type:"white"})}get type(){return this._type}set type(t){if(W(t in Xr,"Noise: invalid type: "+t),this._type!==t&&(this._type=t,this.state==="started")){const e=this.now();this._stop(e),this._start(e)}}get playbackRate(){return this._playbackRate}set playbackRate(t){this._playbackRate=t,this._source&&(this._source.playbackRate.value=t)}_start(t){const e=Xr[this._type];this._source=new _n({url:e,context:this.context,fadeIn:this._fadeIn,fadeOut:this._fadeOut,loop:!0,onended:()=>this.onstop(this),playbackRate:this._playbackRate}).connect(this.output),this._source.start(this.toSeconds(t),Math.random()*(e.duration-.001))}_stop(t){this._source&&(this._source.stop(this.toSeconds(t)),this._source=null)}get fadeIn(){return this._fadeIn}set fadeIn(t){this._fadeIn=t,this._source&&(this._source.fadeIn=this._fadeIn)}get fadeOut(){return this._fadeOut}set fadeOut(t){this._fadeOut=t,this._source&&(this._source.fadeOut=this._fadeOut)}_restart(t){this._stop(t),this._start(t)}dispose(){return super.dispose(),this._source&&this._source.disconnect(),this}}const Ue=44100*5,si=2,ie={brown:null,pink:null,white:null},Xr={get brown(){if(!ie.brown){const s=[];for(let t=0;t<si;t++){const e=new Float32Array(Ue);s[t]=e;let n=0;for(let i=0;i<Ue;i++){const r=Math.random()*2-1;e[i]=(n+.02*r)/1.02,n=e[i],e[i]*=3.5}}ie.brown=new et().fromArray(s)}return ie.brown},get pink(){if(!ie.pink){const s=[];for(let t=0;t<si;t++){const e=new Float32Array(Ue);s[t]=e;let n,i,r,o,a,c,u;n=i=r=o=a=c=u=0;for(let l=0;l<Ue;l++){const h=Math.random()*2-1;n=.99886*n+h*.0555179,i=.99332*i+h*.0750759,r=.969*r+h*.153852,o=.8665*o+h*.3104856,a=.55*a+h*.5329522,c=-.7616*c-h*.016898,e[l]=n+i+r+o+a+c+u+h*.5362,e[l]*=.11,u=h*.115926}}ie.pink=new et().fromArray(s)}return ie.pink},get white(){if(!ie.white){const s=[];for(let t=0;t<si;t++){const e=new Float32Array(Ue);s[t]=e;for(let n=0;n<Ue;n++)e[n]=Math.random()*2-1}ie.white=new et().fromArray(s)}return ie.white}};function Te(s,t){return dt(this,void 0,void 0,function*(){const e=t/s.context.sampleRate,n=new Hn(1,e,s.context.sampleRate);return new s.constructor(Object.assign(s.get(),{frequency:2/e,detune:0,context:n})).toDestination().start(0),(yield n.render()).getChannelData(0)})}class ii extends Le{constructor(){const t=I(ii.getDefaults(),arguments,["frequency","type"]);super(t),this.name="ToneOscillatorNode",this._oscillator=this.context.createOscillator(),this._internalChannels=[this._oscillator],Gt(this._oscillator,this._gainNode),this.type=t.type,this.frequency=new X({context:this.context,param:this._oscillator.frequency,units:"frequency",value:t.frequency}),this.detune=new X({context:this.context,param:this._oscillator.detune,units:"cents",value:t.detune}),Y(this,["frequency","detune"])}static getDefaults(){return Object.assign(Le.getDefaults(),{detune:0,frequency:440,type:"sine"})}start(t){const e=this.toSeconds(t);return this.log("start",e),this._startGain(e),this._oscillator.start(e),this}_stopSource(t){this._oscillator.stop(t)}setPeriodicWave(t){return this._oscillator.setPeriodicWave(t),this}get type(){return this._oscillator.type}set type(t){this._oscillator.type=t}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._oscillator.disconnect(),this.frequency.dispose(),this.detune.dispose(),this}}class ot extends xt{constructor(){const t=I(ot.getDefaults(),arguments,["frequency","type"]);super(t),this.name="Oscillator",this._oscillator=null,this.frequency=new G({context:this.context,units:"frequency",value:t.frequency}),Y(this,"frequency"),this.detune=new G({context:this.context,units:"cents",value:t.detune}),Y(this,"detune"),this._partials=t.partials,this._partialCount=t.partialCount,this._type=t.type,t.partialCount&&t.type!=="custom"&&(this._type=this.baseType+t.partialCount.toString()),this.phase=t.phase}static getDefaults(){return Object.assign(xt.getDefaults(),{detune:0,frequency:440,partialCount:0,partials:[],phase:0,type:"sine"})}_start(t){const e=this.toSeconds(t),n=new ii({context:this.context,onended:()=>this.onstop(this)});this._oscillator=n,this._wave?this._oscillator.setPeriodicWave(this._wave):this._oscillator.type=this._type,this._oscillator.connect(this.output),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.start(e)}_stop(t){const e=this.toSeconds(t);this._oscillator&&this._oscillator.stop(e)}_restart(t){const e=this.toSeconds(t);return this.log("restart",e),this._oscillator&&this._oscillator.cancelStop(),this._state.cancel(e),this}syncFrequency(){return this.context.transport.syncSignal(this.frequency),this}unsyncFrequency(){return this.context.transport.unsyncSignal(this.frequency),this}_getCachedPeriodicWave(){if(this._type==="custom")return ot._periodicWaveCache.find(e=>e.phase===this._phase&&Eh(e.partials,this._partials));{const t=ot._periodicWaveCache.find(e=>e.type===this._type&&e.phase===this._phase);return this._partialCount=t?t.partialCount:this._partialCount,t}}get type(){return this._type}set type(t){this._type=t;const e=["sine","square","sawtooth","triangle"].indexOf(t)!==-1;if(this._phase===0&&e)this._wave=void 0,this._partialCount=0,this._oscillator!==null&&(this._oscillator.type=t);else{const n=this._getCachedPeriodicWave();if($(n)){const{partials:i,wave:r}=n;this._wave=r,this._partials=i,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave)}else{const[i,r]=this._getRealImaginary(t,this._phase),o=this.context.createPeriodicWave(i,r);this._wave=o,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave),ot._periodicWaveCache.push({imag:r,partialCount:this._partialCount,partials:this._partials,phase:this._phase,real:i,type:this._type,wave:this._wave}),ot._periodicWaveCache.length>100&&ot._periodicWaveCache.shift()}}}get baseType(){return this._type.replace(this.partialCount.toString(),"")}set baseType(t){this.partialCount&&this._type!=="custom"&&t!=="custom"?this.type=t+this.partialCount:this.type=t}get partialCount(){return this._partialCount}set partialCount(t){Mt(t,0);let e=this._type;const n=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(this._type);if(n&&(e=n[1]),this._type!=="custom")t===0?this.type=e:this.type=e+t.toString();else{const i=new Float32Array(t);this._partials.forEach((r,o)=>i[o]=r),this._partials=Array.from(i),this.type=this._type}}_getRealImaginary(t,e){let i=2048;const r=new Float32Array(i),o=new Float32Array(i);let a=1;if(t==="custom"){if(a=this._partials.length+1,this._partialCount=this._partials.length,i=a,this._partials.length===0)return[r,o]}else{const c=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(t);c?(a=parseInt(c[2],10)+1,this._partialCount=parseInt(c[2],10),t=c[1],a=Math.max(a,2),i=a):this._partialCount=0,this._partials=[]}for(let c=1;c<i;++c){const u=2/(c*Math.PI);let l;switch(t){case"sine":l=c<=a?1:0,this._partials[c-1]=l;break;case"square":l=c&1?2*u:0,this._partials[c-1]=l;break;case"sawtooth":l=u*(c&1?1:-1),this._partials[c-1]=l;break;case"triangle":c&1?l=2*(u*u)*(c-1>>1&1?-1:1):l=0,this._partials[c-1]=l;break;case"custom":l=this._partials[c-1];break;default:throw new TypeError("Oscillator: invalid type: "+t)}l!==0?(r[c]=-l*Math.sin(e*c),o[c]=l*Math.cos(e*c)):(r[c]=0,o[c]=0)}return[r,o]}_inverseFFT(t,e,n){let i=0;const r=t.length;for(let o=0;o<r;o++)i+=t[o]*Math.cos(o*n)+e[o]*Math.sin(o*n);return i}getInitialValue(){const[t,e]=this._getRealImaginary(this._type,0);let n=0;const i=Math.PI*2,r=32;for(let o=0;o<r;o++)n=Math.max(this._inverseFFT(t,e,o/r*i),n);return Mh(-this._inverseFFT(t,e,this._phase)/n,-1,1)}get partials(){return this._partials.slice(0,this.partialCount)}set partials(t){this._partials=t,this._partialCount=this._partials.length,t.length&&(this.type="custom")}get phase(){return this._phase*(180/Math.PI)}set phase(t){this._phase=t*Math.PI/180,this.type=this._type}asArray(){return dt(this,arguments,void 0,function*(t=1024){return Te(this,t)})}dispose(){return super.dispose(),this._oscillator!==null&&this._oscillator.dispose(),this._wave=void 0,this.frequency.dispose(),this.detune.dispose(),this}}ot._periodicWaveCache=[];class ri extends Ot{constructor(){super(...arguments),this.name="AudioToGain",this._norm=new se({context:this.context,mapping:t=>(t+1)/2}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class Yt extends G{constructor(){const t=I(Yt.getDefaults(),arguments,["value"]);super(t),this.name="Multiply",this.override=!1,this._mult=this.input=this.output=new U({context:this.context,minValue:t.minValue,maxValue:t.maxValue}),this.factor=this._param=this._mult.gain,this.factor.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(G.getDefaults(),{value:0})}dispose(){return super.dispose(),this._mult.dispose(),this}}class gn extends xt{constructor(){const t=I(gn.getDefaults(),arguments,["frequency","type","modulationType"]);super(t),this.name="AMOscillator",this._modulationScale=new ri({context:this.context}),this._modulationNode=new U({context:this.context}),this._carrier=new ot({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase,type:t.type}),this.frequency=this._carrier.frequency,this.detune=this._carrier.detune,this._modulator=new ot({context:this.context,phase:t.phase,type:t.modulationType}),this.harmonicity=new Yt({context:this.context,units:"positive",value:t.harmonicity}),this.frequency.chain(this.harmonicity,this._modulator.frequency),this._modulator.chain(this._modulationScale,this._modulationNode.gain),this._carrier.chain(this._modulationNode,this.output),Y(this,["frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(ot.getDefaults(),{harmonicity:1,modulationType:"square"})}_start(t){this._modulator.start(t),this._carrier.start(t)}_stop(t){this._modulator.stop(t),this._carrier.stop(t)}_restart(t){this._modulator.restart(t),this._carrier.restart(t)}get type(){return this._carrier.type}set type(t){this._carrier.type=t}get baseType(){return this._carrier.baseType}set baseType(t){this._carrier.baseType=t}get partialCount(){return this._carrier.partialCount}set partialCount(t){this._carrier.partialCount=t}get modulationType(){return this._modulator.type}set modulationType(t){this._modulator.type=t}get phase(){return this._carrier.phase}set phase(t){this._carrier.phase=t,this._modulator.phase=t}get partials(){return this._carrier.partials}set partials(t){this._carrier.partials=t}asArray(){return dt(this,arguments,void 0,function*(t=1024){return Te(this,t)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this._modulationScale.dispose(),this}}class yn extends xt{constructor(){const t=I(yn.getDefaults(),arguments,["frequency","type","modulationType"]);super(t),this.name="FMOscillator",this._modulationNode=new U({context:this.context,gain:0}),this._carrier=new ot({context:this.context,detune:t.detune,frequency:0,onstop:()=>this.onstop(this),phase:t.phase,type:t.type}),this.detune=this._carrier.detune,this.frequency=new G({context:this.context,units:"frequency",value:t.frequency}),this._modulator=new ot({context:this.context,phase:t.phase,type:t.modulationType}),this.harmonicity=new Yt({context:this.context,units:"positive",value:t.harmonicity}),this.modulationIndex=new Yt({context:this.context,units:"positive",value:t.modulationIndex}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.frequency.chain(this.modulationIndex,this._modulationNode),this._modulator.connect(this._modulationNode.gain),this._modulationNode.connect(this._carrier.frequency),this._carrier.connect(this.output),this.detune.connect(this._modulator.detune),Y(this,["modulationIndex","frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(ot.getDefaults(),{harmonicity:1,modulationIndex:2,modulationType:"square"})}_start(t){this._modulator.start(t),this._carrier.start(t)}_stop(t){this._modulator.stop(t),this._carrier.stop(t)}_restart(t){return this._modulator.restart(t),this._carrier.restart(t),this}get type(){return this._carrier.type}set type(t){this._carrier.type=t}get baseType(){return this._carrier.baseType}set baseType(t){this._carrier.baseType=t}get partialCount(){return this._carrier.partialCount}set partialCount(t){this._carrier.partialCount=t}get modulationType(){return this._modulator.type}set modulationType(t){this._modulator.type=t}get phase(){return this._carrier.phase}set phase(t){this._carrier.phase=t,this._modulator.phase=t}get partials(){return this._carrier.partials}set partials(t){this._carrier.partials=t}asArray(){return dt(this,arguments,void 0,function*(t=1024){return Te(this,t)})}dispose(){return super.dispose(),this.frequency.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this.modulationIndex.dispose(),this}}class Ge extends xt{constructor(){const t=I(Ge.getDefaults(),arguments,["frequency","width"]);super(t),this.name="PulseOscillator",this._widthGate=new U({context:this.context,gain:0}),this._thresh=new se({context:this.context,mapping:e=>e<=0?-1:1}),this.width=new G({context:this.context,units:"audioRange",value:t.width}),this._triangle=new ot({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase,type:"triangle"}),this.frequency=this._triangle.frequency,this.detune=this._triangle.detune,this._triangle.chain(this._thresh,this.output),this.width.chain(this._widthGate,this._thresh),Y(this,["width","frequency","detune"])}static getDefaults(){return Object.assign(xt.getDefaults(),{detune:0,frequency:440,phase:0,type:"pulse",width:.2})}_start(t){t=this.toSeconds(t),this._triangle.start(t),this._widthGate.gain.setValueAtTime(1,t)}_stop(t){t=this.toSeconds(t),this._triangle.stop(t),this._widthGate.gain.cancelScheduledValues(t),this._widthGate.gain.setValueAtTime(0,t)}_restart(t){this._triangle.restart(t),this._widthGate.gain.cancelScheduledValues(t),this._widthGate.gain.setValueAtTime(1,t)}get phase(){return this._triangle.phase}set phase(t){this._triangle.phase=t}get type(){return"pulse"}get baseType(){return"pulse"}get partials(){return[]}get partialCount(){return 0}set carrierType(t){this._triangle.type=t}asArray(){return dt(this,arguments,void 0,function*(t=1024){return Te(this,t)})}dispose(){return super.dispose(),this._triangle.dispose(),this.width.dispose(),this._widthGate.dispose(),this._thresh.dispose(),this}}class vn extends xt{constructor(){const t=I(vn.getDefaults(),arguments,["frequency","type","spread"]);super(t),this.name="FatOscillator",this._oscillators=[],this.frequency=new G({context:this.context,units:"frequency",value:t.frequency}),this.detune=new G({context:this.context,units:"cents",value:t.detune}),this._spread=t.spread,this._type=t.type,this._phase=t.phase,this._partials=t.partials,this._partialCount=t.partialCount,this.count=t.count,Y(this,["frequency","detune"])}static getDefaults(){return Object.assign(ot.getDefaults(),{count:3,spread:20,type:"sawtooth"})}_start(t){t=this.toSeconds(t),this._forEach(e=>e.start(t))}_stop(t){t=this.toSeconds(t),this._forEach(e=>e.stop(t))}_restart(t){this._forEach(e=>e.restart(t))}_forEach(t){for(let e=0;e<this._oscillators.length;e++)t(this._oscillators[e],e)}get type(){return this._type}set type(t){this._type=t,this._forEach(e=>e.type=t)}get spread(){return this._spread}set spread(t){if(this._spread=t,this._oscillators.length>1){const e=-t/2,n=t/(this._oscillators.length-1);this._forEach((i,r)=>i.detune.value=e+n*r)}}get count(){return this._oscillators.length}set count(t){if(Mt(t,1),this._oscillators.length!==t){this._forEach(e=>e.dispose()),this._oscillators=[];for(let e=0;e<t;e++){const n=new ot({context:this.context,volume:-6-t*1.1,type:this._type,phase:this._phase+e/t*360,partialCount:this._partialCount,onstop:e===0?()=>this.onstop(this):Q});this.type==="custom"&&(n.partials=this._partials),this.frequency.connect(n.frequency),this.detune.connect(n.detune),n.detune.overridden=!1,n.connect(this.output),this._oscillators[e]=n}this.spread=this._spread,this.state==="started"&&this._forEach(e=>e.start())}}get phase(){return this._phase}set phase(t){this._phase=t,this._forEach((e,n)=>e.phase=this._phase+n/this.count*360)}get baseType(){return this._oscillators[0].baseType}set baseType(t){this._forEach(e=>e.baseType=t),this._type=this._oscillators[0].type}get partials(){return this._oscillators[0].partials}set partials(t){this._partials=t,this._partialCount=this._partials.length,t.length&&(this._type="custom",this._forEach(e=>e.partials=t))}get partialCount(){return this._oscillators[0].partialCount}set partialCount(t){this._partialCount=t,this._forEach(e=>e.partialCount=t),this._type=this._oscillators[0].type}asArray(){return dt(this,arguments,void 0,function*(t=1024){return Te(this,t)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this._forEach(t=>t.dispose()),this}}class wn extends xt{constructor(){const t=I(wn.getDefaults(),arguments,["frequency","modulationFrequency"]);super(t),this.name="PWMOscillator",this.sourceType="pwm",this._scale=new Yt({context:this.context,value:2}),this._pulse=new Ge({context:this.context,frequency:t.modulationFrequency}),this._pulse.carrierType="sine",this.modulationFrequency=this._pulse.frequency,this._modulator=new ot({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase}),this.frequency=this._modulator.frequency,this.detune=this._modulator.detune,this._modulator.chain(this._scale,this._pulse.width),this._pulse.connect(this.output),Y(this,["modulationFrequency","frequency","detune"])}static getDefaults(){return Object.assign(xt.getDefaults(),{detune:0,frequency:440,modulationFrequency:.4,phase:0,type:"pwm"})}_start(t){t=this.toSeconds(t),this._modulator.start(t),this._pulse.start(t)}_stop(t){t=this.toSeconds(t),this._modulator.stop(t),this._pulse.stop(t)}_restart(t){this._modulator.restart(t),this._pulse.restart(t)}get type(){return"pwm"}get baseType(){return"pwm"}get partials(){return[]}get partialCount(){return 0}get phase(){return this._modulator.phase}set phase(t){this._modulator.phase=t}asArray(){return dt(this,arguments,void 0,function*(t=1024){return Te(this,t)})}dispose(){return super.dispose(),this._pulse.dispose(),this._scale.dispose(),this._modulator.dispose(),this}}const Yr={am:gn,fat:vn,fm:yn,oscillator:ot,pulse:Ge,pwm:wn};class es extends xt{constructor(){const t=I(es.getDefaults(),arguments,["frequency","type"]);super(t),this.name="OmniOscillator",this.frequency=new G({context:this.context,units:"frequency",value:t.frequency}),this.detune=new G({context:this.context,units:"cents",value:t.detune}),Y(this,["frequency","detune"]),this.set(t)}static getDefaults(){return Object.assign(ot.getDefaults(),yn.getDefaults(),gn.getDefaults(),vn.getDefaults(),Ge.getDefaults(),wn.getDefaults())}_start(t){this._oscillator.start(t)}_stop(t){this._oscillator.stop(t)}_restart(t){return this._oscillator.restart(t),this}get type(){let t="";return["am","fm","fat"].some(e=>this._sourceType===e)&&(t=this._sourceType),t+this._oscillator.type}set type(t){t.substr(0,2)==="fm"?(this._createNewOscillator("fm"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(2)):t.substr(0,2)==="am"?(this._createNewOscillator("am"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(2)):t.substr(0,3)==="fat"?(this._createNewOscillator("fat"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(3)):t==="pwm"?(this._createNewOscillator("pwm"),this._oscillator=this._oscillator):t==="pulse"?this._createNewOscillator("pulse"):(this._createNewOscillator("oscillator"),this._oscillator=this._oscillator,this._oscillator.type=t)}get partials(){return this._oscillator.partials}set partials(t){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&(this._oscillator.partials=t)}get partialCount(){return this._oscillator.partialCount}set partialCount(t){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&(this._oscillator.partialCount=t)}set(t){return Reflect.has(t,"type")&&t.type&&(this.type=t.type),super.set(t),this}_createNewOscillator(t){if(t!==this._sourceType){this._sourceType=t;const e=Yr[t],n=this.now();if(this._oscillator){const i=this._oscillator;i.stop(n),this.context.setTimeout(()=>i.dispose(),this.blockTime)}this._oscillator=new e({context:this.context}),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.connect(this.output),this._oscillator.onstop=()=>this.onstop(this),this.state==="started"&&this._oscillator.start(n)}}get phase(){return this._oscillator.phase}set phase(t){this._oscillator.phase=t}get sourceType(){return this._sourceType}set sourceType(t){let e="sine";this._oscillator.type!=="pwm"&&this._oscillator.type!=="pulse"&&(e=this._oscillator.type),t==="fm"?this.type="fm"+e:t==="am"?this.type="am"+e:t==="fat"?this.type="fat"+e:t==="oscillator"?this.type=e:t==="pulse"?this.type="pulse":t==="pwm"&&(this.type="pwm")}_getOscType(t,e){return t instanceof Yr[e]}get baseType(){return this._oscillator.baseType}set baseType(t){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&t!=="pulse"&&t!=="pwm"&&(this._oscillator.baseType=t)}get width(){if(this._getOscType(this._oscillator,"pulse"))return this._oscillator.width}get count(){if(this._getOscType(this._oscillator,"fat"))return this._oscillator.count}set count(t){this._getOscType(this._oscillator,"fat")&&le(t)&&(this._oscillator.count=t)}get spread(){if(this._getOscType(this._oscillator,"fat"))return this._oscillator.spread}set spread(t){this._getOscType(this._oscillator,"fat")&&le(t)&&(this._oscillator.spread=t)}get modulationType(){if(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))return this._oscillator.modulationType}set modulationType(t){(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))&&te(t)&&(this._oscillator.modulationType=t)}get modulationIndex(){if(this._getOscType(this._oscillator,"fm"))return this._oscillator.modulationIndex}get harmonicity(){if(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))return this._oscillator.harmonicity}get modulationFrequency(){if(this._getOscType(this._oscillator,"pwm"))return this._oscillator.modulationFrequency}asArray(){return dt(this,arguments,void 0,function*(t=1024){return Te(this,t)})}dispose(){return super.dispose(),this.detune.dispose(),this.frequency.dispose(),this._oscillator.dispose(),this}}class ns extends G{constructor(){super(I(ns.getDefaults(),arguments,["value"])),this.override=!1,this.name="Add",this._sum=new U({context:this.context}),this.input=this._sum,this.output=this._sum,this.addend=this._param,ne(this._constantSource,this._sum)}static getDefaults(){return Object.assign(G.getDefaults(),{value:0})}dispose(){return super.dispose(),this._sum.dispose(),this}}class pe extends Ot{constructor(){const t=I(pe.getDefaults(),arguments,["min","max"]);super(t),this.name="Scale",this._mult=this.input=new Yt({context:this.context,value:t.max-t.min}),this._add=this.output=new ns({context:this.context,value:t.min}),this._min=t.min,this._max=t.max,this.input.connect(this.output)}static getDefaults(){return Object.assign(Ot.getDefaults(),{max:1,min:0})}get min(){return this._min}set min(t){this._min=t,this._setRange()}get max(){return this._max}set max(t){this._max=t,this._setRange()}_setRange(){this._add.value=this._min,this._mult.value=this._max-this._min}dispose(){return super.dispose(),this._add.dispose(),this._mult.dispose(),this}}class oi extends Ot{constructor(){super(I(oi.getDefaults(),arguments)),this.name="Zero",this._gain=new U({context:this.context}),this.output=this._gain,this.input=void 0,Gt(this.context.getConstant(0),this._gain)}dispose(){return super.dispose(),Zr(this.context.getConstant(0),this._gain),this}}class ze extends M{constructor(){const t=I(ze.getDefaults(),arguments,["frequency","min","max"]);super(t),this.name="LFO",this._stoppedValue=0,this._units="number",this.convert=!0,this._fromType=X.prototype._fromType,this._toType=X.prototype._toType,this._is=X.prototype._is,this._clampValue=X.prototype._clampValue,this._oscillator=new ot(t),this.frequency=this._oscillator.frequency,this._amplitudeGain=new U({context:this.context,gain:t.amplitude,units:"normalRange"}),this.amplitude=this._amplitudeGain.gain,this._stoppedSignal=new G({context:this.context,units:"audioRange",value:0}),this._zeros=new oi({context:this.context}),this._a2g=new ri({context:this.context}),this._scaler=this.output=new pe({context:this.context,max:t.max,min:t.min}),this.units=t.units,this.min=t.min,this.max=t.max,this._oscillator.chain(this._amplitudeGain,this._a2g,this._scaler),this._zeros.connect(this._a2g),this._stoppedSignal.connect(this._a2g),Y(this,["amplitude","frequency"]),this.phase=t.phase}static getDefaults(){return Object.assign(ot.getDefaults(),{amplitude:1,frequency:"4n",max:1,min:0,type:"sine",units:"number"})}start(t){return t=this.toSeconds(t),this._stoppedSignal.setValueAtTime(0,t),this._oscillator.start(t),this}stop(t){return t=this.toSeconds(t),this._stoppedSignal.setValueAtTime(this._stoppedValue,t),this._oscillator.stop(t),this}sync(){return this._oscillator.sync(),this._oscillator.syncFrequency(),this}unsync(){return this._oscillator.unsync(),this._oscillator.unsyncFrequency(),this}_setStoppedValue(){this._stoppedValue=this._oscillator.getInitialValue(),this._stoppedSignal.value=this._stoppedValue}get min(){return this._toType(this._scaler.min)}set min(t){t=this._fromType(t),this._scaler.min=t}get max(){return this._toType(this._scaler.max)}set max(t){t=this._fromType(t),this._scaler.max=t}get type(){return this._oscillator.type}set type(t){this._oscillator.type=t,this._setStoppedValue()}get partials(){return this._oscillator.partials}set partials(t){this._oscillator.partials=t,this._setStoppedValue()}get phase(){return this._oscillator.phase}set phase(t){this._oscillator.phase=t,this._setStoppedValue()}get units(){return this._units}set units(t){const e=this.min,n=this.max;this._units=t,this.min=e,this.max=n}get state(){return this._oscillator.state}connect(t,e,n){return(t instanceof X||t instanceof G)&&(this.convert=t.convert,this.units=t.units),Jn(this,t,e,n),this}dispose(){return super.dispose(),this._oscillator.dispose(),this._stoppedSignal.dispose(),this._zeros.dispose(),this._scaler.dispose(),this._a2g.dispose(),this._amplitudeGain.dispose(),this.amplitude.dispose(),this}}function Hr(s,t=1/0){const e=new WeakMap;return function(n,i){Reflect.defineProperty(n,i,{configurable:!0,enumerable:!0,get:function(){return e.get(this)},set:function(r){Mt(r,s,t),e.set(this,r)}})}}function re(s,t=1/0){const e=new WeakMap;return function(n,i){Reflect.defineProperty(n,i,{configurable:!0,enumerable:!0,get:function(){return e.get(this)},set:function(r){Mt(this.toSeconds(r),s,t),e.set(this,r)}})}}class ss extends xt{constructor(){const t=I(ss.getDefaults(),arguments,["url","onload"]);super(t),this.name="Player",this._activeSources=new Set,this._buffer=new et({onload:this._onload.bind(this,t.onload),onerror:t.onerror,reverse:t.reverse,url:t.url}),this.autostart=t.autostart,this._loop=t.loop,this._loopStart=t.loopStart,this._loopEnd=t.loopEnd,this._playbackRate=t.playbackRate,this.fadeIn=t.fadeIn,this.fadeOut=t.fadeOut}static getDefaults(){return Object.assign(xt.getDefaults(),{autostart:!1,fadeIn:0,fadeOut:0,loop:!1,loopEnd:0,loopStart:0,onload:Q,onerror:Q,playbackRate:1,reverse:!1})}load(t){return dt(this,void 0,void 0,function*(){return yield this._buffer.load(t),this._onload(),this})}_onload(t=Q){t(),this.autostart&&this.start()}_onSourceEnd(t){this.onstop(this),this._activeSources.delete(t),this._activeSources.size===0&&!this._synced&&this._state.getValueAtTime(this.now())==="started"&&(this._state.cancel(this.now()),this._state.setStateAtTime("stopped",this.now()))}start(t,e,n){return super.start(t,e,n),this}_start(t,e,n){this._loop?e=Fe(e,this._loopStart):e=Fe(e,0);const i=this.toSeconds(e),r=n;n=Fe(n,Math.max(this._buffer.duration-i,0));let o=this.toSeconds(n);o=o/this._playbackRate,t=this.toSeconds(t);const a=new _n({url:this._buffer,context:this.context,fadeIn:this.fadeIn,fadeOut:this.fadeOut,loop:this._loop,loopEnd:this._loopEnd,loopStart:this._loopStart,onended:this._onSourceEnd.bind(this),playbackRate:this._playbackRate}).connect(this.output);!this._loop&&!this._synced&&(this._state.cancel(t+o),this._state.setStateAtTime("stopped",t+o,{implicitEnd:!0})),this._activeSources.add(a),this._loop&&It(r)?a.start(t,i):a.start(t,i,o-this.toSeconds(this.fadeOut))}_stop(t){const e=this.toSeconds(t);this._activeSources.forEach(n=>n.stop(e))}restart(t,e,n){return super.restart(t,e,n),this}_restart(t,e,n){var i;(i=[...this._activeSources].pop())===null||i===void 0||i.stop(t),this._start(t,e,n)}seek(t,e){const n=this.toSeconds(e);if(this._state.getValueAtTime(n)==="started"){const i=this.toSeconds(t);this._stop(n),this._start(n,i)}return this}setLoopPoints(t,e){return this.loopStart=t,this.loopEnd=e,this}get loopStart(){return this._loopStart}set loopStart(t){this._loopStart=t,this.buffer.loaded&&Mt(this.toSeconds(t),0,this.buffer.duration),this._activeSources.forEach(e=>{e.loopStart=t})}get loopEnd(){return this._loopEnd}set loopEnd(t){this._loopEnd=t,this.buffer.loaded&&Mt(this.toSeconds(t),0,this.buffer.duration),this._activeSources.forEach(e=>{e.loopEnd=t})}get buffer(){return this._buffer}set buffer(t){this._buffer.set(t)}get loop(){return this._loop}set loop(t){if(this._loop!==t&&(this._loop=t,this._activeSources.forEach(e=>{e.loop=t}),t)){const e=this._state.getNextState("stopped",this.now());e&&this._state.cancel(e.time)}}get playbackRate(){return this._playbackRate}set playbackRate(t){this._playbackRate=t;const e=this.now(),n=this._state.getNextState("stopped",e);n&&n.implicitEnd&&(this._state.cancel(n.time),this._activeSources.forEach(i=>i.cancelStop())),this._activeSources.forEach(i=>{i.playbackRate.setValueAtTime(t,e)})}get reverse(){return this._buffer.reverse}set reverse(t){this._buffer.reverse=t}get loaded(){return this._buffer.loaded}dispose(){return super.dispose(),this._activeSources.forEach(t=>t.dispose()),this._activeSources.clear(),this._buffer.dispose(),this}}jt([re(0)],ss.prototype,"fadeIn",void 0),jt([re(0)],ss.prototype,"fadeOut",void 0);class Qr extends Ot{constructor(){super(...arguments),this.name="Abs",this._abs=new se({context:this.context,mapping:t=>Math.abs(t)<.001?0:Math.abs(t)}),this.input=this._abs,this.output=this._abs}dispose(){return super.dispose(),this._abs.dispose(),this}}class Jr extends Ot{constructor(){super(...arguments),this.name="GainToAudio",this._norm=new se({context:this.context,mapping:t=>Math.abs(t)*2-1}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class Kr extends Ot{constructor(){super(...arguments),this.name="Negate",this._multiply=new Yt({context:this.context,value:-1}),this.input=this._multiply,this.output=this._multiply}dispose(){return super.dispose(),this._multiply.dispose(),this}}class is extends G{constructor(){super(I(is.getDefaults(),arguments,["value"])),this.override=!1,this.name="Subtract",this._sum=new U({context:this.context}),this.input=this._sum,this.output=this._sum,this._neg=new Kr({context:this.context}),this.subtrahend=this._param,ne(this._constantSource,this._neg,this._sum)}static getDefaults(){return Object.assign(G.getDefaults(),{value:0})}dispose(){return super.dispose(),this._neg.dispose(),this._sum.dispose(),this}}class rs extends Ot{constructor(){super(I(rs.getDefaults(),arguments)),this.name="GreaterThanZero",this._thresh=this.output=new se({context:this.context,length:127,mapping:t=>t<=0?0:1}),this._scale=this.input=new Yt({context:this.context,value:1e4}),this._scale.connect(this._thresh)}dispose(){return super.dispose(),this._scale.dispose(),this._thresh.dispose(),this}}class ai extends G{constructor(){const t=I(ai.getDefaults(),arguments,["value"]);super(t),this.name="GreaterThan",this.override=!1,this._subtract=this.input=new is({context:this.context,value:t.value}),this._gtz=this.output=new rs({context:this.context}),this.comparator=this._param=this._subtract.subtrahend,Y(this,"comparator"),this._subtract.connect(this._gtz)}static getDefaults(){return Object.assign(G.getDefaults(),{value:0})}dispose(){return super.dispose(),this._gtz.dispose(),this._subtract.dispose(),this.comparator.dispose(),this}}class ci extends pe{constructor(){const t=I(ci.getDefaults(),arguments,["min","max","exponent"]);super(t),this.name="ScaleExp",this.input=this._exp=new mn({context:this.context,value:t.exponent}),this._exp.connect(this._mult)}static getDefaults(){return Object.assign(pe.getDefaults(),{exponent:1})}get exponent(){return this._exp.value}set exponent(t){this._exp.value=t}dispose(){return super.dispose(),this._exp.dispose(),this}}class Ht extends M{constructor(){const t=I(Ht.getDefaults(),arguments,["attack","decay","sustain","release"]);super(t),this.name="Envelope",this._sig=new G({context:this.context,value:0}),this.output=this._sig,this.input=void 0,this.attack=t.attack,this.decay=t.decay,this.sustain=t.sustain,this.release=t.release,this.attackCurve=t.attackCurve,this.releaseCurve=t.releaseCurve,this.decayCurve=t.decayCurve}static getDefaults(){return Object.assign(M.getDefaults(),{attack:.01,attackCurve:"linear",decay:.1,decayCurve:"exponential",release:1,releaseCurve:"exponential",sustain:.5})}get value(){return this.getValueAtTime(this.now())}_getCurve(t,e){if(te(t))return t;{let n;for(n in os)if(os[n][e]===t)return n;return t}}_setCurve(t,e,n){if(te(n)&&Reflect.has(os,n)){const i=os[n];ye(i)?t!=="_decayCurve"&&(this[t]=i[e]):this[t]=i}else if(Wt(n)&&t!=="_decayCurve")this[t]=n;else throw new Error("Envelope: invalid curve: "+n)}get attackCurve(){return this._getCurve(this._attackCurve,"In")}set attackCurve(t){this._setCurve("_attackCurve","In",t)}get releaseCurve(){return this._getCurve(this._releaseCurve,"Out")}set releaseCurve(t){this._setCurve("_releaseCurve","Out",t)}get decayCurve(){return this._getCurve(this._decayCurve,"Out")}set decayCurve(t){this._setCurve("_decayCurve","Out",t)}triggerAttack(t,e=1){this.log("triggerAttack",t,e),t=this.toSeconds(t);let i=this.toSeconds(this.attack);const r=this.toSeconds(this.decay),o=this.getValueAtTime(t);if(o>0){const a=1/i;i=(1-o)/a}if(i<this.sampleTime)this._sig.cancelScheduledValues(t),this._sig.setValueAtTime(e,t);else if(this._attackCurve==="linear")this._sig.linearRampTo(e,i,t);else if(this._attackCurve==="exponential")this._sig.targetRampTo(e,i,t);else{this._sig.cancelAndHoldAtTime(t);let a=this._attackCurve;for(let c=1;c<a.length;c++)if(a[c-1]<=o&&o<=a[c]){a=this._attackCurve.slice(c),a[0]=o;break}this._sig.setValueCurveAtTime(a,t,i,e)}if(r&&this.sustain<1){const a=e*this.sustain,c=t+i;this.log("decay",c),this._decayCurve==="linear"?this._sig.linearRampToValueAtTime(a,r+c):this._sig.exponentialApproachValueAtTime(a,c,r)}return this}triggerRelease(t){this.log("triggerRelease",t),t=this.toSeconds(t);const e=this.getValueAtTime(t);if(e>0){const n=this.toSeconds(this.release);n<this.sampleTime?this._sig.setValueAtTime(0,t):this._releaseCurve==="linear"?this._sig.linearRampTo(0,n,t):this._releaseCurve==="exponential"?this._sig.targetRampTo(0,n,t):(W(Wt(this._releaseCurve),"releaseCurve must be either 'linear', 'exponential' or an array"),this._sig.cancelAndHoldAtTime(t),this._sig.setValueCurveAtTime(this._releaseCurve,t,n,e))}return this}getValueAtTime(t){return this._sig.getValueAtTime(t)}triggerAttackRelease(t,e,n=1){return e=this.toSeconds(e),this.triggerAttack(e,n),this.triggerRelease(e+this.toSeconds(t)),this}cancel(t){return this._sig.cancelScheduledValues(this.toSeconds(t)),this}connect(t,e=0,n=0){return Jn(this,t,e,n),this}asArray(){return dt(this,arguments,void 0,function*(t=1024){const e=t/this.context.sampleRate,n=new Hn(1,e,this.context.sampleRate),i=this.toSeconds(this.attack)+this.toSeconds(this.decay),r=i+this.toSeconds(this.release),o=r*.1,a=r+o,c=new this.constructor(Object.assign(this.get(),{attack:e*this.toSeconds(this.attack)/a,decay:e*this.toSeconds(this.decay)/a,release:e*this.toSeconds(this.release)/a,context:n}));return c._sig.toDestination(),c.triggerAttackRelease(e*(i+o)/a,0),(yield n.render()).getChannelData(0)})}dispose(){return super.dispose(),this._sig.dispose(),this}}jt([re(0)],Ht.prototype,"attack",void 0),jt([re(0)],Ht.prototype,"decay",void 0),jt([Hr(0,1)],Ht.prototype,"sustain",void 0),jt([re(0)],Ht.prototype,"release",void 0);const os=(()=>{let t,e;const n=[];for(t=0;t<128;t++)n[t]=Math.sin(t/127*(Math.PI/2));const i=[],r=6.4;for(t=0;t<127;t++){e=t/127;const p=Math.sin(e*(Math.PI*2)*r-Math.PI/2)+1;i[t]=p/10+e*.83}i[127]=1;const o=[],a=5;for(t=0;t<128;t++)o[t]=Math.ceil(t/127*a)/a;const c=[];for(t=0;t<128;t++)e=t/127,c[t]=.5*(1-Math.cos(Math.PI*e));const u=[];for(t=0;t<128;t++){e=t/127;const p=Math.pow(e,3)*4+.2,f=Math.cos(p*Math.PI*2*e);u[t]=Math.abs(f*(1-e))}function l(p){const f=new Array(p.length);for(let d=0;d<p.length;d++)f[d]=1-p[d];return f}function h(p){return p.slice(0).reverse()}return{bounce:{In:l(u),Out:u},cosine:{In:n,Out:h(n)},exponential:"exponential",linear:"linear",ripple:{In:i,Out:l(i)},sine:{In:c,Out:l(c)},step:{In:o,Out:l(o)}}})();class $e extends M{constructor(){const t=I($e.getDefaults(),arguments);super(t),this._scheduledEvents=[],this._synced=!1,this._original_triggerAttack=this.triggerAttack,this._original_triggerRelease=this.triggerRelease,this._syncedRelease=e=>this._original_triggerRelease(e),this._volume=this.output=new je({context:this.context,volume:t.volume}),this.volume=this._volume.volume,Y(this,"volume")}static getDefaults(){return Object.assign(M.getDefaults(),{volume:0})}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",0),this.context.transport.on("stop",this._syncedRelease),this.context.transport.on("pause",this._syncedRelease),this.context.transport.on("loopEnd",this._syncedRelease)),this}_syncState(){let t=!1;return this._synced||(this._synced=!0,t=!0),t}_syncMethod(t,e){const n=this["_original_"+t]=this[t];this[t]=(...i)=>{const r=i[e],o=this.context.transport.schedule(a=>{i[e]=a,n.apply(this,i)},r);this._scheduledEvents.push(o)}}unsync(){return this._scheduledEvents.forEach(t=>this.context.transport.clear(t)),this._scheduledEvents=[],this._synced&&(this._synced=!1,this.triggerAttack=this._original_triggerAttack,this.triggerRelease=this._original_triggerRelease,this.context.transport.off("stop",this._syncedRelease),this.context.transport.off("pause",this._syncedRelease),this.context.transport.off("loopEnd",this._syncedRelease)),this}triggerAttackRelease(t,e,n,i){const r=this.toSeconds(n),o=this.toSeconds(e);return this.triggerAttack(t,r,i),this.triggerRelease(r+o),this}dispose(){return super.dispose(),this._volume.dispose(),this.unsync(),this._scheduledEvents=[],this}}class Ze extends $e{constructor(){const t=I(Ze.getDefaults(),arguments);super(t),this.portamento=t.portamento,this.onsilence=t.onsilence}static getDefaults(){return Object.assign($e.getDefaults(),{detune:0,onsilence:Q,portamento:0})}triggerAttack(t,e,n=1){this.log("triggerAttack",t,e,n);const i=this.toSeconds(e);return this._triggerEnvelopeAttack(i,n),this.setNote(t,i),this}triggerRelease(t){this.log("triggerRelease",t);const e=this.toSeconds(t);return this._triggerEnvelopeRelease(e),this}setNote(t,e){const n=this.toSeconds(e),i=t instanceof Pt?t.toFrequency():t;if(this.portamento>0&&this.getLevelAtTime(n)>.05){const r=this.toSeconds(this.portamento);this.frequency.exponentialRampTo(i,r,n)}else this.frequency.setValueAtTime(i,n);return this}}jt([re(0)],Ze.prototype,"portamento",void 0);class ui extends Ht{constructor(){super(I(ui.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="AmplitudeEnvelope",this._gainNode=new U({context:this.context,gain:0}),this.output=this._gainNode,this.input=this._gainNode,this._sig.connect(this._gainNode.gain),this.output=this._gainNode,this.input=this._gainNode}dispose(){return super.dispose(),this._gainNode.dispose(),this}}class as extends Ze{constructor(){const t=I(as.getDefaults(),arguments);super(t),this.name="Synth",this.oscillator=new es(Object.assign({context:this.context,detune:t.detune,onstop:()=>this.onsilence(this)},t.oscillator)),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.envelope=new ui(Object.assign({context:this.context},t.envelope)),this.oscillator.chain(this.envelope,this.output),Y(this,["oscillator","frequency","detune","envelope"])}static getDefaults(){return Object.assign(Ze.getDefaults(),{envelope:Object.assign(Wr(Ht.getDefaults(),Object.keys(M.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.3}),oscillator:Object.assign(Wr(es.getDefaults(),[...Object.keys(xt.getDefaults()),"frequency","detune"]),{type:"triangle"})})}_triggerEnvelopeAttack(t,e){if(this.envelope.triggerAttack(t,e),this.oscillator.start(t),this.envelope.sustain===0){const n=this.toSeconds(this.envelope.attack),i=this.toSeconds(this.envelope.decay);this.oscillator.stop(t+n+i)}}_triggerEnvelopeRelease(t){this.envelope.triggerRelease(t),this.oscillator.stop(t+this.toSeconds(this.envelope.release))}getLevelAtTime(t){return t=this.toSeconds(t),this.envelope.getValueAtTime(t)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this}}class cs extends M{constructor(){const t=I(cs.getDefaults(),arguments,["frequency","type"]);super(t),this.name="BiquadFilter",this._filter=this.context.createBiquadFilter(),this.input=this.output=this._filter,this.Q=new X({context:this.context,units:"number",value:t.Q,param:this._filter.Q}),this.frequency=new X({context:this.context,units:"frequency",value:t.frequency,param:this._filter.frequency}),this.detune=new X({context:this.context,units:"cents",value:t.detune,param:this._filter.detune}),this.gain=new X({context:this.context,units:"decibels",convert:!1,value:t.gain,param:this._filter.gain}),this.type=t.type}static getDefaults(){return Object.assign(M.getDefaults(),{Q:1,type:"lowpass",frequency:350,detune:0,gain:0})}get type(){return this._filter.type}set type(t){W(["lowpass","highpass","bandpass","lowshelf","highshelf","notch","allpass","peaking"].indexOf(t)!==-1,`Invalid filter type: ${t}`),this._filter.type=t}getFrequencyResponse(t=128){const e=new Float32Array(t);for(let o=0;o<t;o++){const c=Math.pow(o/t,2)*19980+20;e[o]=c}const n=new Float32Array(t),i=new Float32Array(t),r=this.context.createBiquadFilter();return r.type=this.type,r.Q.value=this.Q.value,r.frequency.value=this.frequency.value,r.gain.value=this.gain.value,r.getFrequencyResponse(e,n,i),n}dispose(){return super.dispose(),this._filter.disconnect(),this.Q.dispose(),this.frequency.dispose(),this.gain.dispose(),this.detune.dispose(),this}}class li extends M{constructor(){const t=I(li.getDefaults(),arguments,["frequency","type","rolloff"]);super(t),this.name="Filter",this.input=new U({context:this.context}),this.output=new U({context:this.context}),this._filters=[],this._filters=[],this.Q=new G({context:this.context,units:"positive",value:t.Q}),this.frequency=new G({context:this.context,units:"frequency",value:t.frequency}),this.detune=new G({context:this.context,units:"cents",value:t.detune}),this.gain=new G({context:this.context,units:"decibels",convert:!1,value:t.gain}),this._type=t.type,this.rolloff=t.rolloff,Y(this,["detune","frequency","gain","Q"])}static getDefaults(){return Object.assign(M.getDefaults(),{Q:1,detune:0,frequency:350,gain:0,rolloff:-12,type:"lowpass"})}get type(){return this._type}set type(t){W(["lowpass","highpass","bandpass","lowshelf","highshelf","notch","allpass","peaking"].indexOf(t)!==-1,`Invalid filter type: ${t}`),this._type=t,this._filters.forEach(n=>n.type=t)}get rolloff(){return this._rolloff}set rolloff(t){const e=le(t)?t:parseInt(t,10),n=[-12,-24,-48,-96];let i=n.indexOf(e);W(i!==-1,`rolloff can only be ${n.join(", ")}`),i+=1,this._rolloff=e,this.input.disconnect(),this._filters.forEach(r=>r.disconnect()),this._filters=new Array(i);for(let r=0;r<i;r++){const o=new cs({context:this.context});o.type=this._type,this.frequency.connect(o.frequency),this.detune.connect(o.detune),this.Q.connect(o.Q),this.gain.connect(o.gain),this._filters[r]=o}this._internalChannels=this._filters,ne(this.input,...this._internalChannels,this.output)}getFrequencyResponse(t=128){const e=new cs({context:this.context,frequency:this.frequency.value,gain:this.gain.value,Q:this.Q.value,type:this._type,detune:this.detune.value}),n=new Float32Array(t).map(()=>1);return this._filters.forEach(()=>{e.getFrequencyResponse(t).forEach((r,o)=>n[o]*=r)}),e.dispose(),n}dispose(){return super.dispose(),this._filters.forEach(t=>{t.dispose()}),$s(this,["detune","frequency","gain","Q"]),this.frequency.dispose(),this.Q.dispose(),this.detune.dispose(),this.gain.dispose(),this}}class us extends as{constructor(){const t=I(us.getDefaults(),arguments);super(t),this.name="MembraneSynth",this.portamento=0,this.pitchDecay=t.pitchDecay,this.octaves=t.octaves,Y(this,["oscillator","envelope"])}static getDefaults(){return Pe(Ze.getDefaults(),as.getDefaults(),{envelope:{attack:.001,attackCurve:"exponential",decay:.4,release:1.4,sustain:.01},octaves:10,oscillator:{type:"sine"},pitchDecay:.05})}setNote(t,e){const n=this.toSeconds(e),i=this.toFrequency(t instanceof Pt?t.toFrequency():t),r=i*this.octaves;return this.oscillator.frequency.setValueAtTime(r,n),this.oscillator.frequency.exponentialRampToValueAtTime(i,n+this.toSeconds(this.pitchDecay)),this}dispose(){return super.dispose(),this}}jt([Hr(0)],us.prototype,"octaves",void 0),jt([re(0)],us.prototype,"pitchDecay",void 0);const hi=new Set;function di(s){hi.add(s)}function to(s,t){const e=`registerProcessor("${s}", ${t})`;hi.add(e)}function Hh(){return Array.from(hi).join(`
`)}class Qh extends M{constructor(t){super(t),this.name="ToneAudioWorklet",this.workletOptions={},this.onprocessorerror=Q;const e=URL.createObjectURL(new Blob([Hh()],{type:"text/javascript"})),n=this._audioWorkletName();this._dummyGain=this.context.createGain(),this._dummyParam=this._dummyGain.gain,this.context.addAudioWorkletModule(e).then(()=>{this.disposed||(this._worklet=this.context.createAudioWorkletNode(n,this.workletOptions),this._worklet.onprocessorerror=this.onprocessorerror.bind(this),this.onReady(this._worklet))})}dispose(){return super.dispose(),this._dummyGain.disconnect(),this._worklet&&(this._worklet.port.postMessage("dispose"),this._worklet.disconnect()),this}}di(`
	/**
	 * The base AudioWorkletProcessor for use in Tone.js. Works with the {@link ToneAudioWorklet}. 
	 */
	class ToneAudioWorkletProcessor extends AudioWorkletProcessor {

		constructor(options) {
			
			super(options);
			/**
			 * If the processor was disposed or not. Keep alive until it's disposed.
			 */
			this.disposed = false;
		   	/** 
			 * The number of samples in the processing block
			 */
			this.blockSize = 128;
			/**
			 * the sample rate
			 */
			this.sampleRate = sampleRate;

			this.port.onmessage = (event) => {
				// when it receives a dispose 
				if (event.data === "dispose") {
					this.disposed = true;
				}
			};
		}
	}
`),di(`
	/**
	 * Abstract class for a single input/output processor. 
	 * has a 'generate' function which processes one sample at a time
	 */
	class SingleIOProcessor extends ToneAudioWorkletProcessor {

		constructor(options) {
			super(Object.assign(options, {
				numberOfInputs: 1,
				numberOfOutputs: 1
			}));
			/**
			 * Holds the name of the parameter and a single value of that
			 * parameter at the current sample
			 * @type { [name: string]: number }
			 */
			this.params = {}
		}

		/**
		 * Generate an output sample from the input sample and parameters
		 * @abstract
		 * @param input number
		 * @param channel number
		 * @param parameters { [name: string]: number }
		 * @returns number
		 */
		generate(){}

		/**
		 * Update the private params object with the 
		 * values of the parameters at the given index
		 * @param parameters { [name: string]: Float32Array },
		 * @param index number
		 */
		updateParams(parameters, index) {
			for (const paramName in parameters) {
				const param = parameters[paramName];
				if (param.length > 1) {
					this.params[paramName] = parameters[paramName][index];
				} else {
					this.params[paramName] = parameters[paramName][0];
				}
			}
		}

		/**
		 * Process a single frame of the audio
		 * @param inputs Float32Array[][]
		 * @param outputs Float32Array[][]
		 */
		process(inputs, outputs, parameters) {
			const input = inputs[0];
			const output = outputs[0];
			// get the parameter values
			const channelCount = Math.max(input && input.length || 0, output.length);
			for (let sample = 0; sample < this.blockSize; sample++) {
				this.updateParams(parameters, sample);
				for (let channel = 0; channel < channelCount; channel++) {
					const inputSample = input && input.length ? input[channel][sample] : 0;
					output[channel][sample] = this.generate(inputSample, channel, this.params);
				}
			}
			return !this.disposed;
		}
	};
`),di(`
	/**
	 * A multichannel buffer for use within an AudioWorkletProcessor as a delay line
	 */
	class DelayLine {
		
		constructor(size, channels) {
			this.buffer = [];
			this.writeHead = []
			this.size = size;

			// create the empty channels
			for (let i = 0; i < channels; i++) {
				this.buffer[i] = new Float32Array(this.size);
				this.writeHead[i] = 0;
			}
		}

		/**
		 * Push a value onto the end
		 * @param channel number
		 * @param value number
		 */
		push(channel, value) {
			this.writeHead[channel] += 1;
			if (this.writeHead[channel] > this.size) {
				this.writeHead[channel] = 0;
			}
			this.buffer[channel][this.writeHead[channel]] = value;
		}

		/**
		 * Get the recorded value of the channel given the delay
		 * @param channel number
		 * @param delay number delay samples
		 */
		get(channel, delay) {
			let readHead = this.writeHead[channel] - Math.floor(delay);
			if (readHead < 0) {
				readHead += this.size;
			}
			return this.buffer[channel][readHead];
		}
	}
`);const eo="feedback-comb-filter";to(eo,`
	class FeedbackCombFilterWorklet extends SingleIOProcessor {

		constructor(options) {
			super(options);
			this.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);
		}

		static get parameterDescriptors() {
			return [{
				name: "delayTime",
				defaultValue: 0.1,
				minValue: 0,
				maxValue: 1,
				automationRate: "k-rate"
			}, {
				name: "feedback",
				defaultValue: 0.5,
				minValue: 0,
				maxValue: 0.9999,
				automationRate: "k-rate"
			}];
		}

		generate(input, channel, parameters) {
			const delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);
			this.delayLine.push(channel, input + delayedSample * parameters.feedback);
			return delayedSample;
		}
	}
`);class pi extends Qh{constructor(){const t=I(pi.getDefaults(),arguments,["delayTime","resonance"]);super(t),this.name="FeedbackCombFilter",this.input=new U({context:this.context}),this.output=new U({context:this.context}),this.delayTime=new X({context:this.context,value:t.delayTime,units:"time",minValue:0,maxValue:1,param:this._dummyParam,swappable:!0}),this.resonance=new X({context:this.context,value:t.resonance,units:"normalRange",param:this._dummyParam,swappable:!0}),Y(this,["resonance","delayTime"])}_audioWorkletName(){return eo}static getDefaults(){return Object.assign(M.getDefaults(),{delayTime:.1,resonance:.5})}onReady(t){ne(this.input,t,this.output);const e=t.parameters.get("delayTime");this.delayTime.setParam(e);const n=t.parameters.get("feedback");this.resonance.setParam(n)}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this.delayTime.dispose(),this.resonance.dispose(),this}}class fi extends M{constructor(){const t=I(fi.getDefaults(),arguments,["frequency","type"]);super(t),this.name="OnePoleFilter",this._frequency=t.frequency,this._type=t.type,this.input=new U({context:this.context}),this.output=new U({context:this.context}),this._createFilter()}static getDefaults(){return Object.assign(M.getDefaults(),{frequency:880,type:"lowpass"})}_createFilter(){const t=this._filter,e=this.toFrequency(this._frequency),n=1/(2*Math.PI*e);if(this._type==="lowpass"){const i=1/(n*this.context.sampleRate),r=i-1;this._filter=this.context.createIIRFilter([i,0],[1,r])}else{const i=1/(n*this.context.sampleRate)-1;this._filter=this.context.createIIRFilter([1,-1],[1,i])}this.input.chain(this._filter,this.output),t&&this.context.setTimeout(()=>{this.disposed||(this.input.disconnect(t),t.disconnect())},this.blockTime)}get frequency(){return this._frequency}set frequency(t){this._frequency=t,this._createFilter()}get type(){return this._type}set type(t){this._type=t,this._createFilter()}getFrequencyResponse(t=128){const e=new Float32Array(t);for(let r=0;r<t;r++){const a=Math.pow(r/t,2)*19980+20;e[r]=a}const n=new Float32Array(t),i=new Float32Array(t);return this._filter.getFrequencyResponse(e,n,i),n}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this._filter.disconnect(),this}}class ls extends $e{constructor(){const t=I(ls.getDefaults(),arguments,["urls","onload","baseUrl"],"urls");super(t),this.name="Sampler",this._activeSources=new Map;const e={};Object.keys(t.urls).forEach(n=>{const i=parseInt(n,10);if(W(zn(n)||le(i)&&isFinite(i),`url key is neither a note or midi pitch: ${n}`),zn(n)){const r=new Pt(this.context,n).toMidi();e[r]=t.urls[n]}else le(i)&&isFinite(i)&&(e[i]=t.urls[i])}),this._buffers=new ei({urls:e,onload:t.onload,baseUrl:t.baseUrl,onerror:t.onerror}),this.attack=t.attack,this.release=t.release,this.curve=t.curve,this._buffers.loaded&&Promise.resolve().then(t.onload)}static getDefaults(){return Object.assign($e.getDefaults(),{attack:0,baseUrl:"",curve:"exponential",onload:Q,onerror:Q,release:.1,urls:{}})}_findClosest(t){let n=0;for(;n<96;){if(this._buffers.has(t+n))return-n;if(this._buffers.has(t-n))return n;n++}throw new Error(`No available buffers for note: ${t}`)}triggerAttack(t,e,n=1){return this.log("triggerAttack",t,e,n),Array.isArray(t)||(t=[t]),t.forEach(i=>{const r=$r(new Pt(this.context,i).toFrequency()),o=Math.round(r),a=r-o,c=this._findClosest(o),u=o-c,l=this._buffers.get(u),h=zr(c+a),p=new _n({url:l,context:this.context,curve:this.curve,fadeIn:this.attack,fadeOut:this.release,playbackRate:h}).connect(this.output);p.start(e,0,l.duration/h,n),Wt(this._activeSources.get(o))||this._activeSources.set(o,[]),this._activeSources.get(o).push(p),p.onended=()=>{if(this._activeSources&&this._activeSources.has(o)){const f=this._activeSources.get(o),d=f.indexOf(p);d!==-1&&f.splice(d,1)}}}),this}triggerRelease(t,e){return this.log("triggerRelease",t,e),Array.isArray(t)||(t=[t]),t.forEach(n=>{const i=new Pt(this.context,n).toMidi();if(this._activeSources.has(i)&&this._activeSources.get(i).length){const r=this._activeSources.get(i);e=this.toSeconds(e),r.forEach(o=>{o.stop(e)}),this._activeSources.set(i,[])}}),this}releaseAll(t){const e=this.toSeconds(t);return this._activeSources.forEach(n=>{for(;n.length;)n.shift().stop(e)}),this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1)),this}triggerAttackRelease(t,e,n,i=1){const r=this.toSeconds(n);return this.triggerAttack(t,r,i),Wt(e)?(W(Wt(t),"notes must be an array when duration is array"),t.forEach((o,a)=>{const c=e[Math.min(a,e.length-1)];this.triggerRelease(o,r+this.toSeconds(c))})):this.triggerRelease(t,r+this.toSeconds(e)),this}add(t,e,n){if(W(zn(t)||isFinite(t),`note must be a pitch or midi: ${t}`),zn(t)){const i=new Pt(this.context,t).toMidi();this._buffers.add(i,e,n)}else this._buffers.add(t,e,n);return this}get loaded(){return this._buffers.loaded}dispose(){return super.dispose(),this._buffers.dispose(),this._activeSources.forEach(t=>{t.forEach(e=>e.dispose())}),this._activeSources.clear(),this}}jt([re(0)],ls.prototype,"attack",void 0),jt([re(0)],ls.prototype,"release",void 0);class hs extends M{constructor(){const t=I(hs.getDefaults(),arguments,["fade"]);super(t),this.name="CrossFade",this._panner=this.context.createStereoPanner(),this._split=this.context.createChannelSplitter(2),this._g2a=new Jr({context:this.context}),this.a=new U({context:this.context,gain:0}),this.b=new U({context:this.context,gain:0}),this.output=new U({context:this.context}),this._internalChannels=[this.a,this.b],this.fade=new G({context:this.context,units:"normalRange",value:t.fade}),Y(this,"fade"),this.context.getConstant(1).connect(this._panner),this._panner.connect(this._split),this._panner.channelCount=1,this._panner.channelCountMode="explicit",Gt(this._split,this.a.gain,0),Gt(this._split,this.b.gain,1),this.fade.chain(this._g2a,this._panner.pan),this.a.connect(this.output),this.b.connect(this.output)}static getDefaults(){return Object.assign(M.getDefaults(),{fade:.5})}dispose(){return super.dispose(),this.a.dispose(),this.b.dispose(),this.output.dispose(),this.fade.dispose(),this._g2a.dispose(),this._panner.disconnect(),this._split.disconnect(),this}}class Xe extends M{constructor(t){super(t),this.name="Effect",this._dryWet=new hs({context:this.context}),this.wet=this._dryWet.fade,this.effectSend=new U({context:this.context}),this.effectReturn=new U({context:this.context}),this.input=new U({context:this.context}),this.output=this._dryWet,this.input.fan(this._dryWet.a,this.effectSend),this.effectReturn.connect(this._dryWet.b),this.wet.setValueAtTime(t.wet,0),this._internalChannels=[this.effectReturn,this.effectSend],Y(this,"wet")}static getDefaults(){return Object.assign(M.getDefaults(),{wet:1})}connectEffect(t){return this._internalChannels.push(t),this.effectSend.chain(t,this.effectReturn),this}dispose(){return super.dispose(),this._dryWet.dispose(),this.effectSend.dispose(),this.effectReturn.dispose(),this.wet.dispose(),this}}class ds extends M{constructor(){const t=I(ds.getDefaults(),arguments,["pan"]);super(t),this.name="Panner",this._panner=this.context.createStereoPanner(),this.input=this._panner,this.output=this._panner,this.pan=new X({context:this.context,param:this._panner.pan,value:t.pan,minValue:-1,maxValue:1}),this._panner.channelCount=t.channelCount,this._panner.channelCountMode="explicit",Y(this,"pan")}static getDefaults(){return Object.assign(M.getDefaults(),{pan:0,channelCount:1})}dispose(){return super.dispose(),this._panner.disconnect(),this.pan.dispose(),this}}class ps extends M{constructor(){const t=I(ps.getDefaults(),arguments,["smoothing"]);super(t),this.name="Follower",this._abs=this.input=new Qr({context:this.context}),this._lowpass=this.output=new fi({context:this.context,frequency:1/this.toSeconds(t.smoothing),type:"lowpass"}),this._abs.connect(this._lowpass),this._smoothing=t.smoothing}static getDefaults(){return Object.assign(M.getDefaults(),{smoothing:.05})}get smoothing(){return this._smoothing}set smoothing(t){this._smoothing=t,this._lowpass.frequency=1/this.toSeconds(this.smoothing)}dispose(){return super.dispose(),this._abs.dispose(),this._lowpass.dispose(),this}}to("bit-crusher",`
	class BitCrusherWorklet extends SingleIOProcessor {

		static get parameterDescriptors() {
			return [{
				name: "bits",
				defaultValue: 12,
				minValue: 1,
				maxValue: 16,
				automationRate: 'k-rate'
			}];
		}

		generate(input, _channel, parameters) {
			const step = Math.pow(0.5, parameters.bits - 1);
			const val = step * Math.floor(input / step + 0.5);
			return val;
		}
	}
`);class Ye extends M{constructor(){const t=I(Ye.getDefaults(),arguments,["channels"]);super(t),this.name="Split",this._splitter=this.input=this.output=this.context.createChannelSplitter(t.channels),this._internalChannels=[this._splitter]}static getDefaults(){return Object.assign(M.getDefaults(),{channels:2})}dispose(){return super.dispose(),this._splitter.disconnect(),this}}class be extends M{constructor(){const t=I(be.getDefaults(),arguments,["channels"]);super(t),this.name="Merge",this._merger=this.output=this.input=this.context.createChannelMerger(t.channels)}static getDefaults(){return Object.assign(M.getDefaults(),{channels:2})}dispose(){return super.dispose(),this._merger.disconnect(),this}}class no extends M{constructor(t){super(t),this.name="StereoEffect",this.input=new U({context:this.context}),this.input.channelCount=2,this.input.channelCountMode="explicit",this._dryWet=this.output=new hs({context:this.context,fade:t.wet}),this.wet=this._dryWet.fade,this._split=new Ye({context:this.context,channels:2}),this._merge=new be({context:this.context,channels:2}),this.input.connect(this._split),this.input.connect(this._dryWet.a),this._merge.connect(this._dryWet.b),Y(this,["wet"])}connectEffectLeft(...t){this._split.connect(t[0],0,0),ne(...t),Gt(t[t.length-1],this._merge,0,0)}connectEffectRight(...t){this._split.connect(t[0],1,0),ne(...t),Gt(t[t.length-1],this._merge,0,1)}static getDefaults(){return Object.assign(M.getDefaults(),{wet:1})}dispose(){return super.dispose(),this._dryWet.dispose(),this._split.dispose(),this._merge.dispose(),this}}class so extends no{constructor(t){super(t),this.feedback=new G({context:this.context,value:t.feedback,units:"normalRange"}),this._feedbackL=new U({context:this.context}),this._feedbackR=new U({context:this.context}),this._feedbackSplit=new Ye({context:this.context,channels:2}),this._feedbackMerge=new be({context:this.context,channels:2}),this._merge.connect(this._feedbackSplit),this._feedbackMerge.connect(this._split),this._feedbackSplit.connect(this._feedbackL,0,0),this._feedbackL.connect(this._feedbackMerge,0,0),this._feedbackSplit.connect(this._feedbackR,1,0),this._feedbackR.connect(this._feedbackMerge,0,1),this.feedback.fan(this._feedbackL.gain,this._feedbackR.gain),Y(this,["feedback"])}static getDefaults(){return Object.assign(no.getDefaults(),{feedback:.5})}dispose(){return super.dispose(),this.feedback.dispose(),this._feedbackL.dispose(),this._feedbackR.dispose(),this._feedbackSplit.dispose(),this._feedbackMerge.dispose(),this}}class mi extends so{constructor(){const t=I(mi.getDefaults(),arguments,["frequency","delayTime","depth"]);super(t),this.name="Chorus",this._depth=t.depth,this._delayTime=t.delayTime/1e3,this._lfoL=new ze({context:this.context,frequency:t.frequency,min:0,max:1}),this._lfoR=new ze({context:this.context,frequency:t.frequency,min:0,max:1,phase:180}),this._delayNodeL=new We({context:this.context}),this._delayNodeR=new We({context:this.context}),this.frequency=this._lfoL.frequency,Y(this,["frequency"]),this._lfoL.frequency.connect(this._lfoR.frequency),this.connectEffectLeft(this._delayNodeL),this.connectEffectRight(this._delayNodeR),this._lfoL.connect(this._delayNodeL.delayTime),this._lfoR.connect(this._delayNodeR.delayTime),this.depth=this._depth,this.type=t.type,this.spread=t.spread}static getDefaults(){return Object.assign(so.getDefaults(),{frequency:1.5,delayTime:3.5,depth:.7,type:"sine",spread:180,feedback:0,wet:.5})}get depth(){return this._depth}set depth(t){this._depth=t;const e=this._delayTime*t;this._lfoL.min=Math.max(this._delayTime-e,0),this._lfoL.max=this._delayTime+e,this._lfoR.min=Math.max(this._delayTime-e,0),this._lfoR.max=this._delayTime+e}get delayTime(){return this._delayTime*1e3}set delayTime(t){this._delayTime=t/1e3,this.depth=this._depth}get type(){return this._lfoL.type}set type(t){this._lfoL.type=t,this._lfoR.type=t}get spread(){return this._lfoR.phase-this._lfoL.phase}set spread(t){this._lfoL.phase=90-t/2,this._lfoR.phase=t/2+90}start(t){return this._lfoL.start(t),this._lfoR.start(t),this}stop(t){return this._lfoL.stop(t),this._lfoR.stop(t),this}sync(){return this._lfoL.sync(),this._lfoR.sync(),this}unsync(){return this._lfoL.unsync(),this._lfoR.unsync(),this}dispose(){return super.dispose(),this._lfoL.dispose(),this._lfoR.dispose(),this._delayNodeL.dispose(),this._delayNodeR.dispose(),this.frequency.dispose(),this}}class _i extends Xe{constructor(){const t=I(_i.getDefaults(),arguments,["distortion"]);super(t),this.name="Distortion",this._shaper=new se({context:this.context,length:4096}),this._distortion=t.distortion,this.connectEffect(this._shaper),this.distortion=t.distortion,this.oversample=t.oversample}static getDefaults(){return Object.assign(Xe.getDefaults(),{distortion:.4,oversample:"none"})}get distortion(){return this._distortion}set distortion(t){this._distortion=t;const e=t*100,n=Math.PI/180;this._shaper.setMap(i=>Math.abs(i)<.001?0:(3+e)*i*20*n/(Math.PI+e*Math.abs(i)))}get oversample(){return this._shaper.oversample}set oversample(t){this._shaper.oversample=t}dispose(){return super.dispose(),this._shaper.dispose(),this}}class io extends Xe{constructor(t){super(t),this.name="FeedbackEffect",this._feedbackGain=new U({context:this.context,gain:t.feedback,units:"normalRange"}),this.feedback=this._feedbackGain.gain,Y(this,"feedback"),this.effectReturn.chain(this._feedbackGain,this.effectSend)}static getDefaults(){return Object.assign(Xe.getDefaults(),{feedback:.125})}dispose(){return super.dispose(),this._feedbackGain.dispose(),this.feedback.dispose(),this}}class gi extends io{constructor(){const t=I(gi.getDefaults(),arguments,["delayTime","feedback"]);super(t),this.name="FeedbackDelay",this._delayNode=new We({context:this.context,delayTime:t.delayTime,maxDelay:t.maxDelay}),this.delayTime=this._delayNode.delayTime,this.connectEffect(this._delayNode),Y(this,"delayTime")}static getDefaults(){return Object.assign(io.getDefaults(),{delayTime:.25,maxDelay:1})}dispose(){return super.dispose(),this._delayNode.dispose(),this.delayTime.dispose(),this}}class yi extends Xe{constructor(){const t=I(yi.getDefaults(),arguments,["decay"]);super(t),this.name="Reverb",this._convolver=this.context.createConvolver(),this.ready=Promise.resolve();const e=this.toSeconds(t.decay);Mt(e,.001),this._decay=e;const n=this.toSeconds(t.preDelay);Mt(n,0),this._preDelay=n,this.generate(),this.connectEffect(this._convolver)}static getDefaults(){return Object.assign(Xe.getDefaults(),{decay:1.5,preDelay:.01})}get decay(){return this._decay}set decay(t){t=this.toSeconds(t),Mt(t,.001),this._decay=t,this.generate()}get preDelay(){return this._preDelay}set preDelay(t){t=this.toSeconds(t),Mt(t,0),this._preDelay=t,this.generate()}generate(){return dt(this,void 0,void 0,function*(){const t=this.ready,e=new Hn(2,this._decay+this._preDelay,this.context.sampleRate),n=new we({context:e}),i=new we({context:e}),r=new be({context:e});n.connect(r,0,0),i.connect(r,0,1);const o=new U({context:e}).toDestination();r.connect(o),n.start(0),i.start(0),o.gain.setValueAtTime(0,0),o.gain.setValueAtTime(1,this._preDelay),o.gain.exponentialApproachValueAtTime(0,this._preDelay,this.decay);const a=e.render();return this.ready=a.then(Q),yield t,this._convolver.buffer=(yield a).get(),this})}dispose(){return super.dispose(),this._convolver.disconnect(),this}}class pt extends M{constructor(){const t=I(pt.getDefaults(),arguments,["solo"]);super(t),this.name="Solo",this.input=this.output=new U({context:this.context}),pt._allSolos.has(this.context)||pt._allSolos.set(this.context,new Set),pt._allSolos.get(this.context).add(this),this.solo=t.solo}static getDefaults(){return Object.assign(M.getDefaults(),{solo:!1})}get solo(){return this._isSoloed()}set solo(t){t?this._addSolo():this._removeSolo(),pt._allSolos.get(this.context).forEach(e=>e._updateSolo())}get muted(){return this.input.gain.value===0}_addSolo(){pt._soloed.has(this.context)||pt._soloed.set(this.context,new Set),pt._soloed.get(this.context).add(this)}_removeSolo(){pt._soloed.has(this.context)&&pt._soloed.get(this.context).delete(this)}_isSoloed(){return pt._soloed.has(this.context)&&pt._soloed.get(this.context).has(this)}_noSolos(){return!pt._soloed.has(this.context)||pt._soloed.has(this.context)&&pt._soloed.get(this.context).size===0}_updateSolo(){this._isSoloed()?this.input.gain.value=1:this._noSolos()?this.input.gain.value=1:this.input.gain.value=0}dispose(){return super.dispose(),pt._allSolos.get(this.context).delete(this),this._removeSolo(),this}}pt._allSolos=new Map,pt._soloed=new Map;class vi extends M{constructor(){const t=I(vi.getDefaults(),arguments,["pan","volume"]);super(t),this.name="PanVol",this._panner=this.input=new ds({context:this.context,pan:t.pan,channelCount:t.channelCount}),this.pan=this._panner.pan,this._volume=this.output=new je({context:this.context,volume:t.volume}),this.volume=this._volume.volume,this._panner.connect(this._volume),this.mute=t.mute,Y(this,["pan","volume"])}static getDefaults(){return Object.assign(M.getDefaults(),{mute:!1,pan:0,volume:0,channelCount:1})}get mute(){return this._volume.mute}set mute(t){this._volume.mute=t}dispose(){return super.dispose(),this._panner.dispose(),this.pan.dispose(),this._volume.dispose(),this.volume.dispose(),this}}class He extends M{constructor(){const t=I(He.getDefaults(),arguments,["volume","pan"]);super(t),this.name="Channel",this._solo=this.input=new pt({solo:t.solo,context:this.context}),this._panVol=this.output=new vi({context:this.context,pan:t.pan,volume:t.volume,mute:t.mute,channelCount:t.channelCount}),this.pan=this._panVol.pan,this.volume=this._panVol.volume,this._solo.connect(this._panVol),Y(this,["pan","volume"])}static getDefaults(){return Object.assign(M.getDefaults(),{pan:0,volume:0,mute:!1,solo:!1,channelCount:1})}get solo(){return this._solo.solo}set solo(t){this._solo.solo=t}get muted(){return this._solo.muted||this.mute}get mute(){return this._panVol.mute}set mute(t){this._panVol.mute=t}_getBus(t){return He.buses.has(t)||He.buses.set(t,new U({context:this.context})),He.buses.get(t)}send(t,e=0){const n=this._getBus(t),i=new U({context:this.context,units:"decibels",gain:e});return this.connect(i),i.connect(n),i}receive(t){return this._getBus(t).connect(this),this}dispose(){return super.dispose(),this._panVol.dispose(),this.pan.dispose(),this.volume.dispose(),this._solo.dispose(),this}}He.buses=new Map,bt().transport;function Jh(){return bt().transport}bt().destination,bt().destination;function Kh(){return bt().destination}bt().listener,bt().draw,bt();const wi=Kh();wi.channelCount=wi.maxChannelCount;const ro=new be({channels:32}),Ti=Array.from({length:32},(s,t)=>new U(1));function J(s,t){t!==void 0&&(t instanceof ze||t instanceof G||t instanceof Ht||t instanceof ps||t instanceof U||t instanceof pe?t.connect(s):s.value=t)}function ut(s){return typeof s=="number"?s:s instanceof G?s.value:0}function bi(s){return typeof s=="number"?new G(s):s}function td(s){const t=ut(s);return[-12,-24,-48,-96].includes(t)?t:-12}function fs(s,t=220){const e=new ot(220,s).sync().start("0.05");return J(e.frequency,t),e}function Tn(s,t=1,e=1,n="sine",i="sine"){const r=new yn(220,n,i).sync().start("0.05");return J(r.frequency,s),J(r.harmonicity,t),J(r.modulationIndex,e),r}function bn(s=220,t=1,e="sine",n="sine"){const i=new gn(220,e,n).sync().start("0.05");return J(i.frequency,s),J(i.harmonicity,t),i}function ed(s=220,t=.5){const e=new wn(220).sync().start("0.05");return J(e.frequency,s),J(e.modulationFrequency,t),e}function xn(s=220,t=10,e="sine"){const n=new vn(220,e,ut(t)).sync().start("0.05");return J(n.frequency,s),n}function xi(s,t="lowpass",e=1e3,n=1,i=-12){const r=new li(1e3,t);return r.set({rolloff:td(i),Q:ut(n)}),J(r.frequency,e),J(r.Q,n),s.connect(r),r}function Cn(s,t=.5,e=0,n=1){const i=new ze({min:ut(e),max:ut(n),type:s}).sync().start("0.05");return J(i.frequency,t),i}let Ci=[],ms=Ti;const oo={core:{value:s=>s},signals:{sig:s=>new G(s),s:s=>new G(s),add:(s,t)=>{const e=new ns(ut(t));return J(e.addend,t),s.connect(e),e},mul:(s,t)=>{const e=new Yt(ut(t));return J(e.factor,bi(t)),s.connect(e),e},sub:(s,t)=>{const e=new is(ut(t));return J(e.subtrahend,bi(t)),s.connect(e),e},...Object.fromEntries([Qr,ai,rs,Kr,Jr,ri,mn,pe,ci].map(s=>[s.name.toLowerCase().replace(/_/g,""),(e,...n)=>{const i=new s(...n);return e.connect(i),i}]))},oscillators:{sine:(s=220)=>fs("sine",s),tri:(s=220)=>fs("triangle",s),square:(s=220)=>fs("square",s),saw:(s=220)=>fs("sawtooth",s),fm:(s=220,t=1,e=1)=>Tn(s,t,e),fmsine:(s=220,t=1,e=1)=>Tn(s,t,e,"sine"),fmtri:(s=220,t=1,e=1)=>Tn(s,t,e,"triangle"),fmsquare:(s=220,t=1,e=1)=>Tn(s,t,e,"square"),fmsaw:(s=220,t=1,e=1)=>Tn(s,t,e,"sawtooth"),am:(s=220,t=1)=>bn(s,t),amsine:(s=220,t=1)=>bn(s,t,"sine"),amtri:(s=220,t=1)=>bn(s,t,"triangle"),amsquare:(s=220,t=1)=>bn(s,t,"square"),amsaw:(s=220,t=1)=>bn(s,t,"sawtooth"),pulse:(s=220,t=.5)=>{const e=new Ge(220,ut(t)).sync().start("0.05");return J(e.frequency,s),J(e.width,t),e},pwm:(s=220,t=.5)=>ed(s,t),fat:(s=220,t=10)=>xn(s,t),fatsine:(s=220,t=10)=>xn(s,t,"sine"),fattri:(s=220,t=10)=>xn(s,t,"triangle"),fatsquare:(s=220,t=10)=>xn(s,t,"square"),fatsaw:(s=220,t=10)=>xn(s,t,"sawtooth")},noise:{white:()=>new we("white").start(0),pink:()=>new we("pink").start(0),brown:()=>new we("brown").start(0)},lfos:{lfo:(s,t=0,e=1)=>Cn("sine",s,t,e),lfosine:(s,t=0,e=1)=>Cn("sine",s,t,e),lfotri:(s,t=0,e=1)=>Cn("triangle",s,t,e),lfosquare:(s,t=0,e=1)=>Cn("square",s,t,e),lfosaw:(s,t=0,e=1)=>Cn("sawtooth",s,t,e)},envelopes:{adsr:(s=100,t=100,e=.5,n=800)=>(s/=1e3,t/=1e3,n/=1e3,new Ht({attack:s,decay:t,sustain:e,release:n}))},modifiers:{amp:(s,t)=>{const e=new U(1);return J(e.gain,t),s.connect(e),e}},metering:{follow:(s,t=.01)=>{const e=new ps(ut(t)),n=new G;return s.connect(e),e.connect(n),n}},filters:{hpf:(s,t=1e3,e=1,n=-12)=>xi(s,"highpass",t,e,n),lpf:(s,t=1e3,e=1,n=-12)=>xi(s,"lowpass",t,e,n),bpf:(s,t=1e3,e=1,n=-12)=>xi(s,"bandpass",t,e,n),fbf:(s,t=.5,e=.5)=>{const n=new pi({delayTime:ut(t),resonance:ut(e)});return J(n.delayTime,t),J(n.resonance,e),s.connect(n),n}},effects:{reverb:(s,t=.5,e=1e3)=>{const n=new yi(ut(e)/1e3);return J(n.wet,t),s.connect(n),n},delay:(s,t=.5,e=.5,n=.5)=>{const i=new gi({delayTime:ut(e),feedback:ut(n),wet:ut(t)});return J(i.wet,t),J(i.delayTime,e),J(i.feedback,n),s.connect(i),i},dist:(s,t=.5,e=.5)=>{const n=new _i(ut(e));return J(n.wet,t),s.connect(n),n},chorus:(s,t=.5,e=1,n=.005,i=.7)=>{const r=new mi({wet:ut(t),frequency:ut(e),feedback:ut(n),depth:ut(i)});return J(r.wet,t),J(r.frequency,e),J(r.feedback,n),s.connect(r),r}},routing:{pan:(s,t=.5)=>{const e=bi(t),n=new pe(-1,1);e.connect(n);const i=new ds(ut(n));return J(i.pan,n),s.connect(i),i},out:(s,...t)=>{const e=new U(0);s.connect(e),t=t.length>0?t:[0,1];const n=new Ye(t.length);return e.connect(n),t.forEach((i,r)=>n.connect(ro,r,i)),e},bus:(s,t)=>{if(typeof s=="number"){const e=s,n=new We(.01);return ms[e].connect(n),n}else{const e=s;return e.connect(ms[t||0]),e}},stack:(...s)=>{if(s.length===0)throw new Error("No nodes provided to stack");const t=new U(1);return s.forEach(e=>{e.gain?.rampTo(1,.1),e.connect(t),Ci.push(()=>{e.gain?.rampTo(0,.1),setTimeout(()=>e.dispose(),1e3)})}),t}}},Si=Object.values(oo).reduce((s,t)=>(Object.entries(t).forEach(([e,n])=>{s[e]=n}),s)),nd=Object.entries(oo).reduce((s,[t,e])=>({...s,[t]:Object.keys(e)}),{}),sd={_signal:s=>(t,e,n)=>(n?s.rampTo(t,n/1e3,e):s.setValueAtTime(t,e),s),_envelope:s=>t=>{const{a:e=10,d:n=10,s:i=.5,r=800}=t;return s.set({attack:e/1e3,decay:n/1e3,sustain:i,release:r/1e3}),s}};function id(s){return Object.entries(s).reduce((t,[e,n])=>{const i=sd[n.constructor.name.toLowerCase()];return t[e]=i?i(n):()=>{},t},{})}const rd=(s,t)=>{Ci=[],ms=t||ms;const e=new Function(...Object.keys(Si),s)(...Object.values(Si)),{inputs:n,output:i}=e;return{inputs:id(n||{}),output:i,dispose:()=>{e.output?.gain?.rampTo(0,.5),Ci.forEach(r=>r()),setTimeout(()=>i?.dispose?.(),1e3)}}};class xe{type;inputs;id;constructor(t,e=[],n){this.type=t,this.inputs=e,this.id=n}toCode(t,e,n,i){let r=`let ${e} = ${t.type}(${n.join(",")});`;return r+=i?` inputs = {...inputs, ${i}: ${e}};`:"",r}toScript(){let t=Array.from(co(this));const e=r=>typeof r!="object"?r:`v${t.indexOf(r)}`;let n=[];for(let r in t){const o=t[r],a=o.inputs.map(e),c=e(o);n.push(o.toCode(o,c,a,o.id))}const i=e(t[t.length-1]);return{lines:n,last:i}}}function ao(s){return s instanceof xe?s:new xe("value",[s])}function*co(s,t=new Set){if(!(!(s instanceof xe)||t.has(s))){t.add(xe);for(let e of s.inputs)yield*co(e,t);yield s}}function od(s){return xe.prototype[s]=function(...t){const e=typeof t[0]=="string"?t[0]:void 0;return e&&t.shift(),new xe(s,[this,...t].map(ao),e)},(...t)=>{const e=typeof t[0]=="string"?t[0]:void 0;return e&&t.shift(),new xe(s,t.map(ao),e)}}class ad{_context=bt();_transport;_outputs=ro;_busses=Ti;_nodes={};_transpiledCode="";_patch;_isNewPatch=!1;libraryKeys=nd;constructor(t){this._context=t?.context||bt(),this._transport=t?.transport||Jh(),this._busses=t?.busses||Ti,this.loadNodes(Si)}loadNodes(t){this._nodes=Object.keys(t).reduce((e,n)=>(e[n]=od(n),e),{})}parseCode(t){return t=t.replace(/;/g,""),t=t.replace(/(\(|,)([a-zA-Z_][a-zA-Z0-9_]*)(?=\)|,)/g,(e,n,i)=>`${n}'${i}'`),t=t.replace(/#(e\d*)/g,(e,n)=>`adsr('${n}')`),t=t.replace(/#([a-zA-Z_][a-zA-Z0-9_]*)/g,(e,n)=>`s('${n}')`),t}set(t){try{const n=new Function(...Object.keys(this._nodes),`return (${this.parseCode(t)});`)(...Object.values(this._nodes)).toScript(),i=`let inputs = {};
${n.lines.join(`
`)}
return {inputs, output: ${n.last}};`;this._isNewPatch=i!==this._transpiledCode,this._transpiledCode=i}catch(e){console.error("Error during transpilation:",e)}return this}get inputs(){return this._patch?.inputs||{}}start(){try{this._isNewPatch&&(this._busses.forEach(t=>t.disconnect()),this._patch?.dispose(),this._patch=rd(this._transpiledCode,this._busses)),this._patch?.output?.gain?.rampTo(.25,.1),this._transport?.start()}catch(t){console.error("Error compiling code:",t)}return this}stop(){return this._transport?.stop(),this._patch?.output?.gain?.rampTo(0,.1),this}clear(){return this._transport?.stop(),this._patch?.dispose(),this._patch=null,this._transpiledCode="",this._isNewPatch=!1,this}play(t={},e){Object.keys(this.inputs).forEach(r=>t[r]&&this.inputs[r](t[r],e));const{dur:n=1e3}=t,i=Object.entries(t).filter(([r])=>/^([adsr])\d*$/.test(r)).reduce((r,[o,a])=>{const[,c,u=""]=o.match(/^([adsr])(\d*)$/),l=`e${u}`;return{...r,[l]:{...r[l]||{},[c]:a}}},{e:{}});return Object.keys(this.inputs).filter(r=>/^e\d*$/.test(r)).forEach(r=>{const o=i[r]||{};this.inputs[r](o).triggerAttackRelease(n/1e3,e)}),this}mutate(t={},e,n){return Object.keys(this.inputs).forEach(i=>t[i]!==void 0&&this.inputs[i](t[i],e,n)),this}cut(t,e=10){return Object.keys(this.inputs).filter(n=>/^e\d*$/.test(n)).forEach(n=>{this.inputs[n]({}).triggerRelease(t,e/1e3)}),this}disconnect(){return this._outputs.disconnect(),this}connect(t,e){if(e!==void 0){const n=[e].flat(),i=new Ye(32),r=new be(n.length);this._outputs.connect(i),[e].flat().forEach((o,a)=>{i.connect(r,o,a)}),r.connect(t)}else this._outputs.connect(t);return this}toDestination(){return this._outputs.connect(wi),this}}const cd=document.getElementById("start"),ud=document.getElementById("stop"),Sn=document.getElementById("code"),ld=document.getElementById("nodes");localStorage.getItem("zmod-code")&&(Sn.value=localStorage.getItem("zmod-code")||"");const ki=new ad().toDestination();ld.innerHTML=Object.entries(ki.libraryKeys).filter(([s,t])=>s!=="core").map(([s,t])=>`<p><strong>${s}</strong>: ${t.join(", ")}</p>`).join("");const uo=()=>ki.set(Sn.value).start(),lo=()=>ki.stop();cd?.addEventListener("click",uo),ud?.addEventListener("click",lo),Sn?.addEventListener("keydown",s=>{s.shiftKey&&s.key==="Enter"&&(s.preventDefault(),localStorage.setItem("zmod-code",Sn.value),uo())}),Sn?.addEventListener("keydown",s=>{s.key==="Escape"&&(s.preventDefault(),lo())})});
